{"ast":null,"code":"// import React, { useRef, useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import \"./Login.css\";\n\n// export default function LoginPage() {\n//     const [errorMessage, setErrorMessage] = useState(\"\");\n//     const usernameRef = useRef();\n//     const passwordRef = useRef();\n//     const navigate = useNavigate();\n\n//     const handleSignIn = async () => {\n//         const username = usernameRef.current.value.trim();\n//         const password = passwordRef.current.value.trim();\n\n//         // Validate input fields\n//         if (!username || !password) {\n//             setErrorMessage(\"Please fill out both fields!\");\n//             return;\n//         }\n\n//         try {\n//             const response = await fetch(\"http://localhost:8085/api/farmers/getall\", {\n//                 method: \"GET\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                 },\n//             });\n\n//             if (!response.ok) {\n//                 throw new Error(\"Failed to fetch user data.\");\n//             }\n\n//             const users = await response.json();\n\n//             // Check if user exists\n//             const user = users.find(\n//                 (u) => u.email === username && u.password === password\n//             );\n\n//             if (user) {\n//                 alert(\"Login successful!\");\n//                 navigate(\"/custheader/dashboard\");\n//             } else {\n//                 setErrorMessage(\"Invalid username or password.\");\n//             }\n//         } catch (error) {\n//             console.error(error);\n//             setErrorMessage(\"An error occurred while signing in. Please try again later.\");\n//         }\n//     };\n\n//     return (\n//         <div className=\"unique-login-page\">\n//             <div className=\"unique-login-container\">\n//                 <div className=\"unique-form-container\">\n//                     <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\n//                     <h2 className=\"unique-form-title\">Sign In</h2>\n//                     <form\n//                         className=\"unique-form unique-signin-form\"\n//                         onSubmit={(e) => e.preventDefault()}\n//                     >\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                         <div className=\"unique-form-group\">\n//                             <label htmlFor=\"username\">Username (Email)</label>\n//                             <input\n//                                 className=\"unique-form-input\"\n//                                 type=\"text\"\n//                                 name=\"username\"\n//                                 placeholder=\"Enter your username\"\n//                                 ref={usernameRef}\n//                                 required\n//                             />\n//                         </div>\n//                         <div className=\"unique-form-group\">\n//                             <label htmlFor=\"password\">Password</label>\n//                             <input\n//                                 className=\"unique-form-input\"\n//                                 type=\"password\"\n//                                 name=\"password\"\n//                                 placeholder=\"Enter your password\"\n//                                 ref={passwordRef}\n//                                 required\n//                             />\n//                         </div>\n//                         <div className=\"unique-form-options\">\n//                             <label className=\"unique-checkbox-label\">\n//                                 <input type=\"checkbox\" id=\"keepSignedIn\" />\n//                                 Keep me signed in\n//                             </label>\n//                         </div>\n//                         <button\n//                             type=\"button\"\n//                             className=\"unique-form-submit-button\"\n//                             onClick={handleSignIn}\n//                         >\n//                             Sign In\n//                         </button>\n//                     </form>\n//                     <div className=\"unique-signup-link\">\n//                         <p>\n//                             Don't have an account? <Link to=\"/signup\">Sign Up</Link>\n//                         </p>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Lenovo/Desktop/New folder/project/src/components/login/Login.js"],"sourcesContent":["// import React, { useRef, useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import \"./Login.css\";\r\n\r\n// export default function LoginPage() {\r\n//     const [errorMessage, setErrorMessage] = useState(\"\");\r\n//     const usernameRef = useRef();\r\n//     const passwordRef = useRef();\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleSignIn = async () => {\r\n//         const username = usernameRef.current.value.trim();\r\n//         const password = passwordRef.current.value.trim();\r\n\r\n//         // Validate input fields\r\n//         if (!username || !password) {\r\n//             setErrorMessage(\"Please fill out both fields!\");\r\n//             return;\r\n//         }\r\n\r\n//         try {\r\n//             const response = await fetch(\"http://localhost:8085/api/farmers/getall\", {\r\n//                 method: \"GET\",\r\n//                 headers: {\r\n//                     \"Content-Type\": \"application/json\",\r\n//                 },\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 throw new Error(\"Failed to fetch user data.\");\r\n//             }\r\n\r\n//             const users = await response.json();\r\n\r\n//             // Check if user exists\r\n//             const user = users.find(\r\n//                 (u) => u.email === username && u.password === password\r\n//             );\r\n\r\n//             if (user) {\r\n//                 alert(\"Login successful!\");\r\n//                 navigate(\"/custheader/dashboard\");\r\n//             } else {\r\n//                 setErrorMessage(\"Invalid username or password.\");\r\n//             }\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//             setErrorMessage(\"An error occurred while signing in. Please try again later.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"unique-login-page\">\r\n//             <div className=\"unique-login-container\">\r\n//                 <div className=\"unique-form-container\">\r\n//                     <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\r\n//                     <h2 className=\"unique-form-title\">Sign In</h2>\r\n//                     <form\r\n//                         className=\"unique-form unique-signin-form\"\r\n//                         onSubmit={(e) => e.preventDefault()}\r\n//                     >\r\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n//                         <div className=\"unique-form-group\">\r\n//                             <label htmlFor=\"username\">Username (Email)</label>\r\n//                             <input\r\n//                                 className=\"unique-form-input\"\r\n//                                 type=\"text\"\r\n//                                 name=\"username\"\r\n//                                 placeholder=\"Enter your username\"\r\n//                                 ref={usernameRef}\r\n//                                 required\r\n//                             />\r\n//                         </div>\r\n//                         <div className=\"unique-form-group\">\r\n//                             <label htmlFor=\"password\">Password</label>\r\n//                             <input\r\n//                                 className=\"unique-form-input\"\r\n//                                 type=\"password\"\r\n//                                 name=\"password\"\r\n//                                 placeholder=\"Enter your password\"\r\n//                                 ref={passwordRef}\r\n//                                 required\r\n//                             />\r\n//                         </div>\r\n//                         <div className=\"unique-form-options\">\r\n//                             <label className=\"unique-checkbox-label\">\r\n//                                 <input type=\"checkbox\" id=\"keepSignedIn\" />\r\n//                                 Keep me signed in\r\n//                             </label>\r\n//                         </div>\r\n//                         <button\r\n//                             type=\"button\"\r\n//                             className=\"unique-form-submit-button\"\r\n//                             onClick={handleSignIn}\r\n//                         >\r\n//                             Sign In\r\n//                         </button>\r\n//                     </form>\r\n//                     <div className=\"unique-signup-link\">\r\n//                         <p>\r\n//                             Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n//                         </p>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}