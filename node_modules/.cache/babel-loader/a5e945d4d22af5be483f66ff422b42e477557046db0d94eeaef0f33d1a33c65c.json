{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder\\\\project\\\\src\\\\components\\\\login\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useRef, useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import \"./Login.css\";\n\n// export default function LoginPage() {\n//     const [errorMessage, setErrorMessage] = useState(\"\");\n//     const usernameRef = useRef();\n//     const passwordRef = useRef();\n//     const navigate = useNavigate();\n\n//     const handleSignIn = async () => {\n//         const username = usernameRef.current.value.trim();\n//         const password = passwordRef.current.value.trim();\n\n//         // Validate input fields\n//         if (!username || !password) {\n//             setErrorMessage(\"Please fill out both fields!\");\n//             return;\n//         }\n\n//         try {\n//             const response = await fetch(\"http://localhost:8085/api/farmers/getall\", {\n//                 method: \"GET\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                 },\n//             });\n\n//             if (!response.ok) {\n//                 throw new Error(\"Failed to fetch user data.\");\n//             }\n\n//             const users = await response.json();\n\n//             // Check if user exists\n//             const user = users.find(\n//                 (u) => u.email === username && u.password === password\n//             );\n\n//             if (user) {\n//                 alert(\"Login successful!\");\n//                 navigate(\"/custheader/dashboard\");\n//             } else {\n//                 setErrorMessage(\"Invalid username or password.\");\n//             }\n//         } catch (error) {\n//             console.error(error);\n//             setErrorMessage(\"An error occurred while signing in. Please try again later.\");\n//         }\n//     };\n\n//     return (\n//         <div className=\"unique-login-page\">\n//             <div className=\"unique-login-container\">\n//                 <div className=\"unique-form-container\">\n//                     <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\n//                     <h2 className=\"unique-form-title\">Sign In</h2>\n//                     <form\n//                         className=\"unique-form unique-signin-form\"\n//                         onSubmit={(e) => e.preventDefault()}\n//                     >\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                         <div className=\"unique-form-group\">\n//                             <label htmlFor=\"username\">Username (Email)</label>\n//                             <input\n//                                 className=\"unique-form-input\"\n//                                 type=\"text\"\n//                                 name=\"username\"\n//                                 placeholder=\"Enter your username\"\n//                                 ref={usernameRef}\n//                                 required\n//                             />\n//                         </div>\n//                         <div className=\"unique-form-group\">\n//                             <label htmlFor=\"password\">Password</label>\n//                             <input\n//                                 className=\"unique-form-input\"\n//                                 type=\"password\"\n//                                 name=\"password\"\n//                                 placeholder=\"Enter your password\"\n//                                 ref={passwordRef}\n//                                 required\n//                             />\n//                         </div>\n//                         <div className=\"unique-form-options\">\n//                             <label className=\"unique-checkbox-label\">\n//                                 <input type=\"checkbox\" id=\"keepSignedIn\" />\n//                                 Keep me signed in\n//                             </label>\n//                         </div>\n//                         <button\n//                             type=\"button\"\n//                             className=\"unique-form-submit-button\"\n//                             onClick={handleSignIn}\n//                         >\n//                             Sign In\n//                         </button>\n//                     </form>\n//                     <div className=\"unique-signup-link\">\n//                         <p>\n//                             Don't have an account? <Link to=\"/signup\">Sign Up</Link>\n//                         </p>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// import React, { useRef, useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import \"./Login.css\";\n\n// export default function LoginPage() {\n//     const [errorMessage, setErrorMessage] = useState(\"\");\n//     const usernameRef = useRef();\n//     const passwordRef = useRef();\n//     const navigate = useNavigate();\n\n//     const handleSignIn = async () => {\n//         const username = usernameRef.current.value.trim();\n//         const password = passwordRef.current.value.trim();\n\n//         // Validate input fields\n//         if (!username || !password) {\n//             setErrorMessage(\"Please fill out both fields!\");\n//             return;\n//         }\n\n//         try {\n//             const response = await fetch(\"http://localhost:8085/api/farmers/getall\", {\n//                 method: \"GET\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                 },\n//             });\n\n//             if (!response.ok) {\n//                 throw new Error(\"Failed to fetch user data.\");\n//             }\n\n//             const users = await response.json();\n\n//             // Check if user exists\n//             const user = users.find(\n//                 (u) => u.email === username && u.password === password\n//             );\n\n//             if (user) {\n//                 // Store user ID in localStorage or sessionStorage\n//                 localStorage.setItem(\"userId\", user.id);  // Store the user ID\n//                 alert(\"Login successful!\");\n//                 navigate(\"/custheader/dashboard\");\n//             } else {\n//                 setErrorMessage(\"Invalid username or password.\");\n//             }\n//         } catch (error) {\n//             console.error(error);\n//             setErrorMessage(\"An error occurred while signing in. Please try again later.\");\n//         }\n//     };\n\n//     return (\n//         <div className=\"unique-login-page\">\n//             <div className=\"unique-login-container\">\n//                 <div className=\"unique-form-container\">\n//                     <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\n//                     <h2 className=\"unique-form-title\">Sign In</h2>\n//                     <form\n//                         className=\"unique-form unique-signin-form\"\n//                         onSubmit={(e) => e.preventDefault()}\n//                     >\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                         <div className=\"unique-form-group\">\n//                             <label htmlFor=\"username\">Username (Email)</label>\n//                             <input\n//                                 className=\"unique-form-input\"\n//                                 type=\"text\"\n//                                 name=\"username\"\n//                                 placeholder=\"Enter your username\"\n//                                 ref={usernameRef}\n//                                 required\n//                             />\n//                         </div>\n//                         <div className=\"unique-form-group\">\n//                             <label htmlFor=\"password\">Password</label>\n//                             <input\n//                                 className=\"unique-form-input\"\n//                                 type=\"password\"\n//                                 name=\"password\"\n//                                 placeholder=\"Enter your password\"\n//                                 ref={passwordRef}\n//                                 required\n//                             />\n//                         </div>\n//                         <div className=\"unique-form-options\">\n//                             <label className=\"unique-checkbox-label\">\n//                                 <input type=\"checkbox\" id=\"keepSignedIn\" />\n//                                 Keep me signed in\n//                             </label>\n//                         </div>\n//                         <button\n//                             type=\"button\"\n//                             className=\"unique-form-submit-button\"\n//                             onClick={handleSignIn}\n//                         >\n//                             Sign In\n//                         </button>\n//                     </form>\n//                     <div className=\"unique-signup-link\">\n//                         <p>\n//                             Don't have an account? <Link to=\"/signup\">Sign Up</Link>\n//                         </p>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\nimport React, { useRef, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\nimport CryptoJS from \"crypto-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const usernameRef = useRef();\n  const passwordRef = useRef();\n  const navigate = useNavigate();\n  const secretKey = \"your-secret-key\"; // Change this key for better security\n\n  const decryptPassword = encryptedPassword => {\n    const bytes = CryptoJS.AES.decrypt(encryptedPassword, secretKey);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  };\n  const handleSignIn = async () => {\n    const username = usernameRef.current.value.trim();\n    const password = passwordRef.current.value.trim();\n    if (!username || !password) {\n      setErrorMessage(\"Please fill out both fields!\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:8085/api/farmers/getall\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch user data.\");\n      }\n      const users = await response.json();\n      const user = users.find(u => u.email === username && decryptPassword(u.password) === password);\n      if (user) {\n        localStorage.setItem(\"userId\", user.id);\n        alert(\"Login successful!\");\n        navigate(\"/custheader/dashboard\");\n      } else {\n        setErrorMessage(\"Invalid username or password.\");\n      }\n    } catch (error) {\n      console.error(error);\n      setErrorMessage(\"An error occurred while signing in. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unique-login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unique-login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unique-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/loginc\",\n          className: \"signup-link\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"unique-form-title\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"unique-form\",\n          onSubmit: e => e.preventDefault(),\n          children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unique-form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username (Email)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"unique-form-input\",\n              type: \"text\",\n              name: \"username\",\n              placeholder: \"Enter your username\",\n              ref: usernameRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unique-form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"unique-form-input\",\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Enter your password\",\n              ref: passwordRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unique-form-options\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"unique-checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"keepSignedIn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this), \"Keep me signed in\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"unique-form-submit-button\",\n            onClick: handleSignIn,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"unique-signup-link\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"aTKiWmvN1IH3ju9JUEUZNu5rZZw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useRef","useState","Link","useNavigate","CryptoJS","jsxDEV","_jsxDEV","LoginPage","_s","errorMessage","setErrorMessage","usernameRef","passwordRef","navigate","secretKey","decryptPassword","encryptedPassword","bytes","AES","decrypt","toString","enc","Utf8","handleSignIn","username","current","value","trim","password","response","fetch","method","headers","ok","Error","users","json","user","find","u","email","localStorage","setItem","id","alert","error","console","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","htmlFor","type","name","placeholder","ref","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/New folder/project/src/components/login/Login.js"],"sourcesContent":["// import React, { useRef, useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import \"./Login.css\";\r\n\r\n// export default function LoginPage() {\r\n//     const [errorMessage, setErrorMessage] = useState(\"\");\r\n//     const usernameRef = useRef();\r\n//     const passwordRef = useRef();\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleSignIn = async () => {\r\n//         const username = usernameRef.current.value.trim();\r\n//         const password = passwordRef.current.value.trim();\r\n\r\n//         // Validate input fields\r\n//         if (!username || !password) {\r\n//             setErrorMessage(\"Please fill out both fields!\");\r\n//             return;\r\n//         }\r\n\r\n//         try {\r\n//             const response = await fetch(\"http://localhost:8085/api/farmers/getall\", {\r\n//                 method: \"GET\",\r\n//                 headers: {\r\n//                     \"Content-Type\": \"application/json\",\r\n//                 },\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 throw new Error(\"Failed to fetch user data.\");\r\n//             }\r\n\r\n//             const users = await response.json();\r\n\r\n//             // Check if user exists\r\n//             const user = users.find(\r\n//                 (u) => u.email === username && u.password === password\r\n//             );\r\n\r\n//             if (user) {\r\n//                 alert(\"Login successful!\");\r\n//                 navigate(\"/custheader/dashboard\");\r\n//             } else {\r\n//                 setErrorMessage(\"Invalid username or password.\");\r\n//             }\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//             setErrorMessage(\"An error occurred while signing in. Please try again later.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"unique-login-page\">\r\n//             <div className=\"unique-login-container\">\r\n//                 <div className=\"unique-form-container\">\r\n//                     <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\r\n//                     <h2 className=\"unique-form-title\">Sign In</h2>\r\n//                     <form\r\n//                         className=\"unique-form unique-signin-form\"\r\n//                         onSubmit={(e) => e.preventDefault()}\r\n//                     >\r\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n//                         <div className=\"unique-form-group\">\r\n//                             <label htmlFor=\"username\">Username (Email)</label>\r\n//                             <input\r\n//                                 className=\"unique-form-input\"\r\n//                                 type=\"text\"\r\n//                                 name=\"username\"\r\n//                                 placeholder=\"Enter your username\"\r\n//                                 ref={usernameRef}\r\n//                                 required\r\n//                             />\r\n//                         </div>\r\n//                         <div className=\"unique-form-group\">\r\n//                             <label htmlFor=\"password\">Password</label>\r\n//                             <input\r\n//                                 className=\"unique-form-input\"\r\n//                                 type=\"password\"\r\n//                                 name=\"password\"\r\n//                                 placeholder=\"Enter your password\"\r\n//                                 ref={passwordRef}\r\n//                                 required\r\n//                             />\r\n//                         </div>\r\n//                         <div className=\"unique-form-options\">\r\n//                             <label className=\"unique-checkbox-label\">\r\n//                                 <input type=\"checkbox\" id=\"keepSignedIn\" />\r\n//                                 Keep me signed in\r\n//                             </label>\r\n//                         </div>\r\n//                         <button\r\n//                             type=\"button\"\r\n//                             className=\"unique-form-submit-button\"\r\n//                             onClick={handleSignIn}\r\n//                         >\r\n//                             Sign In\r\n//                         </button>\r\n//                     </form>\r\n//                     <div className=\"unique-signup-link\">\r\n//                         <p>\r\n//                             Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n//                         </p>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\n// import React, { useRef, useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import \"./Login.css\";\r\n\r\n// export default function LoginPage() {\r\n//     const [errorMessage, setErrorMessage] = useState(\"\");\r\n//     const usernameRef = useRef();\r\n//     const passwordRef = useRef();\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleSignIn = async () => {\r\n//         const username = usernameRef.current.value.trim();\r\n//         const password = passwordRef.current.value.trim();\r\n\r\n//         // Validate input fields\r\n//         if (!username || !password) {\r\n//             setErrorMessage(\"Please fill out both fields!\");\r\n//             return;\r\n//         }\r\n\r\n//         try {\r\n//             const response = await fetch(\"http://localhost:8085/api/farmers/getall\", {\r\n//                 method: \"GET\",\r\n//                 headers: {\r\n//                     \"Content-Type\": \"application/json\",\r\n//                 },\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 throw new Error(\"Failed to fetch user data.\");\r\n//             }\r\n\r\n//             const users = await response.json();\r\n\r\n//             // Check if user exists\r\n//             const user = users.find(\r\n//                 (u) => u.email === username && u.password === password\r\n//             );\r\n\r\n//             if (user) {\r\n//                 // Store user ID in localStorage or sessionStorage\r\n//                 localStorage.setItem(\"userId\", user.id);  // Store the user ID\r\n//                 alert(\"Login successful!\");\r\n//                 navigate(\"/custheader/dashboard\");\r\n//             } else {\r\n//                 setErrorMessage(\"Invalid username or password.\");\r\n//             }\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//             setErrorMessage(\"An error occurred while signing in. Please try again later.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"unique-login-page\">\r\n//             <div className=\"unique-login-container\">\r\n//                 <div className=\"unique-form-container\">\r\n//                     <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\r\n//                     <h2 className=\"unique-form-title\">Sign In</h2>\r\n//                     <form\r\n//                         className=\"unique-form unique-signin-form\"\r\n//                         onSubmit={(e) => e.preventDefault()}\r\n//                     >\r\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n//                         <div className=\"unique-form-group\">\r\n//                             <label htmlFor=\"username\">Username (Email)</label>\r\n//                             <input\r\n//                                 className=\"unique-form-input\"\r\n//                                 type=\"text\"\r\n//                                 name=\"username\"\r\n//                                 placeholder=\"Enter your username\"\r\n//                                 ref={usernameRef}\r\n//                                 required\r\n//                             />\r\n//                         </div>\r\n//                         <div className=\"unique-form-group\">\r\n//                             <label htmlFor=\"password\">Password</label>\r\n//                             <input\r\n//                                 className=\"unique-form-input\"\r\n//                                 type=\"password\"\r\n//                                 name=\"password\"\r\n//                                 placeholder=\"Enter your password\"\r\n//                                 ref={passwordRef}\r\n//                                 required\r\n//                             />\r\n//                         </div>\r\n//                         <div className=\"unique-form-options\">\r\n//                             <label className=\"unique-checkbox-label\">\r\n//                                 <input type=\"checkbox\" id=\"keepSignedIn\" />\r\n//                                 Keep me signed in\r\n//                             </label>\r\n//                         </div>\r\n//                         <button\r\n//                             type=\"button\"\r\n//                             className=\"unique-form-submit-button\"\r\n//                             onClick={handleSignIn}\r\n//                         >\r\n//                             Sign In\r\n//                         </button>\r\n//                     </form>\r\n//                     <div className=\"unique-signup-link\">\r\n//                         <p>\r\n//                             Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n//                         </p>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nexport default function LoginPage() {\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const usernameRef = useRef();\r\n  const passwordRef = useRef();\r\n  const navigate = useNavigate();\r\n\r\n  const secretKey = \"your-secret-key\"; // Change this key for better security\r\n\r\n  const decryptPassword = (encryptedPassword) => {\r\n    const bytes = CryptoJS.AES.decrypt(encryptedPassword, secretKey);\r\n    return bytes.toString(CryptoJS.enc.Utf8);\r\n  };\r\n\r\n  const handleSignIn = async () => {\r\n    const username = usernameRef.current.value.trim();\r\n    const password = passwordRef.current.value.trim();\r\n\r\n    if (!username || !password) {\r\n      setErrorMessage(\"Please fill out both fields!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8085/api/farmers/getall\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch user data.\");\r\n      }\r\n\r\n      const users = await response.json();\r\n      const user = users.find(\r\n        (u) => u.email === username && decryptPassword(u.password) === password\r\n      );\r\n\r\n      if (user) {\r\n        localStorage.setItem(\"userId\", user.id);\r\n        alert(\"Login successful!\");\r\n        navigate(\"/custheader/dashboard\");\r\n      } else {\r\n        setErrorMessage(\"Invalid username or password.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setErrorMessage(\"An error occurred while signing in. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"unique-login-page\">\r\n      <div className=\"unique-login-container\">\r\n        <div className=\"unique-form-container\">\r\n          <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\r\n          <h2 className=\"unique-form-title\">Sign In</h2>\r\n          <form className=\"unique-form\" onSubmit={(e) => e.preventDefault()}>\r\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n            <div className=\"unique-form-group\">\r\n              <label htmlFor=\"username\">Username (Email)</label>\r\n              <input\r\n                className=\"unique-form-input\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Enter your username\"\r\n                ref={usernameRef}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"unique-form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                className=\"unique-form-input\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                ref={passwordRef}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"unique-form-options\">\r\n              <label className=\"unique-checkbox-label\">\r\n                <input type=\"checkbox\" id=\"keepSignedIn\" />\r\n                Keep me signed in\r\n              </label>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"unique-form-submit-button\"\r\n              onClick={handleSignIn}\r\n            >\r\n              Sign In\r\n            </button>\r\n          </form>\r\n          <div className=\"unique-signup-link\">\r\n            <p>\r\n              Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,aAAa;AACpB,OAAOC,QAAQ,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,SAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}