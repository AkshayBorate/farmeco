{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder\\\\project\\\\src\\\\components\\\\login\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useRef, useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import \"./Login.css\";\n\n// export default function LoginPage() {\n//     const [errorMessage, setErrorMessage] = useState(\"\");\n//     const usernameRef = useRef();\n//     const passwordRef = useRef();\n//     const navigate = useNavigate();\n\n//     const handleSignIn = async () => {\n//         const username = usernameRef.current.value.trim();\n//         const password = passwordRef.current.value.trim();\n\n//         // Validate input fields\n//         if (!username || !password) {\n//             setErrorMessage(\"Please fill out both fields!\");\n//             return;\n//         }\n\n//         try {\n//             const response = await fetch(\"http://localhost:8085/api/farmers/getall\", {\n//                 method: \"GET\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                 },\n//             });\n\n//             if (!response.ok) {\n//                 throw new Error(\"Failed to fetch user data.\");\n//             }\n\n//             const users = await response.json();\n\n//             // Check if user exists\n//             const user = users.find(\n//                 (u) => u.email === username && u.password === password\n//             );\n\n//             if (user) {\n//                 alert(\"Login successful!\");\n//                 navigate(\"/custheader/dashboard\");\n//             } else {\n//                 setErrorMessage(\"Invalid username or password.\");\n//             }\n//         } catch (error) {\n//             console.error(error);\n//             setErrorMessage(\"An error occurred while signing in. Please try again later.\");\n//         }\n//     };\n\n//     return (\n//         <div className=\"unique-login-page\">\n//             <div className=\"unique-login-container\">\n//                 <div className=\"unique-form-container\">\n//                     <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\n//                     <h2 className=\"unique-form-title\">Sign In</h2>\n//                     <form\n//                         className=\"unique-form unique-signin-form\"\n//                         onSubmit={(e) => e.preventDefault()}\n//                     >\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                         <div className=\"unique-form-group\">\n//                             <label htmlFor=\"username\">Username (Email)</label>\n//                             <input\n//                                 className=\"unique-form-input\"\n//                                 type=\"text\"\n//                                 name=\"username\"\n//                                 placeholder=\"Enter your username\"\n//                                 ref={usernameRef}\n//                                 required\n//                             />\n//                         </div>\n//                         <div className=\"unique-form-group\">\n//                             <label htmlFor=\"password\">Password</label>\n//                             <input\n//                                 className=\"unique-form-input\"\n//                                 type=\"password\"\n//                                 name=\"password\"\n//                                 placeholder=\"Enter your password\"\n//                                 ref={passwordRef}\n//                                 required\n//                             />\n//                         </div>\n//                         <div className=\"unique-form-options\">\n//                             <label className=\"unique-checkbox-label\">\n//                                 <input type=\"checkbox\" id=\"keepSignedIn\" />\n//                                 Keep me signed in\n//                             </label>\n//                         </div>\n//                         <button\n//                             type=\"button\"\n//                             className=\"unique-form-submit-button\"\n//                             onClick={handleSignIn}\n//                         >\n//                             Sign In\n//                         </button>\n//                     </form>\n//                     <div className=\"unique-signup-link\">\n//                         <p>\n//                             Don't have an account? <Link to=\"/signup\">Sign Up</Link>\n//                         </p>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// import React, { useRef, useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import \"./Login.css\";\n\n// export default function LoginPage() {\n//     const [errorMessage, setErrorMessage] = useState(\"\");\n//     const usernameRef = useRef();\n//     const passwordRef = useRef();\n//     const navigate = useNavigate();\n\n//     const handleSignIn = async () => {\n//         const username = usernameRef.current.value.trim();\n//         const password = passwordRef.current.value.trim();\n\n//         // Validate input fields\n//         if (!username || !password) {\n//             setErrorMessage(\"Please fill out both fields!\");\n//             return;\n//         }\n\n//         try {\n//             const response = await fetch(\"http://localhost:8085/api/farmers/getall\", {\n//                 method: \"GET\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                 },\n//             });\n\n//             if (!response.ok) {\n//                 throw new Error(\"Failed to fetch user data.\");\n//             }\n\n//             const users = await response.json();\n\n//             // Check if user exists\n//             const user = users.find(\n//                 (u) => u.email === username && u.password === password\n//             );\n\n//             if (user) {\n//                 // Store user ID in localStorage or sessionStorage\n//                 localStorage.setItem(\"userId\", user.id);  // Store the user ID\n//                 alert(\"Login successful!\");\n//                 navigate(\"/custheader/dashboard\");\n//             } else {\n//                 setErrorMessage(\"Invalid username or password.\");\n//             }\n//         } catch (error) {\n//             console.error(error);\n//             setErrorMessage(\"An error occurred while signing in. Please try again later.\");\n//         }\n//     };\n\n//     return (\n//         <div className=\"unique-login-page\">\n//             <div className=\"unique-login-container\">\n//                 <div className=\"unique-form-container\">\n//                     <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\n//                     <h2 className=\"unique-form-title\">Sign In</h2>\n//                     <form\n//                         className=\"unique-form unique-signin-form\"\n//                         onSubmit={(e) => e.preventDefault()}\n//                     >\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                         <div className=\"unique-form-group\">\n//                             <label htmlFor=\"username\">Username (Email)</label>\n//                             <input\n//                                 className=\"unique-form-input\"\n//                                 type=\"text\"\n//                                 name=\"username\"\n//                                 placeholder=\"Enter your username\"\n//                                 ref={usernameRef}\n//                                 required\n//                             />\n//                         </div>\n//                         <div className=\"unique-form-group\">\n//                             <label htmlFor=\"password\">Password</label>\n//                             <input\n//                                 className=\"unique-form-input\"\n//                                 type=\"password\"\n//                                 name=\"password\"\n//                                 placeholder=\"Enter your password\"\n//                                 ref={passwordRef}\n//                                 required\n//                             />\n//                         </div>\n//                         <div className=\"unique-form-options\">\n//                             <label className=\"unique-checkbox-label\">\n//                                 <input type=\"checkbox\" id=\"keepSignedIn\" />\n//                                 Keep me signed in\n//                             </label>\n//                         </div>\n//                         <button\n//                             type=\"button\"\n//                             className=\"unique-form-submit-button\"\n//                             onClick={handleSignIn}\n//                         >\n//                             Sign In\n//                         </button>\n//                     </form>\n//                     <div className=\"unique-signup-link\">\n//                         <p>\n//                             Don't have an account? <Link to=\"/signup\">Sign Up</Link>\n//                         </p>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\nimport React, { useRef, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const navigate = useNavigate();\n  const handleSignIn = async () => {\n    const email = emailRef.current.value.trim();\n    const password = passwordRef.current.value.trim();\n    if (!email || !password) {\n      setErrorMessage(\"Please fill out both fields!\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:8085/api/farmers/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        if (response.status === 401) {\n          setErrorMessage(\"Invalid email or password.\");\n        } else {\n          setErrorMessage(\"An error occurred. Please try again.\");\n        }\n        return;\n      }\n      const data = await response.json();\n      localStorage.setItem(\"userId\", data.id); // Store userId, not email\n      alert(\"Login successful!\");\n      navigate(\"/custheader/dashboard\");\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setErrorMessage(\"Failed to log in. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unique-login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unique-login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unique-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/loginc\",\n          className: \"signup-link\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"unique-form-title\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"unique-form unique-signin-form\",\n          onSubmit: e => e.preventDefault(),\n          children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unique-form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"unique-form-input\",\n              type: \"email\",\n              placeholder: \"Enter your email\",\n              ref: emailRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unique-form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"unique-form-input\",\n              type: \"password\",\n              placeholder: \"Enter your password\",\n              ref: passwordRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"unique-form-submit-button\",\n            onClick: handleSignIn,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"unique-signup-link\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"mOT7UV9zWyh9TNBkOkOYDvSMMFY=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useRef","useState","Link","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","errorMessage","setErrorMessage","emailRef","passwordRef","navigate","handleSignIn","email","current","value","trim","password","response","fetch","method","headers","body","JSON","stringify","ok","status","data","json","localStorage","setItem","id","alert","error","console","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","type","placeholder","ref","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/New folder/project/src/components/login/Login.js"],"sourcesContent":["// import React, { useRef, useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import \"./Login.css\";\r\n\r\n// export default function LoginPage() {\r\n//     const [errorMessage, setErrorMessage] = useState(\"\");\r\n//     const usernameRef = useRef();\r\n//     const passwordRef = useRef();\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleSignIn = async () => {\r\n//         const username = usernameRef.current.value.trim();\r\n//         const password = passwordRef.current.value.trim();\r\n\r\n//         // Validate input fields\r\n//         if (!username || !password) {\r\n//             setErrorMessage(\"Please fill out both fields!\");\r\n//             return;\r\n//         }\r\n\r\n//         try {\r\n//             const response = await fetch(\"http://localhost:8085/api/farmers/getall\", {\r\n//                 method: \"GET\",\r\n//                 headers: {\r\n//                     \"Content-Type\": \"application/json\",\r\n//                 },\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 throw new Error(\"Failed to fetch user data.\");\r\n//             }\r\n\r\n//             const users = await response.json();\r\n\r\n//             // Check if user exists\r\n//             const user = users.find(\r\n//                 (u) => u.email === username && u.password === password\r\n//             );\r\n\r\n//             if (user) {\r\n//                 alert(\"Login successful!\");\r\n//                 navigate(\"/custheader/dashboard\");\r\n//             } else {\r\n//                 setErrorMessage(\"Invalid username or password.\");\r\n//             }\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//             setErrorMessage(\"An error occurred while signing in. Please try again later.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"unique-login-page\">\r\n//             <div className=\"unique-login-container\">\r\n//                 <div className=\"unique-form-container\">\r\n//                     <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\r\n//                     <h2 className=\"unique-form-title\">Sign In</h2>\r\n//                     <form\r\n//                         className=\"unique-form unique-signin-form\"\r\n//                         onSubmit={(e) => e.preventDefault()}\r\n//                     >\r\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n//                         <div className=\"unique-form-group\">\r\n//                             <label htmlFor=\"username\">Username (Email)</label>\r\n//                             <input\r\n//                                 className=\"unique-form-input\"\r\n//                                 type=\"text\"\r\n//                                 name=\"username\"\r\n//                                 placeholder=\"Enter your username\"\r\n//                                 ref={usernameRef}\r\n//                                 required\r\n//                             />\r\n//                         </div>\r\n//                         <div className=\"unique-form-group\">\r\n//                             <label htmlFor=\"password\">Password</label>\r\n//                             <input\r\n//                                 className=\"unique-form-input\"\r\n//                                 type=\"password\"\r\n//                                 name=\"password\"\r\n//                                 placeholder=\"Enter your password\"\r\n//                                 ref={passwordRef}\r\n//                                 required\r\n//                             />\r\n//                         </div>\r\n//                         <div className=\"unique-form-options\">\r\n//                             <label className=\"unique-checkbox-label\">\r\n//                                 <input type=\"checkbox\" id=\"keepSignedIn\" />\r\n//                                 Keep me signed in\r\n//                             </label>\r\n//                         </div>\r\n//                         <button\r\n//                             type=\"button\"\r\n//                             className=\"unique-form-submit-button\"\r\n//                             onClick={handleSignIn}\r\n//                         >\r\n//                             Sign In\r\n//                         </button>\r\n//                     </form>\r\n//                     <div className=\"unique-signup-link\">\r\n//                         <p>\r\n//                             Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n//                         </p>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\n// import React, { useRef, useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import \"./Login.css\";\r\n\r\n// export default function LoginPage() {\r\n//     const [errorMessage, setErrorMessage] = useState(\"\");\r\n//     const usernameRef = useRef();\r\n//     const passwordRef = useRef();\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleSignIn = async () => {\r\n//         const username = usernameRef.current.value.trim();\r\n//         const password = passwordRef.current.value.trim();\r\n\r\n//         // Validate input fields\r\n//         if (!username || !password) {\r\n//             setErrorMessage(\"Please fill out both fields!\");\r\n//             return;\r\n//         }\r\n\r\n//         try {\r\n//             const response = await fetch(\"http://localhost:8085/api/farmers/getall\", {\r\n//                 method: \"GET\",\r\n//                 headers: {\r\n//                     \"Content-Type\": \"application/json\",\r\n//                 },\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 throw new Error(\"Failed to fetch user data.\");\r\n//             }\r\n\r\n//             const users = await response.json();\r\n\r\n//             // Check if user exists\r\n//             const user = users.find(\r\n//                 (u) => u.email === username && u.password === password\r\n//             );\r\n\r\n//             if (user) {\r\n//                 // Store user ID in localStorage or sessionStorage\r\n//                 localStorage.setItem(\"userId\", user.id);  // Store the user ID\r\n//                 alert(\"Login successful!\");\r\n//                 navigate(\"/custheader/dashboard\");\r\n//             } else {\r\n//                 setErrorMessage(\"Invalid username or password.\");\r\n//             }\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//             setErrorMessage(\"An error occurred while signing in. Please try again later.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"unique-login-page\">\r\n//             <div className=\"unique-login-container\">\r\n//                 <div className=\"unique-form-container\">\r\n//                     <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\r\n//                     <h2 className=\"unique-form-title\">Sign In</h2>\r\n//                     <form\r\n//                         className=\"unique-form unique-signin-form\"\r\n//                         onSubmit={(e) => e.preventDefault()}\r\n//                     >\r\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n//                         <div className=\"unique-form-group\">\r\n//                             <label htmlFor=\"username\">Username (Email)</label>\r\n//                             <input\r\n//                                 className=\"unique-form-input\"\r\n//                                 type=\"text\"\r\n//                                 name=\"username\"\r\n//                                 placeholder=\"Enter your username\"\r\n//                                 ref={usernameRef}\r\n//                                 required\r\n//                             />\r\n//                         </div>\r\n//                         <div className=\"unique-form-group\">\r\n//                             <label htmlFor=\"password\">Password</label>\r\n//                             <input\r\n//                                 className=\"unique-form-input\"\r\n//                                 type=\"password\"\r\n//                                 name=\"password\"\r\n//                                 placeholder=\"Enter your password\"\r\n//                                 ref={passwordRef}\r\n//                                 required\r\n//                             />\r\n//                         </div>\r\n//                         <div className=\"unique-form-options\">\r\n//                             <label className=\"unique-checkbox-label\">\r\n//                                 <input type=\"checkbox\" id=\"keepSignedIn\" />\r\n//                                 Keep me signed in\r\n//                             </label>\r\n//                         </div>\r\n//                         <button\r\n//                             type=\"button\"\r\n//                             className=\"unique-form-submit-button\"\r\n//                             onClick={handleSignIn}\r\n//                         >\r\n//                             Sign In\r\n//                         </button>\r\n//                     </form>\r\n//                     <div className=\"unique-signup-link\">\r\n//                         <p>\r\n//                             Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n//                         </p>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\n\r\nexport default function LoginPage() {\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSignIn = async () => {\r\n    const email = emailRef.current.value.trim();\r\n    const password = passwordRef.current.value.trim();\r\n\r\n    if (!email || !password) {\r\n      setErrorMessage(\"Please fill out both fields!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8085/api/farmers/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          setErrorMessage(\"Invalid email or password.\");\r\n        } else {\r\n          setErrorMessage(\"An error occurred. Please try again.\");\r\n        }\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      localStorage.setItem(\"userId\", data.id); // Store userId, not email\r\n      alert(\"Login successful!\");\r\n      navigate(\"/custheader/dashboard\");\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setErrorMessage(\"Failed to log in. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"unique-login-page\">\r\n      <div className=\"unique-login-container\">\r\n        <div className=\"unique-form-container\">\r\n          <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\r\n          <h2 className=\"unique-form-title\">Sign In</h2>\r\n          <form\r\n            className=\"unique-form unique-signin-form\"\r\n            onSubmit={(e) => e.preventDefault()}\r\n          >\r\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n            <div className=\"unique-form-group\">\r\n              <label>Email</label>\r\n              <input\r\n                className=\"unique-form-input\"\r\n                type=\"email\"\r\n                placeholder=\"Enter your email\"\r\n                ref={emailRef}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"unique-form-group\">\r\n              <label>Password</label>\r\n              <input\r\n                className=\"unique-form-input\"\r\n                type=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                ref={passwordRef}\r\n                required\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"unique-form-submit-button\"\r\n              onClick={handleSignIn}\r\n            >\r\n              Sign In\r\n            </button>\r\n          </form>\r\n          <div className=\"unique-signup-link\">\r\n            <p>\r\n              Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}