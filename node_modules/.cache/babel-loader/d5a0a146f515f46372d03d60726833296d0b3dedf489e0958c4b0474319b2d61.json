{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder\\\\project\\\\src\\\\components\\\\login\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n\n// const ForgotPassword = () => {\n//   const [email, setEmail] = useState(\"\");\n//   const [newPassword, setNewPassword] = useState(\"\");\n//   const [otp, setOtp] = useState(\"\");\n//   const [step, setStep] = useState(1);\n\n//   const handleForgotPassword = async () => {\n//     if (!email || !newPassword) {\n//       alert(\"Please provide both email and new password.\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:8085/api/farmers/forgot-password\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ email, newPassword }),\n//       });\n\n//       const data = await response.json();\n//       if (response.ok) {\n//         alert(data.message);\n//         setStep(2);\n//       } else {\n//         alert(data.message);\n//       }\n//     } catch (error) {\n//       alert(\"Something went wrong!\");\n//     }\n//   };\n\n//   const handleVerifyOtp = async () => {\n//     if (!otp) {\n//       alert(\"Please enter the OTP.\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:8085/api/farmers/verify\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ email, otp }),\n//       });\n\n//       const data = await response.json();\n//       if (response.ok) {\n//         alert(data.message);\n//         setStep(1);\n//       } else {\n//         alert(data.message);\n//       }\n//     } catch (error) {\n//       alert(\"Verification failed.\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"100vh\" }}>\n//       <div style={{ width: \"300px\", padding: \"20px\", boxShadow: \"0px 0px 10px rgba(0,0,0,0.1)\" }}>\n//         <h2>{step === 1 ? \"Forgot Password\" : \"Verify OTP\"}</h2>\n\n//         {step === 1 ? (\n//           <>\n//             <input\n//               type=\"email\"\n//               placeholder=\"Enter your email\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               style={{ display: \"block\", width: \"100%\", marginBottom: \"10px\" }}\n//             />\n//             <input\n//               type=\"password\"\n//               placeholder=\"Enter new password\"\n//               value={newPassword}\n//               onChange={(e) => setNewPassword(e.target.value)}\n//               style={{ display: \"block\", width: \"100%\", marginBottom: \"10px\" }}\n//             />\n//             <button onClick={handleForgotPassword} style={{ width: \"100%\" }}>\n//               Submit\n//             </button>\n//           </>\n//         ) : (\n//           <>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter OTP\"\n//               value={otp}\n//               onChange={(e) => setOtp(e.target.value)}\n//               style={{ display: \"block\", width: \"100%\", marginBottom: \"10px\" }}\n//             />\n//             <button onClick={handleVerifyOtp} style={{ width: \"100%\" }}>\n//               Verify OTP\n//             </button>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ForgotPassword;\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [step, setStep] = useState(1);\n  const handleForgotPassword = async () => {\n    if (!email || !newPassword) {\n      alert(\"Please provide both email and new password.\");\n      return;\n    }\n    setStep(2); // Optimistically navigate to OTP step immediately\n\n    try {\n      const response = await fetch(\"http://localhost:8085/api/farmers/forgot-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"OTP sent successfully. Please check your email.\");\n      } else {\n        setStep(1); // Revert if there's an error\n        alert(data.message);\n      }\n    } catch (error) {\n      setStep(1); // Revert if there's an error\n      alert(\"Something went wrong!\");\n    }\n  };\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      alert(\"Please enter the OTP.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:8085/api/farmers/verify\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          otp\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(data.message);\n        setStep(1);\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      alert(\"Verification failed.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"300px\",\n        padding: \"20px\",\n        boxShadow: \"0px 0px 10px rgba(0,0,0,0.1)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: step === 1 ? \"Forgot Password\" : \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), step === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          style: {\n            display: \"block\",\n            width: \"100%\",\n            marginBottom: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter new password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          style: {\n            display: \"block\",\n            width: \"100%\",\n            marginBottom: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleForgotPassword,\n          style: {\n            width: \"100%\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter OTP\",\n          value: otp,\n          onChange: e => setOtp(e.target.value),\n          style: {\n            display: \"block\",\n            width: \"100%\",\n            marginBottom: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleVerifyOtp,\n          style: {\n            width: \"100%\"\n          },\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"VpsZ8LCKhVmhFN5OZtRcXWFvruo=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ForgotPassword","_s","email","setEmail","newPassword","setNewPassword","otp","setOtp","step","setStep","handleForgotPassword","alert","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","error","handleVerifyOtp","style","display","justifyContent","alignItems","minHeight","children","width","padding","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","marginBottom","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/New folder/project/src/components/login/ForgotPassword.js"],"sourcesContent":["// import { useState } from \"react\";\r\n\r\n// const ForgotPassword = () => {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [newPassword, setNewPassword] = useState(\"\");\r\n//   const [otp, setOtp] = useState(\"\");\r\n//   const [step, setStep] = useState(1);\r\n\r\n//   const handleForgotPassword = async () => {\r\n//     if (!email || !newPassword) {\r\n//       alert(\"Please provide both email and new password.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8085/api/farmers/forgot-password\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ email, newPassword }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       if (response.ok) {\r\n//         alert(data.message);\r\n//         setStep(2);\r\n//       } else {\r\n//         alert(data.message);\r\n//       }\r\n//     } catch (error) {\r\n//       alert(\"Something went wrong!\");\r\n//     }\r\n//   };\r\n\r\n//   const handleVerifyOtp = async () => {\r\n//     if (!otp) {\r\n//       alert(\"Please enter the OTP.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8085/api/farmers/verify\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ email, otp }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       if (response.ok) {\r\n//         alert(data.message);\r\n//         setStep(1);\r\n//       } else {\r\n//         alert(data.message);\r\n//       }\r\n//     } catch (error) {\r\n//       alert(\"Verification failed.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"100vh\" }}>\r\n//       <div style={{ width: \"300px\", padding: \"20px\", boxShadow: \"0px 0px 10px rgba(0,0,0,0.1)\" }}>\r\n//         <h2>{step === 1 ? \"Forgot Password\" : \"Verify OTP\"}</h2>\r\n\r\n//         {step === 1 ? (\r\n//           <>\r\n//             <input\r\n//               type=\"email\"\r\n//               placeholder=\"Enter your email\"\r\n//               value={email}\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//               style={{ display: \"block\", width: \"100%\", marginBottom: \"10px\" }}\r\n//             />\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Enter new password\"\r\n//               value={newPassword}\r\n//               onChange={(e) => setNewPassword(e.target.value)}\r\n//               style={{ display: \"block\", width: \"100%\", marginBottom: \"10px\" }}\r\n//             />\r\n//             <button onClick={handleForgotPassword} style={{ width: \"100%\" }}>\r\n//               Submit\r\n//             </button>\r\n//           </>\r\n//         ) : (\r\n//           <>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter OTP\"\r\n//               value={otp}\r\n//               onChange={(e) => setOtp(e.target.value)}\r\n//               style={{ display: \"block\", width: \"100%\", marginBottom: \"10px\" }}\r\n//             />\r\n//             <button onClick={handleVerifyOtp} style={{ width: \"100%\" }}>\r\n//               Verify OTP\r\n//             </button>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ForgotPassword;\r\n\r\n\r\nimport { useState } from \"react\";\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [step, setStep] = useState(1);\r\n\r\n  const handleForgotPassword = async () => {\r\n    if (!email || !newPassword) {\r\n      alert(\"Please provide both email and new password.\");\r\n      return;\r\n    }\r\n\r\n    setStep(2); // Optimistically navigate to OTP step immediately\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8085/api/farmers/forgot-password\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, newPassword }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        alert(\"OTP sent successfully. Please check your email.\");\r\n      } else {\r\n        setStep(1); // Revert if there's an error\r\n        alert(data.message);\r\n      }\r\n    } catch (error) {\r\n      setStep(1); // Revert if there's an error\r\n      alert(\"Something went wrong!\");\r\n    }\r\n  };\r\n\r\n  const handleVerifyOtp = async () => {\r\n    if (!otp) {\r\n      alert(\"Please enter the OTP.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8085/api/farmers/verify\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, otp }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        alert(data.message);\r\n        setStep(1);\r\n      } else {\r\n        alert(data.message);\r\n      }\r\n    } catch (error) {\r\n      alert(\"Verification failed.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"100vh\" }}>\r\n      <div style={{ width: \"300px\", padding: \"20px\", boxShadow: \"0px 0px 10px rgba(0,0,0,0.1)\" }}>\r\n        <h2>{step === 1 ? \"Forgot Password\" : \"Verify OTP\"}</h2>\r\n\r\n        {step === 1 ? (\r\n          <>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              style={{ display: \"block\", width: \"100%\", marginBottom: \"10px\" }}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter new password\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n              style={{ display: \"block\", width: \"100%\", marginBottom: \"10px\" }}\r\n            />\r\n            <button onClick={handleForgotPassword} style={{ width: \"100%\" }}>\r\n              Submit\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter OTP\"\r\n              value={otp}\r\n              onChange={(e) => setOtp(e.target.value)}\r\n              style={{ display: \"block\", width: \"100%\", marginBottom: \"10px\" }}\r\n            />\r\n            <button onClick={handleVerifyOtp} style={{ width: \"100%\" }}>\r\n              Verify OTP\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}