{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder\\\\project\\\\src\\\\components\\\\customer\\\\History.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { jsPDF } from 'jspdf';\n// import 'jspdf-autotable';\n// import './History.css';\n\n// function History() {\n//   const [orders, setOrders] = useState([]);\n//   const [images, setImages] = useState({});\n//   const userId = localStorage.getItem('userId');\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       try {\n//         const intakeResponse = await axios.get('http://localhost:8085/intake/get');\n//         const fetchedOrders = intakeResponse.data;\n\n//         const wasteResponse = await axios.get(`http://localhost:8085/waste-details/orders/${userId}`);\n//         const wasteOrders = wasteResponse.data.filter(order => order.status === \"COLLECTED\" || order.status===\"REJECTED\");\n\n//         const wasteImagesMap = {};\n//         wasteOrders.forEach(order => {\n//           wasteImagesMap[order.id] = order.imagePath;\n//         });\n\n//         const matchedOrders = fetchedOrders.filter(order => wasteImagesMap[order.wasteId]);\n//         setOrders(matchedOrders);\n//         setImages(wasteImagesMap);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     }\n\n//     if (userId) {\n//       fetchData();\n//     }\n//   }, [userId]);\n\n//   const generateInvoice = (order) => {\n//     const doc = new jsPDF();\n\n//     doc.setFontSize(22);\n//     doc.setTextColor(40);\n//     doc.text('FarmEco Invoice', 105, 20, { align: 'center' });\n\n//     doc.setFontSize(12);\n//     doc.setTextColor(100);\n//     doc.text('Waste Selling Company', 105, 28, { align: 'center' });\n//     doc.line(10, 35, 200, 35);\n\n//     doc.setFontSize(10);\n//     doc.text('FarmEco Pvt Ltd.', 10, 45);\n//     doc.text('123 Greenfield Avenue, Pune, Maharashtra', 10, 50);\n//     doc.text('Contact: +91-1234567890 | Email: support@farmeco.com', 10, 55);\n\n//     const invoiceNumber = `FEC-${order.id.toString().padStart(6, '0')}-${order.wasteId}`;\n//     doc.setFontSize(12);\n//     doc.text(`Invoice Number: ${invoiceNumber}`, 140, 45);\n//     doc.text(`Date: ${new Date(order.collectedDate).toLocaleDateString()}`, 140, 50);\n\n//     doc.setFontSize(14);\n//     doc.text('Customer Details', 10, 65);\n\n//     const customerDetails = [\n//       ['Farmer Name:', order.farmerName],\n//       ['Place:', order.place],\n//       ['Collected By:', order.collectedBy]\n//     ];\n\n//     doc.autoTable({\n//       startY: 70,\n//       head: [['Field', 'Value']],\n//       body: customerDetails,\n//       theme: 'striped',\n//       columnStyles: { 0: { fontStyle: 'bold', halign: 'left' } },\n//     });\n\n//     doc.setFontSize(14);\n//     doc.text('Order Summary', 10, doc.lastAutoTable.finalY + 10);\n\n//     const orderSummary = [\n//       ['Item Description', 'Weight (tons)', 'Rate', 'Total Price'],\n//       ['Agricultural Waste', `${order.weight}`, `${order.rate}`, `${order.totalPrice}`]\n//     ];\n\n//     doc.autoTable({\n//       startY: doc.lastAutoTable.finalY + 15,\n//       head: [orderSummary[0]],\n//       body: [orderSummary[1]],\n//       theme: 'grid',\n//     });\n\n//     doc.setFontSize(10);\n//     doc.text('Thank you for partnering with FarmEco!', 105, doc.lastAutoTable.finalY + 20, { align: 'center' });\n//     doc.text('For support, contact us at support@farmeco.com or +91-1234567890', 105, doc.lastAutoTable.finalY + 25, { align: 'center' });\n\n//     doc.save(`Invoice_${invoiceNumber}.pdf`);\n//   };\n\n//   return (\n//     <div className=\"order-history\">\n//       <h2>Farmer Order History</h2>\n//       <div className=\"card-container\">\n//         {orders.map(order => (\n//           <div className=\"order-card\" key={order.id}>\n//             <div className=\"d-flex justify-content-center align-items-center\">\n//               <img\n//                 src={images[order.wasteId] || \"https://via.placeholder.com/200x150?text=No+Image+Available\"}\n//                 alt=\"Order Visual\"\n//                 height=\"150px\"\n//                 width=\"200px\"\n//               />\n//             </div>\n//             <p><strong>Order Date:</strong> {new Date(order.collectedDate).toLocaleDateString()}</p>\n//             <p><strong>Place:</strong> {order.place}</p>\n//             <p><strong>Weight:</strong> {order.weight} kg</p>\n//             <p><strong>Collected By:</strong> {order.collectedBy}</p>\n//             <p><strong>Farmer Name:</strong> {order.farmerName}</p>\n//             <p><strong>Rate:</strong> ₹{order.rate}</p>\n//             <p><strong>Total Price:</strong> ₹{order.totalPrice}</p>\n//             <button\n//               type=\"button\"\n//               className=\"btn btn-danger\"\n//               onClick={() => generateInvoice(order)}\n//             >\n//               Generate Invoice\n//             </button>\n//           </div>\n//         ))}\n//       </div>\n\n//     </div>\n//   );\n// }\n\n// export default History;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { jsPDF } from 'jspdf';\n// import 'jspdf-autotable';\n// import './History.css';\n\n// function History() {\n//   const [orders, setOrders] = useState([]);\n//   const [images, setImages] = useState({});\n//   const [rejectedOrders, setRejectedOrders] = useState([]);\n//   const userId = localStorage.getItem('userId');\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       try {\n//         const intakeResponse = await axios.get('http://localhost:8085/intake/get');\n//         const fetchedOrders = intakeResponse.data;\n\n//         const wasteResponse = await axios.get(`http://localhost:8085/waste-details/orders/${userId}`);\n//         const wasteOrders = wasteResponse.data.filter(order => order.status === \"COLLECTED\" || order.status === \"REJECTED\");\n\n//         const wasteImagesMap = {};\n//         wasteOrders.forEach(order => {\n//           wasteImagesMap[order.id] = order.imagePath;\n//         });\n\n//         const matchedOrders = fetchedOrders.filter(order => wasteImagesMap[order.wasteId]);\n//         setOrders(matchedOrders);\n//         setImages(wasteImagesMap);\n\n//         const rejected = wasteOrders.filter(order => order.status === \"REJECTED\");\n//         setRejectedOrders(rejected);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     }\n\n//     if (userId) {\n//       fetchData();\n//     }\n//   }, [userId]);\n\n//   const generateInvoice = (order) => {\n//     const doc = new jsPDF();\n\n//     doc.setFontSize(22);\n//     doc.text('FarmEco Invoice', 105, 20, { align: 'center' });\n//     doc.setFontSize(12);\n//     doc.text('Waste Selling Company', 105, 28, { align: 'center' });\n//     doc.line(10, 35, 200, 35);\n\n//     doc.setFontSize(10);\n//     doc.text('FarmEco Pvt Ltd.', 10, 45);\n//     doc.text('123 Greenfield Avenue, Pune, Maharashtra', 10, 50);\n//     doc.text('Contact: +91-1234567890 | Email: support@farmeco.com', 10, 55);\n\n//     const invoiceNumber = `FEC-${order.id.toString().padStart(6, '0')}-${order.wasteId}`;\n//     doc.setFontSize(12);\n//     doc.text(`Invoice Number: ${invoiceNumber}`, 140, 45);\n//     doc.text(`Date: ${new Date(order.collectedDate).toLocaleDateString()}`, 140, 50);\n\n//     doc.autoTable({\n//       startY: 70,\n//       head: [['Field', 'Value']],\n//       body: [\n//         ['Farmer Name:', order.farmerName],\n//         ['Place:', order.place],\n//         ['Collected By:', order.collectedBy]\n//       ],\n//       theme: 'striped',\n//     });\n\n//     doc.autoTable({\n//       startY: doc.lastAutoTable.finalY + 15,\n//       head: [['Item Description', 'Weight (tons)', 'Rate', 'Total Price']],\n//       body: [['Agricultural Waste', `${order.weight}`, `${order.rate}`, `${order.totalPrice}`]],\n//       theme: 'grid',\n//     });\n\n//     doc.save(`Invoice_${invoiceNumber}.pdf`);\n//   };\n\n//   return (\n//     <div className=\"order-history\">\n//       <h2>Farmer Order History</h2>\n//       <div className=\"order-sections\">\n//         <div className=\"order-container\">\n//           <h3>Collected Orders</h3>\n//           <div className=\"card-container\">\n//             {orders.map(order => (\n//               <div className=\"order-card\" key={order.id}>\n//                 <img\n//                   src={images[order.wasteId] || \"https://via.placeholder.com/200x150?text=No+Image+Available\"}\n//                   alt=\"Order Visual\"\n//                   height=\"150px\"\n//                   width=\"200px\"\n//                 />\n//                 <p><strong>Order Date:</strong> {new Date(order.collectedDate).toLocaleDateString()}</p>\n//                 <p><strong>Place:</strong> {order.place}</p>\n//                 <p><strong>Weight:</strong> {order.weight} kg</p>\n//                 <p><strong>Collected By:</strong> {order.collectedBy}</p>\n//                 <p><strong>Farmer Name:</strong> {order.farmerName}</p>\n//                 <p><strong>Rate:</strong> ₹{order.rate}</p>\n//                 <p><strong>Total Price:</strong> ₹{order.totalPrice}</p>\n//                 <button className=\"btn btn-danger\" onClick={() => generateInvoice(order)}>Generate Invoice</button>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n\n//         <div className=\"order-container\">\n//           <h3>Rejected Orders</h3>\n//           <div className=\"card-container\">\n//             {rejectedOrders.length > 0 ? (\n//               rejectedOrders.map(order => (\n//                 <div key={order.id} className=\"order-card rejected\">\n//                   <h4>Order ID: ORD-{order.id}</h4>\n//                   <img\n//                     src={images[order.id] || \"https://via.placeholder.com/200x150?text=No+Image+Available\"}\n//                     height=\"150px\"\n//                     width=\"200px\"\n//                     alt={order.wasteType || \"Product\"}\n//                   />\n//                   <p>Waste Type: {order.wasteType || \"Not specified\"}</p>\n//                   <p>Status: <span className=\"order-status-text\">{order.status}</span></p>\n//                 </div>\n//               ))\n//             ) : (\n//               <p>No rejected orders available.</p>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default History;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { jsPDF } from 'jspdf';\n// import 'jspdf-autotable';\n// import './History.css';\n\n// function History() {\n//   const [orders, setOrders] = useState([]);\n//   const [images, setImages] = useState({});\n//   const [rejectedOrders, setRejectedOrders] = useState([]);\n//   const userId = localStorage.getItem('userId');\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       try {\n//         const intakeResponse = await axios.get('http://localhost:8085/intake/get');\n//         const fetchedOrders = intakeResponse.data;\n\n//         const wasteResponse = await axios.get(`http://localhost:8085/waste-details/orders/${userId}`);\n//         const wasteOrders = wasteResponse.data.filter(order => order.status === \"COLLECTED\" || order.status === \"REJECTED\");\n\n//         const wasteImagesMap = {};\n//         wasteOrders.forEach(order => {\n//           wasteImagesMap[order.id] = order.imagePath;\n//         });\n\n//         const matchedOrders = fetchedOrders.filter(order => wasteImagesMap[order.wasteId]);\n//         setOrders(matchedOrders);\n//         setImages(wasteImagesMap);\n\n//         const rejected = wasteOrders.filter(order => order.status === \"REJECTED\");\n//         setRejectedOrders(rejected);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     }\n\n//     if (userId) {\n//       fetchData();\n//     }\n//   }, [userId]);\n\n//   const generateInvoice = (order) => {\n//     const doc = new jsPDF();\n\n//     doc.setFontSize(22);\n//     doc.text('FarmEco Invoice', 105, 20, { align: 'center' });\n//     doc.setFontSize(12);\n//     doc.text('Waste Selling Company', 105, 28, { align: 'center' });\n//     doc.line(10, 35, 200, 35);\n\n//     doc.setFontSize(10);\n//     doc.text('FarmEco Pvt Ltd.', 10, 45);\n//     doc.text('123 Greenfield Avenue, Pune, Maharashtra', 10, 50);\n//     doc.text('Contact: +91-1234567890 | Email: support@farmeco.com', 10, 55);\n\n//     const invoiceNumber = `FEC-${order.id.toString().padStart(6, '0')}-${order.wasteId}`;\n//     doc.setFontSize(12);\n//     doc.text(`Invoice Number: ${invoiceNumber}`, 140, 45);\n//     doc.text(`Date: ${new Date(order.collectedDate).toLocaleDateString()}`, 140, 50);\n\n//     doc.autoTable({\n//       startY: 70,\n//       head: [['Field', 'Value']],\n//       body: [\n//         ['Farmer Name:', order.farmerName],\n//         ['Place:', order.place],\n//         ['Collected By:', order.collectedBy]\n//       ],\n//       theme: 'striped',\n//     });\n\n//     doc.autoTable({\n//       startY: doc.lastAutoTable.finalY + 15,\n//       head: [['Item Description', 'Weight (tons)', 'Rate', 'Total Price']],\n//       body: [['Agricultural Waste', `${order.weight}`, `${order.rate}`, `${order.totalPrice}`]],\n//       theme: 'grid',\n//     });\n\n//     doc.save(`Invoice_${invoiceNumber}.pdf`);\n//   };\n\n//   return (\n//     <div className=\"order-history\">\n//       <h2>Farmer Order History</h2>\n//       <div className=\"combined-orders\">\n//         <div className=\"card-container\">\n//           {orders.map(order => (\n//             <div className=\"order-card\" key={order.id}>\n//               <img\n//                 src={images[order.wasteId] || \"https://via.placeholder.com/200x150?text=No+Image+Available\"}\n//                 alt=\"Order Visual\"\n//                 height=\"150px\"\n//                 width=\"200px\"\n//               />\n//               <p><strong>Order Date:</strong> {new Date(order.collectedDate).toLocaleDateString()}</p>\n//               <p><strong>Place:</strong> {order.place}</p>\n//               <p><strong>Weight:</strong> {order.weight} kg</p>\n//               <p><strong>Collected By:</strong> {order.collectedBy}</p>\n//               <p><strong>Farmer Name:</strong> {order.farmerName}</p>\n//               <p><strong>Rate:</strong> ₹{order.rate}</p>\n//               <p><strong>Total Price:</strong> ₹{order.totalPrice}</p>\n//               <button className=\"btn btn-danger\" onClick={() => generateInvoice(order)}>Generate Invoice</button>\n//             </div>\n//           ))}\n//           {rejectedOrders.map(order => (\n//             <div key={order.id} className=\"order-card rejected\">\n\n//               <img\n//                 src={images[order.id] || \"https://via.placeholder.com/200x150?text=No+Image+Available\"}\n//                 height=\"150px\"\n//                 width=\"200px\"\n//                 alt={order.wasteType || \"Product\"}\n\n//               />\n//               <p></p>\n//               <br/>\n//               <h4>Order ID: ORD-{order.id}</h4>\n\n//               <strong>Waste Type: </strong>{order.wasteType || \"Not specified\"}\n//               <br/>\n//               <br/>\n//               <strong>Status:</strong> <span className=\"order-status-text\">{order.status}</span>\n//               {/* <p>Waste Type: {order.wasteType || \"Not specified\"}</p> */}\n//               <br/>\n//               <br/>\n//               <strong>Message: </strong><span className=\"order-status-text\">{order.message}</span>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default History;\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\nimport './History.css';\nimport { Link } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction History() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [rejectedOrders, setRejectedOrders] = useState([]);\n  const userId = localStorage.getItem('userId'); // Get the user ID from localStorage\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // Check if userId exists\n        console.log(\"User ID: \", userId);\n        if (!userId) {\n          console.log(\"No User ID found in localStorage\");\n          return;\n        }\n\n        // Fetching intake data\n        const intakeResponse = await axios.get('http://localhost:8085/intake/get');\n        console.log(\"Intake Response: \", intakeResponse.data); // Log the intake response\n        const fetchedOrders = intakeResponse.data;\n\n        // Filter the orders to only include those where the farmer.id matches the userId\n        const filteredOrders = fetchedOrders.filter(order => order.wasteDetailsId.farmer.id === parseInt(userId));\n\n        // Set orders based on the filtered data\n        setOrders(filteredOrders.filter(order => order.wasteDetailsId.status === \"COLLECTED\"));\n        setRejectedOrders(filteredOrders.filter(order => order.wasteDetailsId.status === \"REJECTED\"));\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    if (userId) {\n      fetchData();\n    }\n  }, [userId]);\n  const generateInvoice = order => {\n    const doc = new jsPDF();\n    doc.setFontSize(22);\n    doc.text('FarmEco Invoice', 105, 20, {\n      align: 'center'\n    });\n    doc.setFontSize(12);\n    doc.text('Waste Selling Company', 105, 28, {\n      align: 'center'\n    });\n    doc.line(10, 35, 200, 35);\n    doc.setFontSize(10);\n    doc.text('FarmEco Pvt Ltd.', 10, 45);\n    doc.text('123 Greenfield Avenue, Pune, Maharashtra', 10, 50);\n    doc.text('Contact: +91-1234567890 | Email: support@farmeco.com', 10, 55);\n    const invoiceNumber = `FEC-${order.id.toString().padStart(6, '0')}-${order.wasteDetailsId.id}`;\n    doc.setFontSize(12);\n    doc.text(`Invoice Number: ${invoiceNumber}`, 140, 45);\n    doc.text(`Date: ${new Date(order.wasteDetailsId.pickupDate).toLocaleDateString()}`, 140, 50);\n    doc.autoTable({\n      startY: 70,\n      head: [['Field', 'Value']],\n      body: [['Farmer Name:', order.wasteDetailsId.farmer.name], ['Place:', order.wasteDetailsId.address], ['Collected By:', order.collectedBy]],\n      theme: 'striped'\n    });\n    doc.autoTable({\n      startY: doc.lastAutoTable.finalY + 15,\n      head: [['Item Description', 'Weight (tons)', 'Rate', 'Total Price']],\n      body: [['Agricultural Waste', `${order.weight}`, `${order.rate}`, `${order.totalPrice}`]],\n      theme: 'grid'\n    });\n    doc.save(`Invoice_${invoiceNumber}.pdf`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-history\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Farmer Order History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"combined-orders\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8085/uploads/${order.wasteDetailsId.imagePath}` // Full image path\n            ,\n            alt: \"Order Visual\",\n            height: \"150px\",\n            width: \"200px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Order Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 18\n            }, this), \" \", new Date(order.wasteDetailsId.pickupDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Place:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 18\n            }, this), \" \", order.wasteDetailsId.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Weight:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 18\n            }, this), \" \", order.weight, \" kg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Collected By:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 18\n            }, this), \" \", order.collectedBy]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Farmer Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 18\n            }, this), \" \", order.wasteDetailsId.farmer.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Rate:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 18\n            }, this), \" \\u20B9\", order.rate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Total Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 18\n            }, this), \" \\u20B9\", order.totalPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => generateInvoice(order),\n            children: \"Generate Invoice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/custheader/feedback1\",\n            className: \"signup-link\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 14\n          }, this)]\n        }, order.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this)), rejectedOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-card rejected\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8085/uploads/${order.wasteDetailsId.imagePath}` // Full image path\n            ,\n            height: \"150px\",\n            width: \"200px\",\n            alt: order.wasteDetailsId.wasteType || \"Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Order ID: ORD-\", order.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Waste Type: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this), order.wasteDetailsId.wasteType || \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"order-status-text\",\n            children: order.wasteDetailsId.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Message: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"order-status-text\",\n            children: order.wasteDetailsId.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 41\n          }, this)]\n        }, order.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 509,\n    columnNumber: 5\n  }, this);\n}\n_s(History, \"vl/Is9eAhEOjh5dG3vta6WUVy4g=\");\n_c = History;\nexport default History;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsPDF","Link","jsxDEV","_jsxDEV","History","_s","orders","setOrders","rejectedOrders","setRejectedOrders","userId","localStorage","getItem","fetchData","console","log","intakeResponse","get","data","fetchedOrders","filteredOrders","filter","order","wasteDetailsId","farmer","id","parseInt","status","error","generateInvoice","doc","setFontSize","text","align","line","invoiceNumber","toString","padStart","Date","pickupDate","toLocaleDateString","autoTable","startY","head","body","name","address","collectedBy","theme","lastAutoTable","finalY","weight","rate","totalPrice","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","imagePath","alt","height","width","onClick","to","wasteType","message","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/New folder/project/src/components/customer/History.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { jsPDF } from 'jspdf';\r\n// import 'jspdf-autotable';\r\n// import './History.css';\r\n\r\n// function History() {\r\n//   const [orders, setOrders] = useState([]);\r\n//   const [images, setImages] = useState({});\r\n//   const userId = localStorage.getItem('userId');\r\n\r\n//   useEffect(() => {\r\n//     async function fetchData() {\r\n//       try {\r\n//         const intakeResponse = await axios.get('http://localhost:8085/intake/get');\r\n//         const fetchedOrders = intakeResponse.data;\r\n\r\n//         const wasteResponse = await axios.get(`http://localhost:8085/waste-details/orders/${userId}`);\r\n//         const wasteOrders = wasteResponse.data.filter(order => order.status === \"COLLECTED\" || order.status===\"REJECTED\");\r\n\r\n//         const wasteImagesMap = {};\r\n//         wasteOrders.forEach(order => {\r\n//           wasteImagesMap[order.id] = order.imagePath;\r\n//         });\r\n\r\n//         const matchedOrders = fetchedOrders.filter(order => wasteImagesMap[order.wasteId]);\r\n//         setOrders(matchedOrders);\r\n//         setImages(wasteImagesMap);\r\n//       } catch (error) {\r\n//         console.error('Error fetching data:', error);\r\n//       }\r\n//     }\r\n\r\n//     if (userId) {\r\n//       fetchData();\r\n//     }\r\n//   }, [userId]);\r\n\r\n//   const generateInvoice = (order) => {\r\n//     const doc = new jsPDF();\r\n\r\n  \r\n//     doc.setFontSize(22);\r\n//     doc.setTextColor(40);\r\n//     doc.text('FarmEco Invoice', 105, 20, { align: 'center' });\r\n\r\n//     doc.setFontSize(12);\r\n//     doc.setTextColor(100);\r\n//     doc.text('Waste Selling Company', 105, 28, { align: 'center' });\r\n//     doc.line(10, 35, 200, 35);\r\n\r\n//     doc.setFontSize(10);\r\n//     doc.text('FarmEco Pvt Ltd.', 10, 45);\r\n//     doc.text('123 Greenfield Avenue, Pune, Maharashtra', 10, 50);\r\n//     doc.text('Contact: +91-1234567890 | Email: support@farmeco.com', 10, 55);\r\n\r\n\r\n//     const invoiceNumber = `FEC-${order.id.toString().padStart(6, '0')}-${order.wasteId}`;\r\n//     doc.setFontSize(12);\r\n//     doc.text(`Invoice Number: ${invoiceNumber}`, 140, 45);\r\n//     doc.text(`Date: ${new Date(order.collectedDate).toLocaleDateString()}`, 140, 50);\r\n\r\n//     doc.setFontSize(14);\r\n//     doc.text('Customer Details', 10, 65);\r\n\r\n//     const customerDetails = [\r\n//       ['Farmer Name:', order.farmerName],\r\n//       ['Place:', order.place],\r\n//       ['Collected By:', order.collectedBy]\r\n//     ];\r\n\r\n//     doc.autoTable({\r\n//       startY: 70,\r\n//       head: [['Field', 'Value']],\r\n//       body: customerDetails,\r\n//       theme: 'striped',\r\n//       columnStyles: { 0: { fontStyle: 'bold', halign: 'left' } },\r\n//     });\r\n\r\n\r\n//     doc.setFontSize(14);\r\n//     doc.text('Order Summary', 10, doc.lastAutoTable.finalY + 10);\r\n\r\n//     const orderSummary = [\r\n//       ['Item Description', 'Weight (tons)', 'Rate', 'Total Price'],\r\n//       ['Agricultural Waste', `${order.weight}`, `${order.rate}`, `${order.totalPrice}`]\r\n//     ];\r\n\r\n//     doc.autoTable({\r\n//       startY: doc.lastAutoTable.finalY + 15,\r\n//       head: [orderSummary[0]],\r\n//       body: [orderSummary[1]],\r\n//       theme: 'grid',\r\n//     });\r\n\r\n\r\n//     doc.setFontSize(10);\r\n//     doc.text('Thank you for partnering with FarmEco!', 105, doc.lastAutoTable.finalY + 20, { align: 'center' });\r\n//     doc.text('For support, contact us at support@farmeco.com or +91-1234567890', 105, doc.lastAutoTable.finalY + 25, { align: 'center' });\r\n\r\n\r\n//     doc.save(`Invoice_${invoiceNumber}.pdf`);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"order-history\">\r\n//       <h2>Farmer Order History</h2>\r\n//       <div className=\"card-container\">\r\n//         {orders.map(order => (\r\n//           <div className=\"order-card\" key={order.id}>\r\n//             <div className=\"d-flex justify-content-center align-items-center\">\r\n//               <img\r\n//                 src={images[order.wasteId] || \"https://via.placeholder.com/200x150?text=No+Image+Available\"}\r\n//                 alt=\"Order Visual\"\r\n//                 height=\"150px\"\r\n//                 width=\"200px\"\r\n//               />\r\n//             </div>\r\n//             <p><strong>Order Date:</strong> {new Date(order.collectedDate).toLocaleDateString()}</p>\r\n//             <p><strong>Place:</strong> {order.place}</p>\r\n//             <p><strong>Weight:</strong> {order.weight} kg</p>\r\n//             <p><strong>Collected By:</strong> {order.collectedBy}</p>\r\n//             <p><strong>Farmer Name:</strong> {order.farmerName}</p>\r\n//             <p><strong>Rate:</strong> ₹{order.rate}</p>\r\n//             <p><strong>Total Price:</strong> ₹{order.totalPrice}</p>\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"btn btn-danger\"\r\n//               onClick={() => generateInvoice(order)}\r\n//             >\r\n//               Generate Invoice\r\n//             </button>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n      \r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default History;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { jsPDF } from 'jspdf';\r\n// import 'jspdf-autotable';\r\n// import './History.css';\r\n\r\n// function History() {\r\n//   const [orders, setOrders] = useState([]);\r\n//   const [images, setImages] = useState({});\r\n//   const [rejectedOrders, setRejectedOrders] = useState([]);\r\n//   const userId = localStorage.getItem('userId');\r\n\r\n//   useEffect(() => {\r\n//     async function fetchData() {\r\n//       try {\r\n//         const intakeResponse = await axios.get('http://localhost:8085/intake/get');\r\n//         const fetchedOrders = intakeResponse.data;\r\n\r\n//         const wasteResponse = await axios.get(`http://localhost:8085/waste-details/orders/${userId}`);\r\n//         const wasteOrders = wasteResponse.data.filter(order => order.status === \"COLLECTED\" || order.status === \"REJECTED\");\r\n\r\n//         const wasteImagesMap = {};\r\n//         wasteOrders.forEach(order => {\r\n//           wasteImagesMap[order.id] = order.imagePath;\r\n//         });\r\n\r\n//         const matchedOrders = fetchedOrders.filter(order => wasteImagesMap[order.wasteId]);\r\n//         setOrders(matchedOrders);\r\n//         setImages(wasteImagesMap);\r\n\r\n//         const rejected = wasteOrders.filter(order => order.status === \"REJECTED\");\r\n//         setRejectedOrders(rejected);\r\n//       } catch (error) {\r\n//         console.error('Error fetching data:', error);\r\n//       }\r\n//     }\r\n\r\n//     if (userId) {\r\n//       fetchData();\r\n//     }\r\n//   }, [userId]);\r\n\r\n//   const generateInvoice = (order) => {\r\n//     const doc = new jsPDF();\r\n\r\n//     doc.setFontSize(22);\r\n//     doc.text('FarmEco Invoice', 105, 20, { align: 'center' });\r\n//     doc.setFontSize(12);\r\n//     doc.text('Waste Selling Company', 105, 28, { align: 'center' });\r\n//     doc.line(10, 35, 200, 35);\r\n\r\n//     doc.setFontSize(10);\r\n//     doc.text('FarmEco Pvt Ltd.', 10, 45);\r\n//     doc.text('123 Greenfield Avenue, Pune, Maharashtra', 10, 50);\r\n//     doc.text('Contact: +91-1234567890 | Email: support@farmeco.com', 10, 55);\r\n\r\n//     const invoiceNumber = `FEC-${order.id.toString().padStart(6, '0')}-${order.wasteId}`;\r\n//     doc.setFontSize(12);\r\n//     doc.text(`Invoice Number: ${invoiceNumber}`, 140, 45);\r\n//     doc.text(`Date: ${new Date(order.collectedDate).toLocaleDateString()}`, 140, 50);\r\n\r\n//     doc.autoTable({\r\n//       startY: 70,\r\n//       head: [['Field', 'Value']],\r\n//       body: [\r\n//         ['Farmer Name:', order.farmerName],\r\n//         ['Place:', order.place],\r\n//         ['Collected By:', order.collectedBy]\r\n//       ],\r\n//       theme: 'striped',\r\n//     });\r\n\r\n//     doc.autoTable({\r\n//       startY: doc.lastAutoTable.finalY + 15,\r\n//       head: [['Item Description', 'Weight (tons)', 'Rate', 'Total Price']],\r\n//       body: [['Agricultural Waste', `${order.weight}`, `${order.rate}`, `${order.totalPrice}`]],\r\n//       theme: 'grid',\r\n//     });\r\n\r\n//     doc.save(`Invoice_${invoiceNumber}.pdf`);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"order-history\">\r\n//       <h2>Farmer Order History</h2>\r\n//       <div className=\"order-sections\">\r\n//         <div className=\"order-container\">\r\n//           <h3>Collected Orders</h3>\r\n//           <div className=\"card-container\">\r\n//             {orders.map(order => (\r\n//               <div className=\"order-card\" key={order.id}>\r\n//                 <img\r\n//                   src={images[order.wasteId] || \"https://via.placeholder.com/200x150?text=No+Image+Available\"}\r\n//                   alt=\"Order Visual\"\r\n//                   height=\"150px\"\r\n//                   width=\"200px\"\r\n//                 />\r\n//                 <p><strong>Order Date:</strong> {new Date(order.collectedDate).toLocaleDateString()}</p>\r\n//                 <p><strong>Place:</strong> {order.place}</p>\r\n//                 <p><strong>Weight:</strong> {order.weight} kg</p>\r\n//                 <p><strong>Collected By:</strong> {order.collectedBy}</p>\r\n//                 <p><strong>Farmer Name:</strong> {order.farmerName}</p>\r\n//                 <p><strong>Rate:</strong> ₹{order.rate}</p>\r\n//                 <p><strong>Total Price:</strong> ₹{order.totalPrice}</p>\r\n//                 <button className=\"btn btn-danger\" onClick={() => generateInvoice(order)}>Generate Invoice</button>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n        \r\n//         <div className=\"order-container\">\r\n//           <h3>Rejected Orders</h3>\r\n//           <div className=\"card-container\">\r\n//             {rejectedOrders.length > 0 ? (\r\n//               rejectedOrders.map(order => (\r\n//                 <div key={order.id} className=\"order-card rejected\">\r\n//                   <h4>Order ID: ORD-{order.id}</h4>\r\n//                   <img\r\n//                     src={images[order.id] || \"https://via.placeholder.com/200x150?text=No+Image+Available\"}\r\n//                     height=\"150px\"\r\n//                     width=\"200px\"\r\n//                     alt={order.wasteType || \"Product\"}\r\n//                   />\r\n//                   <p>Waste Type: {order.wasteType || \"Not specified\"}</p>\r\n//                   <p>Status: <span className=\"order-status-text\">{order.status}</span></p>\r\n//                 </div>\r\n//               ))\r\n//             ) : (\r\n//               <p>No rejected orders available.</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default History;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { jsPDF } from 'jspdf';\r\n// import 'jspdf-autotable';\r\n// import './History.css';\r\n\r\n// function History() {\r\n//   const [orders, setOrders] = useState([]);\r\n//   const [images, setImages] = useState({});\r\n//   const [rejectedOrders, setRejectedOrders] = useState([]);\r\n//   const userId = localStorage.getItem('userId');\r\n\r\n//   useEffect(() => {\r\n//     async function fetchData() {\r\n//       try {\r\n//         const intakeResponse = await axios.get('http://localhost:8085/intake/get');\r\n//         const fetchedOrders = intakeResponse.data;\r\n\r\n//         const wasteResponse = await axios.get(`http://localhost:8085/waste-details/orders/${userId}`);\r\n//         const wasteOrders = wasteResponse.data.filter(order => order.status === \"COLLECTED\" || order.status === \"REJECTED\");\r\n\r\n//         const wasteImagesMap = {};\r\n//         wasteOrders.forEach(order => {\r\n//           wasteImagesMap[order.id] = order.imagePath;\r\n//         });\r\n\r\n//         const matchedOrders = fetchedOrders.filter(order => wasteImagesMap[order.wasteId]);\r\n//         setOrders(matchedOrders);\r\n//         setImages(wasteImagesMap);\r\n\r\n//         const rejected = wasteOrders.filter(order => order.status === \"REJECTED\");\r\n//         setRejectedOrders(rejected);\r\n//       } catch (error) {\r\n//         console.error('Error fetching data:', error);\r\n//       }\r\n//     }\r\n\r\n//     if (userId) {\r\n//       fetchData();\r\n//     }\r\n//   }, [userId]);\r\n\r\n//   const generateInvoice = (order) => {\r\n//     const doc = new jsPDF();\r\n\r\n//     doc.setFontSize(22);\r\n//     doc.text('FarmEco Invoice', 105, 20, { align: 'center' });\r\n//     doc.setFontSize(12);\r\n//     doc.text('Waste Selling Company', 105, 28, { align: 'center' });\r\n//     doc.line(10, 35, 200, 35);\r\n\r\n//     doc.setFontSize(10);\r\n//     doc.text('FarmEco Pvt Ltd.', 10, 45);\r\n//     doc.text('123 Greenfield Avenue, Pune, Maharashtra', 10, 50);\r\n//     doc.text('Contact: +91-1234567890 | Email: support@farmeco.com', 10, 55);\r\n\r\n//     const invoiceNumber = `FEC-${order.id.toString().padStart(6, '0')}-${order.wasteId}`;\r\n//     doc.setFontSize(12);\r\n//     doc.text(`Invoice Number: ${invoiceNumber}`, 140, 45);\r\n//     doc.text(`Date: ${new Date(order.collectedDate).toLocaleDateString()}`, 140, 50);\r\n\r\n//     doc.autoTable({\r\n//       startY: 70,\r\n//       head: [['Field', 'Value']],\r\n//       body: [\r\n//         ['Farmer Name:', order.farmerName],\r\n//         ['Place:', order.place],\r\n//         ['Collected By:', order.collectedBy]\r\n//       ],\r\n//       theme: 'striped',\r\n//     });\r\n\r\n//     doc.autoTable({\r\n//       startY: doc.lastAutoTable.finalY + 15,\r\n//       head: [['Item Description', 'Weight (tons)', 'Rate', 'Total Price']],\r\n//       body: [['Agricultural Waste', `${order.weight}`, `${order.rate}`, `${order.totalPrice}`]],\r\n//       theme: 'grid',\r\n//     });\r\n\r\n//     doc.save(`Invoice_${invoiceNumber}.pdf`);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"order-history\">\r\n//       <h2>Farmer Order History</h2>\r\n//       <div className=\"combined-orders\">\r\n//         <div className=\"card-container\">\r\n//           {orders.map(order => (\r\n//             <div className=\"order-card\" key={order.id}>\r\n//               <img\r\n//                 src={images[order.wasteId] || \"https://via.placeholder.com/200x150?text=No+Image+Available\"}\r\n//                 alt=\"Order Visual\"\r\n//                 height=\"150px\"\r\n//                 width=\"200px\"\r\n//               />\r\n//               <p><strong>Order Date:</strong> {new Date(order.collectedDate).toLocaleDateString()}</p>\r\n//               <p><strong>Place:</strong> {order.place}</p>\r\n//               <p><strong>Weight:</strong> {order.weight} kg</p>\r\n//               <p><strong>Collected By:</strong> {order.collectedBy}</p>\r\n//               <p><strong>Farmer Name:</strong> {order.farmerName}</p>\r\n//               <p><strong>Rate:</strong> ₹{order.rate}</p>\r\n//               <p><strong>Total Price:</strong> ₹{order.totalPrice}</p>\r\n//               <button className=\"btn btn-danger\" onClick={() => generateInvoice(order)}>Generate Invoice</button>\r\n//             </div>\r\n//           ))}\r\n//           {rejectedOrders.map(order => (\r\n//             <div key={order.id} className=\"order-card rejected\">\r\n              \r\n//               <img\r\n//                 src={images[order.id] || \"https://via.placeholder.com/200x150?text=No+Image+Available\"}\r\n//                 height=\"150px\"\r\n//                 width=\"200px\"\r\n//                 alt={order.wasteType || \"Product\"}\r\n               \r\n//               />\r\n//               <p></p>\r\n//               <br/>\r\n//               <h4>Order ID: ORD-{order.id}</h4>\r\n              \r\n//               <strong>Waste Type: </strong>{order.wasteType || \"Not specified\"}\r\n//               <br/>\r\n//               <br/>\r\n//               <strong>Status:</strong> <span className=\"order-status-text\">{order.status}</span>\r\n//               {/* <p>Waste Type: {order.wasteType || \"Not specified\"}</p> */}\r\n//               <br/>\r\n//               <br/>\r\n//               <strong>Message: </strong><span className=\"order-status-text\">{order.message}</span>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default History;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport './History.css';\r\nimport { Link } from 'lucide-react';\r\n\r\nfunction History() {\r\n  const [orders, setOrders] = useState([]);\r\n  const [rejectedOrders, setRejectedOrders] = useState([]);\r\n  const userId = localStorage.getItem('userId'); // Get the user ID from localStorage\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        // Check if userId exists\r\n        console.log(\"User ID: \", userId);\r\n        if (!userId) {\r\n          console.log(\"No User ID found in localStorage\");\r\n          return;\r\n        }\r\n\r\n        // Fetching intake data\r\n        const intakeResponse = await axios.get('http://localhost:8085/intake/get');\r\n        console.log(\"Intake Response: \", intakeResponse.data); // Log the intake response\r\n        const fetchedOrders = intakeResponse.data;\r\n\r\n        // Filter the orders to only include those where the farmer.id matches the userId\r\n        const filteredOrders = fetchedOrders.filter(order => order.wasteDetailsId.farmer.id === parseInt(userId));\r\n\r\n        // Set orders based on the filtered data\r\n        setOrders(filteredOrders.filter(order => order.wasteDetailsId.status === \"COLLECTED\"));\r\n        setRejectedOrders(filteredOrders.filter(order => order.wasteDetailsId.status === \"REJECTED\"));\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    }\r\n\r\n    if (userId) {\r\n      fetchData();\r\n    }\r\n  }, [userId]);\r\n\r\n  const generateInvoice = (order) => {\r\n    const doc = new jsPDF();\r\n\r\n    doc.setFontSize(22);\r\n    doc.text('FarmEco Invoice', 105, 20, { align: 'center' });\r\n    doc.setFontSize(12);\r\n    doc.text('Waste Selling Company', 105, 28, { align: 'center' });\r\n    doc.line(10, 35, 200, 35);\r\n\r\n    doc.setFontSize(10);\r\n    doc.text('FarmEco Pvt Ltd.', 10, 45);\r\n    doc.text('123 Greenfield Avenue, Pune, Maharashtra', 10, 50);\r\n    doc.text('Contact: +91-1234567890 | Email: support@farmeco.com', 10, 55);\r\n\r\n    const invoiceNumber = `FEC-${order.id.toString().padStart(6, '0')}-${order.wasteDetailsId.id}`;\r\n    doc.setFontSize(12);\r\n    doc.text(`Invoice Number: ${invoiceNumber}`, 140, 45);\r\n    doc.text(`Date: ${new Date(order.wasteDetailsId.pickupDate).toLocaleDateString()}`, 140, 50);\r\n\r\n    doc.autoTable({\r\n      startY: 70,\r\n      head: [['Field', 'Value']],\r\n      body: [\r\n        ['Farmer Name:', order.wasteDetailsId.farmer.name],\r\n        ['Place:', order.wasteDetailsId.address],\r\n        ['Collected By:', order.collectedBy]\r\n      ],\r\n      theme: 'striped',\r\n    });\r\n\r\n    doc.autoTable({\r\n      startY: doc.lastAutoTable.finalY + 15,\r\n      head: [['Item Description', 'Weight (tons)', 'Rate', 'Total Price']],\r\n      body: [['Agricultural Waste', `${order.weight}`, `${order.rate}`, `${order.totalPrice}`]],\r\n      theme: 'grid',\r\n    });\r\n\r\n    doc.save(`Invoice_${invoiceNumber}.pdf`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"order-history\">\r\n      <h2>Farmer Order History</h2>\r\n      <div className=\"combined-orders\">\r\n        <div className=\"card-container\">\r\n          {/* Displaying collected orders */}\r\n          {orders.map(order => (\r\n            <div className=\"order-card\" key={order.id}>\r\n              <img\r\n                src={`http://localhost:8085/uploads/${order.wasteDetailsId.imagePath}`} // Full image path\r\n                alt=\"Order Visual\"\r\n                height=\"150px\"\r\n                width=\"200px\"\r\n              />\r\n              <p><strong>Order Date:</strong> {new Date(order.wasteDetailsId.pickupDate).toLocaleDateString()}</p>\r\n              <p><strong>Place:</strong> {order.wasteDetailsId.address}</p>\r\n              <p><strong>Weight:</strong> {order.weight} kg</p>\r\n              <p><strong>Collected By:</strong> {order.collectedBy}</p>\r\n              <p><strong>Farmer Name:</strong> {order.wasteDetailsId.farmer.name}</p>\r\n              <p><strong>Rate:</strong> ₹{order.rate}</p>\r\n              <p><strong>Total Price:</strong> ₹{order.totalPrice}</p>\r\n              <button className=\"btn btn-danger\" onClick={() => generateInvoice(order)}>Generate Invoice</button>  \r\n             <Link to=\"/custheader/feedback1\" className=\"signup-link\">Back</Link>\r\n            </div>\r\n          ))}\r\n\r\n          {/* Displaying rejected orders */}\r\n          {rejectedOrders.map(order => (\r\n            <div key={order.id} className=\"order-card rejected\">\r\n              <img\r\n                src={`http://localhost:8085/uploads/${order.wasteDetailsId.imagePath}`} // Full image path\r\n                height=\"150px\"\r\n                width=\"200px\"\r\n                alt={order.wasteDetailsId.wasteType || \"Product\"}\r\n              />\r\n              <h4>Order ID: ORD-{order.id}</h4>\r\n              <strong>Waste Type: </strong>{order.wasteDetailsId.wasteType || \"Not specified\"}\r\n              <br />\r\n              <strong>Status:</strong> <span className=\"order-status-text\">{order.wasteDetailsId.status}</span>\r\n              <br />\r\n              <strong>Message: </strong><span className=\"order-status-text\">{order.wasteDetailsId.message}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,OAAO;AAC7B,OAAO,iBAAiB;AACxB,OAAO,eAAe;AACtB,SAASC,IAAI,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMY,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;EAE/Cf,SAAS,CAAC,MAAM;IACd,eAAegB,SAASA,CAAA,EAAG;MACzB,IAAI;QACF;QACAC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEL,MAAM,CAAC;QAChC,IAAI,CAACA,MAAM,EAAE;UACXI,OAAO,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}