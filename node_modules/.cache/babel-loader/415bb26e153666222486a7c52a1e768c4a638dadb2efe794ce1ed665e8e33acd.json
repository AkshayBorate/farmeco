{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder\\\\project\\\\src\\\\components\\\\login\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useRef, useState } from \"react\";\n// import { Link, useNavigate, useLocation } from \"react-router-dom\";\n// import \"./Login.css\";\n\n// export default function LoginPage() {\n//     const [errorMessage, setErrorMessage] = useState(\"\");\n//     const usernameRef = useRef();\n//     const passwordRef = useRef();\n//     const navigate = useNavigate();\n//     const location = useLocation();\n\n//     // Extract the state from the location object (i.e., where to navigate after successful login)\n//     const { from } = location.state || { from: { pathname: \"/dashboard\" } };\n\n//     const handleSignIn = () => {\n//         const username = usernameRef.current.value.trim();\n//         const password = passwordRef.current.value.trim();\n\n//         // if (!username || !password) {\n//         //     setErrorMessage(\"Please fill out both fields!\");\n//         //     return;\n//         // }\n\n//         // fetch(\"http://localhost:8084/getall\", {\n//         //     method: \"GET\",\n//         //     headers: {\n//         //         \"Content-Type\": \"application/json\",\n//         //     },\n//         // })\n//         //     .then((response) => {\n//         //         if (!response.ok) {\n//         //             throw new Error(\"Failed to fetch user data.\");\n//         //         }\n//         //         return response.json();\n//         //     })\n//         //     .then((users) => {\n//         //         const user = users.find(\n//         //             (u) => u.email === username && u.password === password\n//         //         );\n//         //         if (user) {\n//         //             alert(\"Login successful!\");\n//         //             navigate(from); // Redirect to the page passed in state (either dashboard or payment)\n//         //         } else {\n//         //             setErrorMessage(\"Invalid username or password.\");\n//         //         }\n//         //     })\n//         //     .catch((error) => {\n//         //         console.error(error);\n//         //         setErrorMessage(\"An error occurred while signing in.\");\n//         //     });\n//     };\n\n//     return (\n//         <div className=\"unique-login-page\">\n//             <div className=\"unique-login-container\">\n//                 <div className=\"unique-form-container\">\n//                     <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\n//                     <h2 className=\"unique-form-title\">Sign In</h2>\n//                     <form\n//                         className=\"unique-form unique-signin-form\"\n//                         onSubmit={(e) => e.preventDefault()}\n//                     >\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                         <div className=\"unique-form-group\">\n//                             <label htmlFor=\"username\">Username (Email)</label>\n//                             <input\n//                                 className=\"unique-form-input\"\n//                                 type=\"text\"\n//                                 name=\"username\"\n//                                 placeholder=\"Enter your username\"\n//                                 ref={usernameRef}\n//                                 required\n//                             />\n//                         </div>\n//                         <div className=\"unique-form-group\">\n//                             <label htmlFor=\"password\">Password</label>\n//                             <input\n//                                 className=\"unique-form-input\"\n//                                 type=\"password\"\n//                                 name=\"password\"\n//                                 placeholder=\"Enter your password\"\n//                                 ref={passwordRef}\n//                                 required\n//                             />\n//                         </div>\n//                         <div className=\"unique-form-options\">\n//                             <label className=\"unique-checkbox-label\">\n//                                 <input type=\"checkbox\" id=\"keepSignedIn\" />\n//                                 Keep me signed in\n//                             </label>\n//                         </div>\n//                         <button\n//                             type=\"button\"\n//                             className=\"unique-form-submit-button\"\n//                             onClick={handleSignIn}\n//                         >\n//                             Sign In\n//                         </button>\n//                     </form>\n//                     <div className=\"unique-signup-link\">\n//                         <p>\n//                             Don't have an account? <Link to=\"/signup\">Sign Up</Link>\n//                         </p>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\nimport React, { useRef } from \"react\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const usernameRef = useRef();\n  const passwordRef = useRef();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Extract the 'from' state (redirect destination) passed during navigation\n  const {\n    from\n  } = location.state || {\n    from: {\n      pathname: \"/dashboard\"\n    }\n  }; // Default to dashboard if no state is passed\n\n  const handleSignIn = () => {\n    const username = usernameRef.current.value.trim();\n    const password = passwordRef.current.value.trim();\n\n    // Hardcoded user credentials for login validation (you can replace this with actual logic if needed)\n    const hardcodedUser = {\n      email: \"user@example.com\",\n      // Example email\n      password: \"password123\" // Example password\n    };\n\n    // Simple validation (remove if you want no validation)\n    if (username === hardcodedUser.email && password === hardcodedUser.password) {\n      alert(\"Login successful!\");\n      navigate(from); // Redirect to the page passed in the 'from' state\n    } else {\n      alert(\"Invalid username or password.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unique-login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unique-login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unique-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/loginc\",\n          className: \"signup-link\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"unique-form-title\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"unique-form unique-signin-form\",\n          onSubmit: e => e.preventDefault(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unique-form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username (Email)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"unique-form-input\",\n              type: \"text\",\n              name: \"username\",\n              placeholder: \"Enter your username\",\n              ref: usernameRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unique-form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"unique-form-input\",\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Enter your password\",\n              ref: passwordRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"unique-form-submit-button\",\n            onClick: handleSignIn,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"unique-signup-link\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"zyawqg3P3ku838cQERkQemiCPCA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useRef","Link","useNavigate","useLocation","jsxDEV","_jsxDEV","LoginPage","_s","usernameRef","passwordRef","navigate","location","from","state","pathname","handleSignIn","username","current","value","trim","password","hardcodedUser","email","alert","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","htmlFor","type","name","placeholder","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/New folder/project/src/components/login/Login.js"],"sourcesContent":["// import React, { useRef, useState } from \"react\";\r\n// import { Link, useNavigate, useLocation } from \"react-router-dom\";\r\n// import \"./Login.css\";\r\n\r\n// export default function LoginPage() {\r\n//     const [errorMessage, setErrorMessage] = useState(\"\");\r\n//     const usernameRef = useRef();\r\n//     const passwordRef = useRef();\r\n//     const navigate = useNavigate();\r\n//     const location = useLocation();\r\n\r\n//     // Extract the state from the location object (i.e., where to navigate after successful login)\r\n//     const { from } = location.state || { from: { pathname: \"/dashboard\" } };\r\n\r\n//     const handleSignIn = () => {\r\n//         const username = usernameRef.current.value.trim();\r\n//         const password = passwordRef.current.value.trim();\r\n\r\n//         // if (!username || !password) {\r\n//         //     setErrorMessage(\"Please fill out both fields!\");\r\n//         //     return;\r\n//         // }\r\n\r\n//         // fetch(\"http://localhost:8084/getall\", {\r\n//         //     method: \"GET\",\r\n//         //     headers: {\r\n//         //         \"Content-Type\": \"application/json\",\r\n//         //     },\r\n//         // })\r\n//         //     .then((response) => {\r\n//         //         if (!response.ok) {\r\n//         //             throw new Error(\"Failed to fetch user data.\");\r\n//         //         }\r\n//         //         return response.json();\r\n//         //     })\r\n//         //     .then((users) => {\r\n//         //         const user = users.find(\r\n//         //             (u) => u.email === username && u.password === password\r\n//         //         );\r\n//         //         if (user) {\r\n//         //             alert(\"Login successful!\");\r\n//         //             navigate(from); // Redirect to the page passed in state (either dashboard or payment)\r\n//         //         } else {\r\n//         //             setErrorMessage(\"Invalid username or password.\");\r\n//         //         }\r\n//         //     })\r\n//         //     .catch((error) => {\r\n//         //         console.error(error);\r\n//         //         setErrorMessage(\"An error occurred while signing in.\");\r\n//         //     });\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"unique-login-page\">\r\n//             <div className=\"unique-login-container\">\r\n//                 <div className=\"unique-form-container\">\r\n//                     <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\r\n//                     <h2 className=\"unique-form-title\">Sign In</h2>\r\n//                     <form\r\n//                         className=\"unique-form unique-signin-form\"\r\n//                         onSubmit={(e) => e.preventDefault()}\r\n//                     >\r\n//                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n//                         <div className=\"unique-form-group\">\r\n//                             <label htmlFor=\"username\">Username (Email)</label>\r\n//                             <input\r\n//                                 className=\"unique-form-input\"\r\n//                                 type=\"text\"\r\n//                                 name=\"username\"\r\n//                                 placeholder=\"Enter your username\"\r\n//                                 ref={usernameRef}\r\n//                                 required\r\n//                             />\r\n//                         </div>\r\n//                         <div className=\"unique-form-group\">\r\n//                             <label htmlFor=\"password\">Password</label>\r\n//                             <input\r\n//                                 className=\"unique-form-input\"\r\n//                                 type=\"password\"\r\n//                                 name=\"password\"\r\n//                                 placeholder=\"Enter your password\"\r\n//                                 ref={passwordRef}\r\n//                                 required\r\n//                             />\r\n//                         </div>\r\n//                         <div className=\"unique-form-options\">\r\n//                             <label className=\"unique-checkbox-label\">\r\n//                                 <input type=\"checkbox\" id=\"keepSignedIn\" />\r\n//                                 Keep me signed in\r\n//                             </label>\r\n//                         </div>\r\n//                         <button\r\n//                             type=\"button\"\r\n//                             className=\"unique-form-submit-button\"\r\n//                             onClick={handleSignIn}\r\n//                         >\r\n//                             Sign In\r\n//                         </button>\r\n//                     </form>\r\n//                     <div className=\"unique-signup-link\">\r\n//                         <p>\r\n//                             Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n//                         </p>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\n\r\nimport React, { useRef } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\n\r\nexport default function LoginPage() {\r\n    const usernameRef = useRef();\r\n    const passwordRef = useRef();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    // Extract the 'from' state (redirect destination) passed during navigation\r\n    const { from } = location.state || { from: { pathname: \"/dashboard\" } };  // Default to dashboard if no state is passed\r\n\r\n    const handleSignIn = () => {\r\n        const username = usernameRef.current.value.trim();\r\n        const password = passwordRef.current.value.trim();\r\n\r\n        // Hardcoded user credentials for login validation (you can replace this with actual logic if needed)\r\n        const hardcodedUser = {\r\n            email: \"user@example.com\", // Example email\r\n            password: \"password123\",    // Example password\r\n        };\r\n\r\n        // Simple validation (remove if you want no validation)\r\n        if (username === hardcodedUser.email && password === hardcodedUser.password) {\r\n            alert(\"Login successful!\");\r\n            navigate(from);  // Redirect to the page passed in the 'from' state\r\n        } else {\r\n            alert(\"Invalid username or password.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"unique-login-page\">\r\n            <div className=\"unique-login-container\">\r\n                <div className=\"unique-form-container\">\r\n                    <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\r\n                    <h2 className=\"unique-form-title\">Sign In</h2>\r\n                    <form\r\n                        className=\"unique-form unique-signin-form\"\r\n                        onSubmit={(e) => e.preventDefault()}\r\n                    >\r\n                        <div className=\"unique-form-group\">\r\n                            <label htmlFor=\"username\">Username (Email)</label>\r\n                            <input\r\n                                className=\"unique-form-input\"\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                placeholder=\"Enter your username\"\r\n                                ref={usernameRef}\r\n                            />\r\n                        </div>\r\n                        <div className=\"unique-form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input\r\n                                className=\"unique-form-input\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Enter your password\"\r\n                                ref={passwordRef}\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"unique-form-submit-button\"\r\n                            onClick={handleSignIn}\r\n                        >\r\n                            Sign In\r\n                        </button>\r\n                    </form>\r\n                    <div className=\"unique-signup-link\">\r\n                        <p>\r\n                            Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}