{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder\\\\project\\\\src\\\\components\\\\customer\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"../dashboard.css\";\n// import { Link } from 'react-router-dom';\n// import { Redirect } from 'react-router-dom';\n\n// // Dummy Data for demonstration\n// const farmerData = {\n//   name: \"Akshay\",\n//   place: \"Green Valley Farm, Nashik\",\n//   email: \"akshayb@email.com\",\n//   orderStatus: [\n//     {\n//       orderId: \"ORD12345\",\n//       status: \"Confirmed\",\n//       pickupDate: \"2024-12-20\",\n//       deliveryDate: \"2024-12-22\",\n//       trackingLink: \"https://tracking.example.com/ORD12345\",\n//       currentLocation: \"Nashik Hub\",\n//     },\n//     {\n//       orderId: \"ORD12346\",\n//       status: \"Pending\",\n//       pickupDate: \"2024-12-25\",\n//       deliveryDate: \"2024-12-27\",\n//       trackingLink: \"https://tracking.example.com/ORD12346\",\n//       currentLocation: null,\n//     },\n//     {\n//       orderId: \"ORD12347\",\n//       status: \"Cancelled\",\n//       pickupDate: null,\n//       deliveryDate: null,\n//       trackingLink: null,\n//       currentLocation: null,\n//     },\n//   ],\n// };\n\n// const TrackOrder = ({ order }) => {\n//   if (order.status === \"Cancelled\") {\n//     return <p>This order was cancelled. No tracking information available.</p>;\n//   }\n\n//   return (\n//     <div className=\"tracking-info\">\n//       <p>\n//         Track Order:{\" \"}\n//         <a href={order.trackingLink} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {order.trackingLink}\n//         </a>\n//       </p>\n//       {order.currentLocation ? (\n//         <p>Current Location: {order.currentLocation}</p>\n//       ) : (\n//         <p>Tracking information is not available yet.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// const FarmerDashboard = () => {\n//   const [farmer, setFarmer] = useState(farmerData);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n\n// const handleLogout = () => {\n//   alert(\"Logged out successfully!\");\n//   window.location.href = '/'; \n//   // Redirect to the home page\n//   // return <Redirect to=\"/\" />;\n// };\n\n//   const openTrackOrder = (order) => {\n//     setSelectedOrder(order);\n//   };\n\n//   return (\n//     <div className=\"farmer-dashboard\">\n//       {/* Header */}\n//       <header>\n//         <div className=\"logo\">Farm Dashboard</div>\n//         <div className=\"profile\">\n//           <span>{farmer.name}</span>\n//           <button onClick={handleLogout}>Logout</button>\n//         </div>\n//       </header>\n\n//       {/* Main Dashboard Area */}\n//       <section className=\"main-dashboard\">\n//         <h2>Welcome back, {farmer.name}!</h2>\n//         <div className=\"farmer-info\">\n//           <p>Name: {farmer.name}</p>\n//           <p>Place: {farmer.place}</p>\n//           <p>Email: {farmer.email}</p>\n//         </div>\n//       </section>\n\n//       {/* Order Status */}\n//       <section className=\"order-status\">\n//         <h3>Your Orders</h3>\n//         <div className=\"card-container\">\n//           {farmer.orderStatus.map((order, index) => (\n//             <div key={index} className=\"card\">\n//               <h4>Order ID: {order.orderId}</h4>\n//               <p>Status: <strong>{order.status}</strong></p>\n//               {order.pickupDate && (\n//                 <p>Pickup Date: {new Date(order.pickupDate).toLocaleDateString()}</p>\n//               )}\n//               {order.deliveryDate && (\n//                 <p>Delivery Date: {new Date(order.deliveryDate).toLocaleDateString()}</p>\n//               )}\n//               <button onClick={() => openTrackOrder(order)}>Track Order</button>\n//             </div>\n//           ))}\n//         </div>\n//       </section>\n\n//       {/* Track Order Modal */}\n//       {selectedOrder && (\n//         <section className=\"track-order-modal\">\n//           <div className=\"modal-content\">\n//             <h3>Tracking Order ID: {selectedOrder.orderId}</h3>\n//             <TrackOrder order={selectedOrder} />\n//             <button onClick={() => setSelectedOrder(null)}>Close</button>\n//           </div>\n//         </section>\n//       )}\n\n//       {/* Action Buttons */}\n//       <section className=\"action-buttons\">\n//        {/* <button>Create New Sale</button> */}\n\n//     <Link to=\"/sellwaste\">\n//       <button>Create New Sell</button>\n//     </Link>\n//     <Link to=\"/history\">\n//       <button>View All Sell</button>\n//     </Link>\n\n//       </section>\n//     </div>\n//   );\n// };\n\n// export default FarmerDashboard;\n\n// import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import \"./Dashboard.css\"; // Updated CSS file\n// import { Redirect } from \"react-router-dom\";\n// import i1 from \"./assets/Image1.jpg\"\n\n// const farmerData = {\n//   name: \"Akshay\",\n//   place: \"Green Valley Farm, Nashik\",\n//   email: \"akshayb@email.com\",\n//   orderStatus: [\n//     {\n//       orderId: \"ORD12345\",\n//       status: \"Confirmed\",\n//       pickupDate: \"2024-12-20\",\n//       deliveryDate: \"2024-12-22\",\n//       trackingLink: \"https://tracking.example.com/ORD12345\",\n//       currentLocation: \"Nashik Hub\",\n//       driverName: \"Chandu\"\n//     },\n//     {\n//       orderId: \"ORD12346\",\n//       status: \"Pending\",\n//       pickupDate: \"2024-12-25\",\n//       deliveryDate: \"2024-12-27\",\n//       trackingLink: \"https://tracking.example.com/ORD12346\",\n//       currentLocation: null,\n//       driverName: \"Not Assigned\"\n//     },\n//     {\n//       orderId: \"ORD12347\",\n//       status: \"Cancelled\",\n//       pickupDate: null,\n//       deliveryDate: null,\n//       trackingLink: null,\n//       currentLocation: null,\n//       driverName: \"Dagdu\"\n//     },\n//   ],\n// };\n\n// const TrackOrder = ({ order }) => {\n//   if (order.status === \"Cancelled\") {\n//     return <p>This order was cancelled. No tracking information available.</p>;\n//   }\n\n//   return (\n//     <div className=\"tracking-info\">\n//       <p>\n//         Track Order:{\" \"}\n//         <a href={order.trackingLink} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {order.trackingLink}\n//         </a>\n//       </p>\n//       {order.currentLocation ? (\n//         <p>Current Location: {order.currentLocation}</p>\n//       ) : (\n//         <p>Tracking information is not available yet.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// const FarmerDashboard = () => {\n//   const [farmer, setFarmer] = useState(farmerData);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n\n//   const handleLogout = () => {\n//     alert(\"Logged out successfully!\");\n//     window.location.href = \"/\";\n//   };\n\n//   const openTrackOrder = (order) => {\n//     setSelectedOrder(order);\n//   };\n\n//   return (\n//     <>\n//       <div className=\"farmer-dashboard\">\n//         {/* Header */}\n//         <header className=\"dashboard-header\">\n//           <div className=\"logo\">Farm Dashboard</div>\n//           <div className=\"profile\">\n//             <span className=\"p-3\">{farmer.name}</span>\n//             <button className=\"logout-button\" onClick={handleLogout}>\n//               Logout\n//             </button>\n//           </div>\n//         </header>\n\n//         {/* Main Dashboard */}\n//         <section className=\"main-dashboard\">\n//           <div className=\"row\">\n//             <div className=\"col-xl-10\">\n//               <h2>Welcome back, {farmer.name}!</h2>\n//             </div>\n//             <div className=\"col-xl-2 align-content-right\">\n//               <Link to=\"/custheader/editprofile\"><button type=\"button\" class=\"btn btn-secondary\">Edit Profile</button></Link>\n//             </div>\n//             <div className=\"farmer-info\">\n//               <p><strong>Name:</strong> {farmer.name}</p>\n//               <p><strong>Place:</strong> {farmer.place}</p>\n//               <p><strong>Email:</strong> {farmer.email}</p>\n//             </div>\n//           </div>\n//         </section>\n\n//         {/* Order Section */}\n//         <section className=\"order-status\">\n//           <h3>Your Orders</h3>\n//           <div className=\"card-container\">\n//             {farmer.orderStatus.map((order, index) => (\n//               <div key={index} className={`card ${order.status.toLowerCase()}`}>\n//                 <h4>Order ID: {order.orderId}</h4>\n//                 <div className=\"d-flex justify-content-center align-items-center my-2\">\n//                 <img src={i1} height=\"150px\" width=\"200px\" />\n//               </div>\n//                 <p>\n//                   Status: <span className=\"order-status-text\">{order.status}</span>\n//                 </p>\n//                 {order.pickupDate && <p>Pickup: {order.pickupDate}</p>}\n//                 {order.deliveryDate && <p>Driver Name: {order.driverName}</p>}\n//                 <button className=\"track-button\" onClick={() => openTrackOrder(order)}>\n//                   Track Order\n//                 </button>\n\n//               </div>\n//             ))}\n//           </div>\n//         </section>\n\n//         {/* Modal for Tracking */}\n//         {selectedOrder && (\n//           <div className=\"track-order-modal\">\n//             <div className=\"modal-content\">\n//               <h3>Tracking Order ID: {selectedOrder.orderId}</h3>\n//               <TrackOrder order={selectedOrder} />\n//               <button className=\"close-button\" onClick={() => setSelectedOrder(null)}>\n//                 Close\n//               </button>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Action Buttons */}\n//         <section className=\"action-buttons\">\n//           <Link to=\"/custheader/sellwaste\">\n//             <button className=\"action-button\">Sell new Waste</button>\n//           </Link>\n//           <Link to=\"/custheader/history\">\n//             <button className=\"action-button\">Previous Orders</button>\n//           </Link>\n//         </section>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default FarmerDashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import \"./Dashboard.css\"; // Updated CSS file\n// import i1 from \"./assets/Image1.jpg\";\n\n// const TrackOrder = ({ order }) => {\n//   if (order.status === \"Cancelled\") {\n//     return <p>This order was cancelled. No tracking information available.</p>;\n//   }\n\n//   return (\n//     <div className=\"tracking-info\">\n//       <p>\n//         Track Order:{\" \"}\n//         <a href={order.trackingLink} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {order.trackingLink}\n//         </a>\n//       </p>\n//       {order.currentLocation ? (\n//         <p>Current Location: {order.currentLocation}</p>\n//       ) : (\n//         <p>Tracking information is not available yet.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// const FarmerDashboard = () => {\n//   const [farmer, setFarmer] = useState(null); // For farmer profile data\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n\n//   useEffect(() => {\n//     const userId = localStorage.getItem(\"userId\"); // Retrieve user ID from localStorage\n\n//     if (userId) {\n//       // Fetch farmer profile data using the user ID\n//       fetch(`http://localhost:8085/api/farmers/get/${userId}`)\n//         .then((response) => response.json())\n//         .then((data) => {\n//           setFarmer(data); // Set the fetched farmer data\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching farmer data:\", error);\n//         });\n//     } else {\n//       console.error(\"No user ID found in localStorage\");\n//     }\n//   }, []);\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"userId\"); // Clear user ID on logout\n//     alert(\"Logged out successfully!\");\n//     window.location.href = \"/\";\n//   };\n\n//   const openTrackOrder = (order) => {\n//     setSelectedOrder(order);\n//   };\n\n//   // Static order data\n//   const orderStatus = [\n//     {\n//       orderId: \"ORD12345\",\n//       status: \"Confirmed\",\n//       pickupDate: \"2024-12-20\",\n//       deliveryDate: \"2024-12-22\",\n//       trackingLink: \"https://tracking.example.com/ORD12345\",\n//       currentLocation: \"Nashik Hub\",\n//       driverName: \"Chandu\",\n//     },\n//     {\n//       orderId: \"ORD12346\",\n//       status: \"Pending\",\n//       pickupDate: \"2024-12-25\",\n//       deliveryDate: \"2024-12-27\",\n//       trackingLink: \"https://tracking.example.com/ORD12346\",\n//       currentLocation: null,\n//       driverName: \"Not Assigned\",\n//     },\n//     {\n//       orderId: \"ORD12347\",\n//       status: \"Cancelled\",\n//       pickupDate: null,\n//       deliveryDate: null,\n//       trackingLink: null,\n//       currentLocation: null,\n//       driverName: \"Dagdu\",\n//     },\n//   ];\n\n//   if (!farmer) {\n//     return <div>Loading...</div>; // Show loading until profile data is fetched\n//   }\n\n//   return (\n//     <>\n//       <div className=\"farmer-dashboard\">\n//         {/* Header */}\n//         <header className=\"dashboard-header\">\n//           <div className=\"logo\">Farm Dashboard</div>\n//           <div className=\"profile\">\n//             <span className=\"p-3\">{farmer.name}</span>\n//             <button className=\"logout-button\" onClick={handleLogout}>\n//               Logout\n//             </button>\n//           </div>\n//         </header>\n\n//         {/* Main Dashboard */}\n//         <section className=\"main-dashboard\">\n//           <div className=\"row\">\n//             <div className=\"col-xl-10\">\n//               <h2>Welcome, {farmer.name}!</h2>\n//             </div>\n//             <div className=\"col-xl-2 align-content-right\">\n//               <Link to=\"/custheader/editprofile\">\n//                 <button type=\"button\" className=\"btn btn-secondary\">\n//                   Edit Profile\n//                 </button>\n//               </Link>\n//             </div>\n//             <div className=\"farmer-info\">\n//               <p><strong>Id:</strong>F19050{farmer.id}</p>\n//               <p><strong>Name:</strong> {farmer.name}</p>\n//               <p><strong>Address:</strong> {farmer.address}</p>\n//               <p><strong>Email:</strong> {farmer.email}</p>\n//             </div>\n//           </div>\n//         </section>\n\n//         {/* Order Section */}\n//         <section className=\"order-status\">\n//           <h3>Your Orders</h3>\n//           <div className=\"card-container\">\n//             {orderStatus.map((order, index) => (\n//               <div key={index} className={`card ${order.status.toLowerCase()}`}>\n//                 <h4>Order ID: {order.orderId}</h4>\n//                 <div className=\"d-flex justify-content-center align-items-center my-2\">\n//                   <img src={i1} height=\"150px\" width=\"200px\" alt=\"Product\" />\n//                 </div>\n//                 <p>\n//                   Status: <span className=\"order-status-text\">{order.status}</span>\n//                 </p>\n//                 {order.pickupDate && <p>Pickup: {order.pickupDate}</p>}\n//                 {order.deliveryDate && <p>Driver Name: {order.driverName}</p>}\n//                 <button className=\"track-button\" onClick={() => openTrackOrder(order)}>\n//                   Track Order\n//                 </button>\n//               </div>\n//             ))}\n//           </div>\n//         </section>\n\n//         {/* Modal for Tracking */}\n//         {selectedOrder && (\n//           <div className=\"track-order-modal\">\n//             <div className=\"modal-content\">\n//               <h3>Tracking Order ID: {selectedOrder.orderId}</h3>\n//               <TrackOrder order={selectedOrder} />\n//               <button className=\"close-button\" onClick={() => setSelectedOrder(null)}>\n//                 Close\n//               </button>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Action Buttons */}\n//         <section className=\"action-buttons\">\n//           <Link to=\"/custheader/sellwaste\">\n//             <button className=\"action-button\">Sell new Waste</button>\n//           </Link>\n//           <Link to=\"/custheader/history\">\n//             <button className=\"action-button\">Previous Orders</button>\n//           </Link>\n//         </section>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default FarmerDashboard;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Dashboard.css\";\nimport i1 from \"./assets/Image1.jpg\"; // Fallback image or placeholder\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrackOrder = ({\n  order\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tracking-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Pickup Date: \", order.pickupDate ? new Date(order.pickupDate).toLocaleDateString() : \"Not Scheduled\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 7\n    }, this), order.trackingLink ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Track Order: \", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: order.trackingLink,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: order.trackingLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Tracking information is not available yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 9\n    }, this), order.currentLocation && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Location: \", order.currentLocation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 515,\n    columnNumber: 5\n  }, this);\n};\n_c = TrackOrder;\nconst FarmerDashboard = () => {\n  _s();\n  const [farmer, setFarmer] = useState(null);\n  const [orderStatus, setOrderStatus] = useState([]);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    if (userId) {\n      // Fetch farmer profile\n      fetch(`http://localhost:8085/api/farmers/get/${userId}`).then(response => response.json()).then(data => {\n        setFarmer(data);\n      }).catch(error => {\n        console.error(\"Error fetching farmer data:\", error);\n      });\n\n      // Fetch farmer orders from the backend API\n      fetch(`http://localhost:8085/waste-details/orders/${userId}`).then(response => response.json()).then(data => {\n        // Filter orders with status \"Accepted\", \"Pending\", or \"null\"\n        const filteredOrders = data.filter(order => [\"ACCEPTED\", \"PENDING\", null].includes(order.status));\n        setOrderStatus(filteredOrders);\n        setLoading(false);\n      }).catch(error => {\n        console.error(\"Error fetching order data:\", error);\n        setLoading(false);\n      });\n    } else {\n      console.error(\"No user ID found in localStorage\");\n    }\n  }, []);\n  const handleLogout = () => {\n    localStorage.removeItem(\"userId\");\n    alert(\"Logged out successfully!\");\n    window.location.href = \"/\";\n  };\n  const openTrackOrder = order => {\n    setSelectedOrder(order);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 12\n    }, this);\n  }\n  if (!farmer) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Unable to load farmer data. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"farmer-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: \"Farm Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"p-3\",\n          children: farmer.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main-dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-10\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Welcome, \", farmer.name, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-2 align-content-right\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/custheader/editprofile\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              children: \"Edit Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"farmer-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Id:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 15\n            }, this), \"F19050\", farmer.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 15\n            }, this), \" \", farmer.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 15\n            }, this), \" \", farmer.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 15\n            }, this), \" \", farmer.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"order-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: orderStatus.length > 0 ? orderStatus.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card ${order.status ? order.status.toLowerCase() : \"pending\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Order ID: ORD-\", order.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center align-items-center my-2\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: order.imagePath,\n              height: \"150px\",\n              width: \"200px\",\n              alt: order.wasteType || \"Product\",\n              onError: e => {\n                console.error(\"Image not found:\", order.imagePath);\n                e.target.src = i1; // Fallback image if the image is not found\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Waste Type: \", order.wasteType || \"Not specified\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"order-status-text\",\n              children: order.status || \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"order-status-text\",\n              children: order.farmerid || \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 17\n          }, this), order.pickupDate && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Pickup: \", new Date(order.pickupDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"track-button\",\n            onClick: () => openTrackOrder(order),\n            children: \"Track Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 17\n          }, this)]\n        }, order.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No orders available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 7\n    }, this), selectedOrder && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-order-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Tracking Order ID: \", selectedOrder.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TrackOrder, {\n          order: selectedOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setSelectedOrder(null),\n          \"aria-label\": \"Close tracking modal\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/custheader/sellwaste\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          children: \"Sell new Waste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/custheader/history\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          children: \"Previous Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 591,\n    columnNumber: 5\n  }, this);\n};\n_s(FarmerDashboard, \"XxjiyC55yR1IGC+Yf6jhzMZtkeE=\");\n_c2 = FarmerDashboard;\nexport default FarmerDashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"TrackOrder\");\n$RefreshReg$(_c2, \"FarmerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","i1","jsxDEV","_jsxDEV","TrackOrder","order","className","children","pickupDate","Date","toLocaleDateString","fileName","_jsxFileName","lineNumber","columnNumber","trackingLink","href","target","rel","currentLocation","_c","FarmerDashboard","_s","farmer","setFarmer","orderStatus","setOrderStatus","selectedOrder","setSelectedOrder","loading","setLoading","userId","localStorage","getItem","fetch","then","response","json","data","catch","error","console","filteredOrders","filter","includes","status","handleLogout","removeItem","alert","window","location","openTrackOrder","name","onClick","to","type","id","address","email","length","map","toLowerCase","src","imagePath","height","width","alt","wasteType","onError","e","farmerid","_c2","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/New folder/project/src/components/customer/Dashboard.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"../dashboard.css\";\r\n// import { Link } from 'react-router-dom';\r\n// import { Redirect } from 'react-router-dom';\r\n\r\n// // Dummy Data for demonstration\r\n// const farmerData = {\r\n//   name: \"Akshay\",\r\n//   place: \"Green Valley Farm, Nashik\",\r\n//   email: \"akshayb@email.com\",\r\n//   orderStatus: [\r\n//     {\r\n//       orderId: \"ORD12345\",\r\n//       status: \"Confirmed\",\r\n//       pickupDate: \"2024-12-20\",\r\n//       deliveryDate: \"2024-12-22\",\r\n//       trackingLink: \"https://tracking.example.com/ORD12345\",\r\n//       currentLocation: \"Nashik Hub\",\r\n//     },\r\n//     {\r\n//       orderId: \"ORD12346\",\r\n//       status: \"Pending\",\r\n//       pickupDate: \"2024-12-25\",\r\n//       deliveryDate: \"2024-12-27\",\r\n//       trackingLink: \"https://tracking.example.com/ORD12346\",\r\n//       currentLocation: null,\r\n//     },\r\n//     {\r\n//       orderId: \"ORD12347\",\r\n//       status: \"Cancelled\",\r\n//       pickupDate: null,\r\n//       deliveryDate: null,\r\n//       trackingLink: null,\r\n//       currentLocation: null,\r\n//     },\r\n//   ],\r\n// };\r\n\r\n// const TrackOrder = ({ order }) => {\r\n//   if (order.status === \"Cancelled\") {\r\n//     return <p>This order was cancelled. No tracking information available.</p>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"tracking-info\">\r\n//       <p>\r\n//         Track Order:{\" \"}\r\n//         <a href={order.trackingLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//           {order.trackingLink}\r\n//         </a>\r\n//       </p>\r\n//       {order.currentLocation ? (\r\n//         <p>Current Location: {order.currentLocation}</p>\r\n//       ) : (\r\n//         <p>Tracking information is not available yet.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const FarmerDashboard = () => {\r\n//   const [farmer, setFarmer] = useState(farmerData);\r\n//   const [selectedOrder, setSelectedOrder] = useState(null);\r\n\r\n\r\n\r\n// const handleLogout = () => {\r\n//   alert(\"Logged out successfully!\");\r\n//   window.location.href = '/'; \r\n//   // Redirect to the home page\r\n//   // return <Redirect to=\"/\" />;\r\n// };\r\n\r\n//   const openTrackOrder = (order) => {\r\n//     setSelectedOrder(order);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"farmer-dashboard\">\r\n//       {/* Header */}\r\n//       <header>\r\n//         <div className=\"logo\">Farm Dashboard</div>\r\n//         <div className=\"profile\">\r\n//           <span>{farmer.name}</span>\r\n//           <button onClick={handleLogout}>Logout</button>\r\n//         </div>\r\n//       </header>\r\n\r\n//       {/* Main Dashboard Area */}\r\n//       <section className=\"main-dashboard\">\r\n//         <h2>Welcome back, {farmer.name}!</h2>\r\n//         <div className=\"farmer-info\">\r\n//           <p>Name: {farmer.name}</p>\r\n//           <p>Place: {farmer.place}</p>\r\n//           <p>Email: {farmer.email}</p>\r\n//         </div>\r\n//       </section>\r\n\r\n//       {/* Order Status */}\r\n//       <section className=\"order-status\">\r\n//         <h3>Your Orders</h3>\r\n//         <div className=\"card-container\">\r\n//           {farmer.orderStatus.map((order, index) => (\r\n//             <div key={index} className=\"card\">\r\n//               <h4>Order ID: {order.orderId}</h4>\r\n//               <p>Status: <strong>{order.status}</strong></p>\r\n//               {order.pickupDate && (\r\n//                 <p>Pickup Date: {new Date(order.pickupDate).toLocaleDateString()}</p>\r\n//               )}\r\n//               {order.deliveryDate && (\r\n//                 <p>Delivery Date: {new Date(order.deliveryDate).toLocaleDateString()}</p>\r\n//               )}\r\n//               <button onClick={() => openTrackOrder(order)}>Track Order</button>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </section>\r\n\r\n//       {/* Track Order Modal */}\r\n//       {selectedOrder && (\r\n//         <section className=\"track-order-modal\">\r\n//           <div className=\"modal-content\">\r\n//             <h3>Tracking Order ID: {selectedOrder.orderId}</h3>\r\n//             <TrackOrder order={selectedOrder} />\r\n//             <button onClick={() => setSelectedOrder(null)}>Close</button>\r\n//           </div>\r\n//         </section>\r\n//       )}\r\n\r\n//       {/* Action Buttons */}\r\n//       <section className=\"action-buttons\">\r\n//        {/* <button>Create New Sale</button> */}\r\n\r\n\r\n\r\n//     <Link to=\"/sellwaste\">\r\n//       <button>Create New Sell</button>\r\n//     </Link>\r\n//     <Link to=\"/history\">\r\n//       <button>View All Sell</button>\r\n//     </Link>\r\n\r\n\r\n\r\n\r\n//       </section>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FarmerDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import \"./Dashboard.css\"; // Updated CSS file\r\n// import { Redirect } from \"react-router-dom\";\r\n// import i1 from \"./assets/Image1.jpg\"\r\n\r\n\r\n// const farmerData = {\r\n//   name: \"Akshay\",\r\n//   place: \"Green Valley Farm, Nashik\",\r\n//   email: \"akshayb@email.com\",\r\n//   orderStatus: [\r\n//     {\r\n//       orderId: \"ORD12345\",\r\n//       status: \"Confirmed\",\r\n//       pickupDate: \"2024-12-20\",\r\n//       deliveryDate: \"2024-12-22\",\r\n//       trackingLink: \"https://tracking.example.com/ORD12345\",\r\n//       currentLocation: \"Nashik Hub\",\r\n//       driverName: \"Chandu\"\r\n//     },\r\n//     {\r\n//       orderId: \"ORD12346\",\r\n//       status: \"Pending\",\r\n//       pickupDate: \"2024-12-25\",\r\n//       deliveryDate: \"2024-12-27\",\r\n//       trackingLink: \"https://tracking.example.com/ORD12346\",\r\n//       currentLocation: null,\r\n//       driverName: \"Not Assigned\"\r\n//     },\r\n//     {\r\n//       orderId: \"ORD12347\",\r\n//       status: \"Cancelled\",\r\n//       pickupDate: null,\r\n//       deliveryDate: null,\r\n//       trackingLink: null,\r\n//       currentLocation: null,\r\n//       driverName: \"Dagdu\"\r\n//     },\r\n//   ],\r\n// };\r\n\r\n// const TrackOrder = ({ order }) => {\r\n//   if (order.status === \"Cancelled\") {\r\n//     return <p>This order was cancelled. No tracking information available.</p>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"tracking-info\">\r\n//       <p>\r\n//         Track Order:{\" \"}\r\n//         <a href={order.trackingLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//           {order.trackingLink}\r\n//         </a>\r\n//       </p>\r\n//       {order.currentLocation ? (\r\n//         <p>Current Location: {order.currentLocation}</p>\r\n//       ) : (\r\n//         <p>Tracking information is not available yet.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const FarmerDashboard = () => {\r\n//   const [farmer, setFarmer] = useState(farmerData);\r\n//   const [selectedOrder, setSelectedOrder] = useState(null);\r\n\r\n//   const handleLogout = () => {\r\n//     alert(\"Logged out successfully!\");\r\n//     window.location.href = \"/\";\r\n//   };\r\n\r\n//   const openTrackOrder = (order) => {\r\n//     setSelectedOrder(order);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"farmer-dashboard\">\r\n//         {/* Header */}\r\n//         <header className=\"dashboard-header\">\r\n//           <div className=\"logo\">Farm Dashboard</div>\r\n//           <div className=\"profile\">\r\n//             <span className=\"p-3\">{farmer.name}</span>\r\n//             <button className=\"logout-button\" onClick={handleLogout}>\r\n//               Logout\r\n//             </button>\r\n//           </div>\r\n//         </header>\r\n\r\n//         {/* Main Dashboard */}\r\n//         <section className=\"main-dashboard\">\r\n//           <div className=\"row\">\r\n//             <div className=\"col-xl-10\">\r\n//               <h2>Welcome back, {farmer.name}!</h2>\r\n//             </div>\r\n//             <div className=\"col-xl-2 align-content-right\">\r\n//               <Link to=\"/custheader/editprofile\"><button type=\"button\" class=\"btn btn-secondary\">Edit Profile</button></Link>\r\n//             </div>\r\n//             <div className=\"farmer-info\">\r\n//               <p><strong>Name:</strong> {farmer.name}</p>\r\n//               <p><strong>Place:</strong> {farmer.place}</p>\r\n//               <p><strong>Email:</strong> {farmer.email}</p>\r\n//             </div>\r\n//           </div>\r\n//         </section>\r\n\r\n//         {/* Order Section */}\r\n//         <section className=\"order-status\">\r\n//           <h3>Your Orders</h3>\r\n//           <div className=\"card-container\">\r\n//             {farmer.orderStatus.map((order, index) => (\r\n//               <div key={index} className={`card ${order.status.toLowerCase()}`}>\r\n//                 <h4>Order ID: {order.orderId}</h4>\r\n//                 <div className=\"d-flex justify-content-center align-items-center my-2\">\r\n//                 <img src={i1} height=\"150px\" width=\"200px\" />\r\n//               </div>\r\n//                 <p>\r\n//                   Status: <span className=\"order-status-text\">{order.status}</span>\r\n//                 </p>\r\n//                 {order.pickupDate && <p>Pickup: {order.pickupDate}</p>}\r\n//                 {order.deliveryDate && <p>Driver Name: {order.driverName}</p>}\r\n//                 <button className=\"track-button\" onClick={() => openTrackOrder(order)}>\r\n//                   Track Order\r\n//                 </button>\r\n\r\n\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </section>\r\n\r\n//         {/* Modal for Tracking */}\r\n//         {selectedOrder && (\r\n//           <div className=\"track-order-modal\">\r\n//             <div className=\"modal-content\">\r\n//               <h3>Tracking Order ID: {selectedOrder.orderId}</h3>\r\n//               <TrackOrder order={selectedOrder} />\r\n//               <button className=\"close-button\" onClick={() => setSelectedOrder(null)}>\r\n//                 Close\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Action Buttons */}\r\n//         <section className=\"action-buttons\">\r\n//           <Link to=\"/custheader/sellwaste\">\r\n//             <button className=\"action-button\">Sell new Waste</button>\r\n//           </Link>\r\n//           <Link to=\"/custheader/history\">\r\n//             <button className=\"action-button\">Previous Orders</button>\r\n//           </Link>\r\n//         </section>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default FarmerDashboard;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import \"./Dashboard.css\"; // Updated CSS file\r\n// import i1 from \"./assets/Image1.jpg\";\r\n\r\n// const TrackOrder = ({ order }) => {\r\n//   if (order.status === \"Cancelled\") {\r\n//     return <p>This order was cancelled. No tracking information available.</p>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"tracking-info\">\r\n//       <p>\r\n//         Track Order:{\" \"}\r\n//         <a href={order.trackingLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//           {order.trackingLink}\r\n//         </a>\r\n//       </p>\r\n//       {order.currentLocation ? (\r\n//         <p>Current Location: {order.currentLocation}</p>\r\n//       ) : (\r\n//         <p>Tracking information is not available yet.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const FarmerDashboard = () => {\r\n//   const [farmer, setFarmer] = useState(null); // For farmer profile data\r\n//   const [selectedOrder, setSelectedOrder] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const userId = localStorage.getItem(\"userId\"); // Retrieve user ID from localStorage\r\n\r\n//     if (userId) {\r\n//       // Fetch farmer profile data using the user ID\r\n//       fetch(`http://localhost:8085/api/farmers/get/${userId}`)\r\n//         .then((response) => response.json())\r\n//         .then((data) => {\r\n//           setFarmer(data); // Set the fetched farmer data\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching farmer data:\", error);\r\n//         });\r\n//     } else {\r\n//       console.error(\"No user ID found in localStorage\");\r\n//     }\r\n//   }, []);\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem(\"userId\"); // Clear user ID on logout\r\n//     alert(\"Logged out successfully!\");\r\n//     window.location.href = \"/\";\r\n//   };\r\n\r\n//   const openTrackOrder = (order) => {\r\n//     setSelectedOrder(order);\r\n//   };\r\n\r\n//   // Static order data\r\n//   const orderStatus = [\r\n//     {\r\n//       orderId: \"ORD12345\",\r\n//       status: \"Confirmed\",\r\n//       pickupDate: \"2024-12-20\",\r\n//       deliveryDate: \"2024-12-22\",\r\n//       trackingLink: \"https://tracking.example.com/ORD12345\",\r\n//       currentLocation: \"Nashik Hub\",\r\n//       driverName: \"Chandu\",\r\n//     },\r\n//     {\r\n//       orderId: \"ORD12346\",\r\n//       status: \"Pending\",\r\n//       pickupDate: \"2024-12-25\",\r\n//       deliveryDate: \"2024-12-27\",\r\n//       trackingLink: \"https://tracking.example.com/ORD12346\",\r\n//       currentLocation: null,\r\n//       driverName: \"Not Assigned\",\r\n//     },\r\n//     {\r\n//       orderId: \"ORD12347\",\r\n//       status: \"Cancelled\",\r\n//       pickupDate: null,\r\n//       deliveryDate: null,\r\n//       trackingLink: null,\r\n//       currentLocation: null,\r\n//       driverName: \"Dagdu\",\r\n//     },\r\n//   ];\r\n\r\n//   if (!farmer) {\r\n//     return <div>Loading...</div>; // Show loading until profile data is fetched\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"farmer-dashboard\">\r\n//         {/* Header */}\r\n//         <header className=\"dashboard-header\">\r\n//           <div className=\"logo\">Farm Dashboard</div>\r\n//           <div className=\"profile\">\r\n//             <span className=\"p-3\">{farmer.name}</span>\r\n//             <button className=\"logout-button\" onClick={handleLogout}>\r\n//               Logout\r\n//             </button>\r\n//           </div>\r\n//         </header>\r\n\r\n//         {/* Main Dashboard */}\r\n//         <section className=\"main-dashboard\">\r\n//           <div className=\"row\">\r\n//             <div className=\"col-xl-10\">\r\n//               <h2>Welcome, {farmer.name}!</h2>\r\n//             </div>\r\n//             <div className=\"col-xl-2 align-content-right\">\r\n//               <Link to=\"/custheader/editprofile\">\r\n//                 <button type=\"button\" className=\"btn btn-secondary\">\r\n//                   Edit Profile\r\n//                 </button>\r\n//               </Link>\r\n//             </div>\r\n//             <div className=\"farmer-info\">\r\n//               <p><strong>Id:</strong>F19050{farmer.id}</p>\r\n//               <p><strong>Name:</strong> {farmer.name}</p>\r\n//               <p><strong>Address:</strong> {farmer.address}</p>\r\n//               <p><strong>Email:</strong> {farmer.email}</p>\r\n//             </div>\r\n//           </div>\r\n//         </section>\r\n\r\n//         {/* Order Section */}\r\n//         <section className=\"order-status\">\r\n//           <h3>Your Orders</h3>\r\n//           <div className=\"card-container\">\r\n//             {orderStatus.map((order, index) => (\r\n//               <div key={index} className={`card ${order.status.toLowerCase()}`}>\r\n//                 <h4>Order ID: {order.orderId}</h4>\r\n//                 <div className=\"d-flex justify-content-center align-items-center my-2\">\r\n//                   <img src={i1} height=\"150px\" width=\"200px\" alt=\"Product\" />\r\n//                 </div>\r\n//                 <p>\r\n//                   Status: <span className=\"order-status-text\">{order.status}</span>\r\n//                 </p>\r\n//                 {order.pickupDate && <p>Pickup: {order.pickupDate}</p>}\r\n//                 {order.deliveryDate && <p>Driver Name: {order.driverName}</p>}\r\n//                 <button className=\"track-button\" onClick={() => openTrackOrder(order)}>\r\n//                   Track Order\r\n//                 </button>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </section>\r\n\r\n//         {/* Modal for Tracking */}\r\n//         {selectedOrder && (\r\n//           <div className=\"track-order-modal\">\r\n//             <div className=\"modal-content\">\r\n//               <h3>Tracking Order ID: {selectedOrder.orderId}</h3>\r\n//               <TrackOrder order={selectedOrder} />\r\n//               <button className=\"close-button\" onClick={() => setSelectedOrder(null)}>\r\n//                 Close\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Action Buttons */}\r\n//         <section className=\"action-buttons\">\r\n//           <Link to=\"/custheader/sellwaste\">\r\n//             <button className=\"action-button\">Sell new Waste</button>\r\n//           </Link>\r\n//           <Link to=\"/custheader/history\">\r\n//             <button className=\"action-button\">Previous Orders</button>\r\n//           </Link>\r\n//         </section>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default FarmerDashboard;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Dashboard.css\";\r\nimport i1 from \"./assets/Image1.jpg\"; // Fallback image or placeholder\r\n\r\nconst TrackOrder = ({ order }) => {\r\n  return (\r\n    <div className=\"tracking-info\">\r\n      <h4>Pickup Date: {order.pickupDate ? new Date(order.pickupDate).toLocaleDateString() : \"Not Scheduled\"}</h4>\r\n      {order.trackingLink ? (\r\n        <p>\r\n          Track Order: {\" \"}\r\n          <a href={order.trackingLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {order.trackingLink}\r\n          </a>\r\n        </p>\r\n      ) : (\r\n        <p>Tracking information is not available yet.</p>\r\n      )}\r\n      {order.currentLocation && <p>Current Location: {order.currentLocation}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FarmerDashboard = () => {\r\n  const [farmer, setFarmer] = useState(null);\r\n  const [orderStatus, setOrderStatus] = useState([]);\r\n  const [selectedOrder, setSelectedOrder] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    if (userId) {\r\n      // Fetch farmer profile\r\n      fetch(`http://localhost:8085/api/farmers/get/${userId}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setFarmer(data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching farmer data:\", error);\r\n        });\r\n\r\n      // Fetch farmer orders from the backend API\r\n      fetch(`http://localhost:8085/waste-details/orders/${userId}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          // Filter orders with status \"Accepted\", \"Pending\", or \"null\"\r\n          const filteredOrders = data.filter(\r\n            (order) => [\"ACCEPTED\", \"PENDING\", null].includes(order.status)\r\n          );\r\n          setOrderStatus(filteredOrders);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching order data:\", error);\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      console.error(\"No user ID found in localStorage\");\r\n    }\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"userId\");\r\n    alert(\"Logged out successfully!\");\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  const openTrackOrder = (order) => {\r\n    setSelectedOrder(order);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!farmer) {\r\n    return <div>Unable to load farmer data. Please try again later.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"farmer-dashboard\">\r\n      <header className=\"dashboard-header\">\r\n        <div className=\"logo\">Farm Dashboard</div>\r\n        <div className=\"profile\">\r\n          <span className=\"p-3\">{farmer.name}</span>\r\n          <button className=\"logout-button\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <section className=\"main-dashboard\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-10\">\r\n            <h2>Welcome, {farmer.name}!</h2>\r\n          </div>\r\n          <div className=\"col-xl-2 align-content-right\">\r\n            <Link to=\"/custheader/editprofile\">\r\n              <button type=\"button\" className=\"btn btn-secondary\">\r\n                Edit Profile\r\n              </button>\r\n            </Link>\r\n          </div>\r\n          <div className=\"farmer-info\">\r\n            <p>\r\n              <strong>Id:</strong>F19050{farmer.id}\r\n            </p>\r\n            <p>\r\n              <strong>Name:</strong> {farmer.name}\r\n            </p>\r\n            <p>\r\n              <strong>Address:</strong> {farmer.address}\r\n            </p>\r\n            <p>\r\n              <strong>Email:</strong> {farmer.email}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Order Section */}\r\n      <section className=\"order-status\">\r\n        <h3>Your Orders</h3>\r\n        <div className=\"card-container\">\r\n          {orderStatus.length > 0 ? (\r\n            orderStatus.map((order) => (\r\n              <div\r\n                key={order.id}\r\n                className={`card ${order.status ? order.status.toLowerCase() : \"pending\"}`}\r\n              >\r\n                <h4>Order ID: ORD-{order.id}</h4>\r\n                <div className=\"d-flex justify-content-center align-items-center my-2\">\r\n                  <img\r\n                    src={order.imagePath}\r\n                    height=\"150px\"\r\n                    width=\"200px\"\r\n                    alt={order.wasteType || \"Product\"}\r\n                    onError={(e) => {\r\n                      console.error(\"Image not found:\", order.imagePath);\r\n                      e.target.src = i1; // Fallback image if the image is not found\r\n                    }}\r\n                  />\r\n                </div>\r\n                <p>Waste Type: {order.wasteType || \"Not specified\"}</p>\r\n                <p>\r\n                  Status: <span className=\"order-status-text\">{order.status || \"Pending\"}</span>\r\n                  \r\n                </p>\r\n                <p>\r\n                  Status: <span className=\"order-status-text\">{order.farmerid || \"Pending\"}</span>\r\n                  \r\n                </p>\r\n                {order.pickupDate && <p>Pickup: {new Date(order.pickupDate).toLocaleDateString()}</p>}\r\n                <button className=\"track-button\" onClick={() => openTrackOrder(order)}>\r\n                  Track Order\r\n                </button>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No orders available.</p>\r\n          )}\r\n        </div>\r\n      </section>\r\n\r\n      {/* Modal for Tracking */}\r\n      {selectedOrder && (\r\n        <div className=\"track-order-modal\">\r\n          <div className=\"modal-content\">\r\n            <h3>Tracking Order ID: {selectedOrder.id}</h3>\r\n            <TrackOrder order={selectedOrder} />\r\n            <button\r\n              className=\"close-button\"\r\n              onClick={() => setSelectedOrder(null)}\r\n              aria-label=\"Close tracking modal\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Action Buttons */}\r\n      <section className=\"action-buttons\">\r\n        <Link to=\"/custheader/sellwaste\">\r\n          <button className=\"action-button\">Sell new Waste</button>\r\n        </Link>\r\n        <Link to=\"/custheader/history\">\r\n          <button className=\"action-button\">Previous Orders</button>\r\n        </Link>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FarmerDashboard;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;;AAEA;;AAUA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,iBAAiB;AACxB,OAAOC,EAAE,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAChC,oBACEF,OAAA;IAAKG,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BJ,OAAA;MAAAI,QAAA,GAAI,eAAa,EAACF,KAAK,CAACG,UAAU,GAAG,IAAIC,IAAI,CAACJ,KAAK,CAACG,UAAU,CAAC,CAACE,kBAAkB,CAAC,CAAC,GAAG,eAAe;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC3GT,KAAK,CAACU,YAAY,gBACjBZ,OAAA;MAAAI,QAAA,GAAG,eACY,EAAC,GAAG,eACjBJ,OAAA;QAAGa,IAAI,EAAEX,KAAK,CAACU,YAAa;QAACE,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,qBAAqB;QAAAX,QAAA,EACnEF,KAAK,CAACU;MAAY;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAEJX,OAAA;MAAAI,QAAA,EAAG;IAA0C;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjD,EACAT,KAAK,CAACc,eAAe,iBAAIhB,OAAA;MAAAI,QAAA,GAAG,oBAAkB,EAACF,KAAK,CAACc,eAAe;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAACM,EAAA,GAjBIhB,UAAU;AAmBhB,MAAMiB,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC6B,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC+B,OAAO,EAAEC,UAAU,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMgC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAE7C,IAAIF,MAAM,EAAE;MACV;MACAG,KAAK,CAAC,yCAAyCH,MAAM,EAAE,CAAC,CACrDI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACdd,SAAS,CAACc,IAAI,CAAC;MACjB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD,CAAC,CAAC;;MAEJ;MACAN,KAAK,CAAC,8CAA8CH,MAAM,EAAE,CAAC,CAC1DI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACd;QACA,MAAMI,cAAc,GAAGJ,IAAI,CAACK,MAAM,CAC/BtC,KAAK,IAAK,CAAC,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC,CAACuC,QAAQ,CAACvC,KAAK,CAACwC,MAAM,CAChE,CAAC;QACDnB,cAAc,CAACgB,cAAc,CAAC;QAC9BZ,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDV,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC;IACN,CAAC,MAAM;MACLW,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAC;IACnD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzBd,YAAY,CAACe,UAAU,CAAC,QAAQ,CAAC;IACjCC,KAAK,CAAC,0BAA0B,CAAC;IACjCC,MAAM,CAACC,QAAQ,CAAClC,IAAI,GAAG,GAAG;EAC5B,CAAC;EAED,MAAMmC,cAAc,GAAI9C,KAAK,IAAK;IAChCuB,gBAAgB,CAACvB,KAAK,CAAC;EACzB,CAAC;EAED,IAAIwB,OAAO,EAAE;IACX,oBAAO1B,OAAA;MAAAI,QAAA,EAAK;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAI,CAACS,MAAM,EAAE;IACX,oBAAOpB,OAAA;MAAAI,QAAA,EAAK;IAAmD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACvE;EAEA,oBACEX,OAAA;IAAKG,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BJ,OAAA;MAAQG,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAClCJ,OAAA;QAAKG,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1CX,OAAA;QAAKG,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBJ,OAAA;UAAMG,SAAS,EAAC,KAAK;UAAAC,QAAA,EAAEgB,MAAM,CAAC6B;QAAI;UAAAzC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1CX,OAAA;UAAQG,SAAS,EAAC,eAAe;UAAC+C,OAAO,EAAEP,YAAa;UAAAvC,QAAA,EAAC;QAEzD;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAETX,OAAA;MAASG,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eACjCJ,OAAA;QAAKG,SAAS,EAAC,KAAK;QAAAC,QAAA,gBAClBJ,OAAA;UAAKG,SAAS,EAAC,WAAW;UAAAC,QAAA,eACxBJ,OAAA;YAAAI,QAAA,GAAI,WAAS,EAACgB,MAAM,CAAC6B,IAAI,EAAC,GAAC;UAAA;YAAAzC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACNX,OAAA;UAAKG,SAAS,EAAC,8BAA8B;UAAAC,QAAA,eAC3CJ,OAAA,CAACH,IAAI;YAACsD,EAAE,EAAC,yBAAyB;YAAA/C,QAAA,eAChCJ,OAAA;cAAQoD,IAAI,EAAC,QAAQ;cAACjD,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAAC;YAEpD;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNX,OAAA;UAAKG,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BJ,OAAA;YAAAI,QAAA,gBACEJ,OAAA;cAAAI,QAAA,EAAQ;YAAG;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,UAAM,EAACS,MAAM,CAACiC,EAAE;UAAA;YAAA7C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC,eACJX,OAAA;YAAAI,QAAA,gBACEJ,OAAA;cAAAI,QAAA,EAAQ;YAAK;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACS,MAAM,CAAC6B,IAAI;UAAA;YAAAzC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC,eACJX,OAAA;YAAAI,QAAA,gBACEJ,OAAA;cAAAI,QAAA,EAAQ;YAAQ;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACS,MAAM,CAACkC,OAAO;UAAA;YAAA9C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,eACJX,OAAA;YAAAI,QAAA,gBACEJ,OAAA;cAAAI,QAAA,EAAQ;YAAM;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACS,MAAM,CAACmC,KAAK;UAAA;YAAA/C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGVX,OAAA;MAASG,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC/BJ,OAAA;QAAAI,QAAA,EAAI;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBX,OAAA;QAAKG,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5BkB,WAAW,CAACkC,MAAM,GAAG,CAAC,GACrBlC,WAAW,CAACmC,GAAG,CAAEvD,KAAK,iBACpBF,OAAA;UAEEG,SAAS,EAAE,QAAQD,KAAK,CAACwC,MAAM,GAAGxC,KAAK,CAACwC,MAAM,CAACgB,WAAW,CAAC,CAAC,GAAG,SAAS,EAAG;UAAAtD,QAAA,gBAE3EJ,OAAA;YAAAI,QAAA,GAAI,gBAAc,EAACF,KAAK,CAACmD,EAAE;UAAA;YAAA7C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACjCX,OAAA;YAAKG,SAAS,EAAC,uDAAuD;YAAAC,QAAA,eACpEJ,OAAA;cACE2D,GAAG,EAAEzD,KAAK,CAAC0D,SAAU;cACrBC,MAAM,EAAC,OAAO;cACdC,KAAK,EAAC,OAAO;cACbC,GAAG,EAAE7D,KAAK,CAAC8D,SAAS,IAAI,SAAU;cAClCC,OAAO,EAAGC,CAAC,IAAK;gBACd5B,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEnC,KAAK,CAAC0D,SAAS,CAAC;gBAClDM,CAAC,CAACpD,MAAM,CAAC6C,GAAG,GAAG7D,EAAE,CAAC,CAAC;cACrB;YAAE;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNX,OAAA;YAAAI,QAAA,GAAG,cAAY,EAACF,KAAK,CAAC8D,SAAS,IAAI,eAAe;UAAA;YAAAxD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvDX,OAAA;YAAAI,QAAA,GAAG,UACO,eAAAJ,OAAA;cAAMG,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAAEF,KAAK,CAACwC,MAAM,IAAI;YAAS;cAAAlC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE7E,CAAC,eACJX,OAAA;YAAAI,QAAA,GAAG,UACO,eAAAJ,OAAA;cAAMG,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAAEF,KAAK,CAACiE,QAAQ,IAAI;YAAS;cAAA3D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE/E,CAAC,EACHT,KAAK,CAACG,UAAU,iBAAIL,OAAA;YAAAI,QAAA,GAAG,UAAQ,EAAC,IAAIE,IAAI,CAACJ,KAAK,CAACG,UAAU,CAAC,CAACE,kBAAkB,CAAC,CAAC;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrFX,OAAA;YAAQG,SAAS,EAAC,cAAc;YAAC+C,OAAO,EAAEA,CAAA,KAAMF,cAAc,CAAC9C,KAAK,CAAE;YAAAE,QAAA,EAAC;UAEvE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GA5BJT,KAAK,CAACmD,EAAE;UAAA7C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA6BV,CACN,CAAC,gBAEFX,OAAA;UAAAI,QAAA,EAAG;QAAoB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAC3B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAGTa,aAAa,iBACZxB,OAAA;MAAKG,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChCJ,OAAA;QAAKG,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BJ,OAAA;UAAAI,QAAA,GAAI,qBAAmB,EAACoB,aAAa,CAAC6B,EAAE;QAAA;UAAA7C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9CX,OAAA,CAACC,UAAU;UAACC,KAAK,EAAEsB;QAAc;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpCX,OAAA;UACEG,SAAS,EAAC,cAAc;UACxB+C,OAAO,EAAEA,CAAA,KAAMzB,gBAAgB,CAAC,IAAI,CAAE;UACtC,cAAW,sBAAsB;UAAArB,QAAA,EAClC;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAGDX,OAAA;MAASG,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBACjCJ,OAAA,CAACH,IAAI;QAACsD,EAAE,EAAC,uBAAuB;QAAA/C,QAAA,eAC9BJ,OAAA;UAAQG,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAc;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACPX,OAAA,CAACH,IAAI;QAACsD,EAAE,EAAC,qBAAqB;QAAA/C,QAAA,eAC5BJ,OAAA;UAAQG,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAe;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACQ,EAAA,CA3KID,eAAe;AAAAkD,GAAA,GAAflD,eAAe;AA6KrB,eAAeA,eAAe;AAAC,IAAAD,EAAA,EAAAmD,GAAA;AAAAC,YAAA,CAAApD,EAAA;AAAAoD,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}