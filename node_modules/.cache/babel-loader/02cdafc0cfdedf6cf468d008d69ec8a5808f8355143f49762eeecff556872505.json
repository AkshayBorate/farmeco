{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder\\\\project\\\\src\\\\components\\\\pricing\\\\PriceCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements, useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { price } from \"../../dummydata\";\n\n// Replace with your Stripe Publishable Key\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(\"your-publishable-key-here\");\nconst CheckoutForm = ({\n  amount\n}) => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    if (!stripe || !elements) {\n      setMessage(\"Stripe has not loaded yet.\");\n      setLoading(false);\n      return;\n    }\n    const cardElement = elements.getElement(CardElement);\n    try {\n      // Create a payment intent by calling your backend\n      const {\n        data\n      } = await axios.post(\"http://localhost:5000/create-payment-intent\", {\n        amount\n      });\n      const {\n        clientSecret\n      } = data;\n\n      // Confirm the card payment using the client secret\n      const result = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: cardElement\n        }\n      });\n      if (result.error) {\n        setMessage(result.error.message);\n      } else if (result.paymentIntent.status === \"succeeded\") {\n        setMessage(\"Payment successful!\");\n      }\n    } catch (error) {\n      setMessage(\"An error occurred during payment. Please try again.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe || loading,\n      className: \"outline-btn\",\n      style: {\n        marginTop: \"20px\"\n      },\n      children: loading ? \"Processing...\" : `Pay $${amount}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: \"10px\",\n        color: message === \"Payment successful!\" ? \"green\" : \"red\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"ewd6khN+pVGBCZ27YSyYUaeli6Y=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nconst PriceCard = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: price.map(val => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: val.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), val.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: val.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Elements, {\n        stripe: stripePromise,\n        children: /*#__PURE__*/_jsxDEV(CheckoutForm, {\n          amount: val.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, val.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c2 = PriceCard;\nexport default PriceCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"PriceCard\");","map":{"version":3,"names":["React","useState","loadStripe","Elements","useStripe","useElements","CardElement","axios","price","jsxDEV","_jsxDEV","Fragment","_Fragment","stripePromise","CheckoutForm","amount","_s","stripe","elements","loading","setLoading","message","setMessage","handleSubmit","e","preventDefault","cardElement","getElement","data","post","clientSecret","result","confirmCardPayment","payment_method","card","error","paymentIntent","status","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","className","style","marginTop","color","_c","PriceCard","map","val","name","desc","_c2","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/New folder/project/src/components/pricing/PriceCard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements, useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { price } from \"../../dummydata\";\n\n// Replace with your Stripe Publishable Key\nconst stripePromise = loadStripe(\"your-publishable-key-here\");\n\nconst CheckoutForm = ({ amount }) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    if (!stripe || !elements) {\n      setMessage(\"Stripe has not loaded yet.\");\n      setLoading(false);\n      return;\n    }\n\n    const cardElement = elements.getElement(CardElement);\n\n    try {\n      // Create a payment intent by calling your backend\n      const { data } = await axios.post(\"http://localhost:5000/create-payment-intent\", {\n        amount,\n      });\n\n      const { clientSecret } = data;\n\n      // Confirm the card payment using the client secret\n      const result = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: cardElement,\n        },\n      });\n\n      if (result.error) {\n        setMessage(result.error.message);\n      } else if (result.paymentIntent.status === \"succeeded\") {\n        setMessage(\"Payment successful!\");\n      }\n    } catch (error) {\n      setMessage(\"An error occurred during payment. Please try again.\");\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <CardElement />\n      <button\n        type=\"submit\"\n        disabled={!stripe || loading}\n        className=\"outline-btn\"\n        style={{ marginTop: \"20px\" }}\n      >\n        {loading ? \"Processing...\" : `Pay $${amount}`}\n      </button>\n      {message && (\n        <p style={{ marginTop: \"10px\", color: message === \"Payment successful!\" ? \"green\" : \"red\" }}>\n          {message}\n        </p>\n      )}\n    </form>\n  );\n};\n\nconst PriceCard = () => {\n  return (\n    <>\n      {price.map((val) => (\n        <div key={val.name} className=\"items shadow\">\n          <h4>{val.name}</h4>\n          <h1>\n            <span>$</span>\n            {val.price}\n          </h1>\n          <p>{val.desc}</p>\n          <Elements stripe={stripePromise}>\n            <CheckoutForm amount={val.price} />\n          </Elements>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default PriceCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}