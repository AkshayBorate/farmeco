{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import \"./ProductListing.css\";\n\n// const ProductListing = () => {\n//   const [products, setProducts] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(\"\");\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const [ordersResponse, intakeResponse] = await Promise.all([\n//           axios.get(\"http://localhost:8085/waste-details/orders\"),\n//           axios.get(\"http://localhost:8085/stock/get\"),\n//         ]);\n\n//         const orders = ordersResponse.data;\n//         const intakeData = intakeResponse.data;\n\n//         // Match orders with intake by wasteId\n//         const combinedData = intakeData.map((intakeItem) => {\n//           const matchingOrder = orders.find(\n//             (order) => order.id === intakeItem.wasteId\n//           );\n//           return {\n//             ...intakeItem,\n//             imagePath: matchingOrder ? matchingOrder.imagePath : null,\n//           };\n//         });\n\n//         setProducts(combinedData);\n//       } catch (err) {\n//         setError(\"Failed to fetch products derived from waste intake.\");\n//         console.error(err);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <div className=\"products-container\">\n//       <hr />\n//       <h1 className=\"products-header text-center\">Available Stock</h1>\n//       {loading && <p className=\"loading-message text-center\">Loading products...</p>}\n//       {error && <p className=\"error-message text-center\">{error}</p>}\n\n//       <div className=\"products-grid\">\n//         {products.length > 0 ? (\n//           products.map((product) => (\n//             <div className=\"product-card-wrapper\" key={product.id}>\n//               <div className=\"product-card\">\n//                 {product.imagePath ? (\n//                   <img\n//                     src={product.imagePath}\n//                     className=\"product-image\"\n//                     alt={`Waste product with ID ${product.id}`}\n//                   />\n//                 ) : (\n//                   <p className=\"no-image-text\">No Image Available</p>\n//                 )}\n//                 <div className=\"product-details\">\n//                   <p className=\"product-info\">\n//                     <b>Stock ID:</b> {product.id} <br />\n//                     <b>Waste Type:</b> {product.wasteType || \"N/A\"} <br />\n//                     <b>Weight:</b> {product.weight} ton\n//                   </p>\n//                 </div>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           !loading && (\n//             <p className=\"no-products-message text-center\">\n//               No products derived from waste intake are available.\n//             </p>\n//           )\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ProductListing;","map":{"version":3,"names":[],"sources":["C:/Users/Lenovo/Desktop/New folder/project/src/components/Employee/ProductListing.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"./ProductListing.css\";\r\n\r\n// const ProductListing = () => {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const [ordersResponse, intakeResponse] = await Promise.all([\r\n//           axios.get(\"http://localhost:8085/waste-details/orders\"),\r\n//           axios.get(\"http://localhost:8085/stock/get\"),\r\n//         ]);\r\n\r\n//         const orders = ordersResponse.data;\r\n//         const intakeData = intakeResponse.data;\r\n\r\n//         // Match orders with intake by wasteId\r\n//         const combinedData = intakeData.map((intakeItem) => {\r\n//           const matchingOrder = orders.find(\r\n//             (order) => order.id === intakeItem.wasteId\r\n//           );\r\n//           return {\r\n//             ...intakeItem,\r\n//             imagePath: matchingOrder ? matchingOrder.imagePath : null,\r\n//           };\r\n//         });\r\n\r\n//         setProducts(combinedData);\r\n//       } catch (err) {\r\n//         setError(\"Failed to fetch products derived from waste intake.\");\r\n//         console.error(err);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"products-container\">\r\n//       <hr />\r\n//       <h1 className=\"products-header text-center\">Available Stock</h1>\r\n//       {loading && <p className=\"loading-message text-center\">Loading products...</p>}\r\n//       {error && <p className=\"error-message text-center\">{error}</p>}\r\n\r\n//       <div className=\"products-grid\">\r\n//         {products.length > 0 ? (\r\n//           products.map((product) => (\r\n//             <div className=\"product-card-wrapper\" key={product.id}>\r\n//               <div className=\"product-card\">\r\n//                 {product.imagePath ? (\r\n//                   <img\r\n//                     src={product.imagePath}\r\n//                     className=\"product-image\"\r\n//                     alt={`Waste product with ID ${product.id}`}\r\n//                   />\r\n//                 ) : (\r\n//                   <p className=\"no-image-text\">No Image Available</p>\r\n//                 )}\r\n//                 <div className=\"product-details\">\r\n//                   <p className=\"product-info\">\r\n//                     <b>Stock ID:</b> {product.id} <br />\r\n//                     <b>Waste Type:</b> {product.wasteType || \"N/A\"} <br />\r\n//                     <b>Weight:</b> {product.weight} ton\r\n//                   </p>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           ))\r\n//         ) : (\r\n//           !loading && (\r\n//             <p className=\"no-products-message text-center\">\r\n//               No products derived from waste intake are available.\r\n//             </p>\r\n//           )\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ProductListing;"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}