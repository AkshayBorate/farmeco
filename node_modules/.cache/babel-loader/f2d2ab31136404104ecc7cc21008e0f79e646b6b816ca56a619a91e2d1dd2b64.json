{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder\\\\project\\\\src\\\\components\\\\login\\\\Signup.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import \"./Signup.css\";\n\n// export default function SignupPage() {\n//     const [errorMessage, setErrorMessage] = useState(\"\");\n//     const [fullName, setFullName] = useState(\"\");\n//     const [email, setEmail] = useState(\"\");\n//     const [mobileNo, setMobile] = useState(\"\");\n//     const [birthdate, setDateOfBirth] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const [confirmPassword, setConfirmPassword] = useState(\"\");\n//     const navigate = useNavigate();\n\n//     const handleSignupSuccess = (event) => {\n//         event.preventDefault();\n//         setErrorMessage(\"\");\n\n//         if (!fullName.trim() || !email.trim() || !mobileNo.trim() || !birthdate.trim() || !password.trim() || !confirmPassword.trim()) {\n//             setErrorMessage(\"All fields are required!\");\n//             return;\n//         }\n\n//         if (!/^[a-zA-Z]+(?: [a-zA-Z]+)*$/.test(fullName)) {\n//             setErrorMessage(\"Full Name must contain only letters and spaces.\");\n//             return;\n//         }\n\n//         if (!/^[6-9][0-9]{9}$/.test(mobileNo)) {\n//             setErrorMessage(\"Mobile Number must be a valid 10-digit number starting with 6-9.\");\n//             return;\n//         }\n\n//         if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n//             setErrorMessage(\"Invalid email format. Please use a correct format like example@mail.com.\");\n//             return;\n//         }\n\n//         if (!/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$])[A-Za-z0-9@#$]{6,12}$/.test(password)) {\n//             setErrorMessage(\n//                 \"Password must be 6-12 characters long and include at least one digit, one lowercase letter, one uppercase letter, and one special character (@, #, $).\"\n//             );\n//             return;\n//         }\n\n//         if (password !== confirmPassword) {\n//             setErrorMessage(\"Passwords do not match. Please re-enter.\");\n//             return;\n//         }\n\n//         const datas = {\n//             name: fullName,\n//             email: email,\n//             mobileNo: mobileNo,\n//             birthdate: birthdate,\n//             password: password,\n//         };\n\n//         console.log(\"Data being sent to server:\", datas);\n\n//         fetch(\"http://localhost:8085/api/farmers/addUser\", {\n//             method: \"POST\",\n//             headers: {\n//                 \"Content-Type\": \"application/json\",\n//             },\n//             body: JSON.stringify(datas),\n//             credentials: \"same-origin\",\n//         })\n//             .then((response) => {\n//                 console.log(\"Response received:\", response);\n//                 if (response.status === 409) {\n//                     return response.text().then((text) => {\n//                         throw new Error(text || \"User already exists! MobileNo or Email\");\n//                     });\n//                 }\n//                 if (!response.ok) {\n//                     throw new Error(`User already exists! MobileNo or Email`);\n//                 }\n//                 return response.json();\n//             })\n//             .then((data) => {\n//                 console.log(\"User added:\", data);\n//                 alert(\"User added successfully!\");\n//                 navigate(\"/logins\");\n//             })\n//             .catch((error) => {\n//                 console.error(\"Error:\", error);\n//                 setErrorMessage(error.message);\n//             });\n//     };\n\n//     return (\n//         <>\n//             <div className=\"signup-wrapper\">\n//                 <div className=\"signup-card\">\n//                     <Link to=\"/loginc\" className=\"signup-link\">\n//                         Back\n//                     </Link>\n//                     <br />\n//                     <h2 className=\"signup-header\">Create an Account</h2>\n//                     <form className=\"signup-form\" onSubmit={handleSignupSuccess}>\n//                         {errorMessage && <p className=\"signup-error-message\">{errorMessage}</p>}\n//                         <input\n//                             className=\"signup-input-field\"\n//                             type=\"text\"\n//                             placeholder=\"Full Name\"\n//                             value={fullName}\n//                             onChange={(e) => setFullName(e.target.value)}\n//                             required\n//                         />\n//                         <input\n//                             className=\"signup-input-field\"\n//                             type=\"email\"\n//                             placeholder=\"Email\"\n//                             value={email}\n//                             onChange={(e) => setEmail(e.target.value)}\n//                             required\n//                         />\n//                         <input\n//                             className=\"signup-input-field\"\n//                             type=\"tel\"\n//                             placeholder=\"Mobile Number\"\n//                             value={mobileNo}\n//                             onChange={(e) => setMobile(e.target.value)}\n//                             required\n//                         />\n\n//                         <input\n//                             className=\"signup-input-field\"\n//                             type=\"date\"\n//                             placeholder=\"Birth Date\"\n//                             value={birthdate}\n//                             onChange={(e) => setDateOfBirth(e.target.value)}\n//                             required\n//                         />\n//                         <input\n//                             className=\"signup-input-field\"\n//                             type=\"password\"\n//                             placeholder=\"Password\"\n//                             value={password}\n//                             onChange={(e) => setPassword(e.target.value)}\n//                             required\n//                         />\n//                         <input\n//                             className=\"signup-input-field\"\n//                             type=\"password\"\n//                             placeholder=\"Confirm Password\"\n//                             value={confirmPassword}\n//                             onChange={(e) => setConfirmPassword(e.target.value)}\n//                             required\n//                         />\n//                         <button type=\"submit\" className=\"signup-btn\">\n//                             Sign Up\n//                         </button>\n//                     </form>\n//                     <div className=\"signup-footer\">\n//                         <p>\n//                             Already have an account?{\" \"}\n//                             <Link to=\"/logins\" className=\"signup-link\">\n//                                 Sign In\n//                             </Link>\n//                         </p>\n//                     </div>\n//                 </div>\n//             </div>\n//         </>\n//     );\n// }\n\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./Signup.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignupPage() {\n  _s();\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [mobileNo, setMobile] = useState(\"\");\n  const [birthdate, setDateOfBirth] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSignupSuccess = async event => {\n    event.preventDefault();\n    setErrorMessage(\"\");\n    if (!fullName.trim() || !email.trim() || !mobileNo.trim() || !birthdate.trim() || !password.trim() || !confirmPassword.trim()) {\n      setErrorMessage(\"All fields are required!\");\n      return;\n    }\n    if (!/^[a-zA-Z]+(?: [a-zA-Z]+)*$/.test(fullName)) {\n      setErrorMessage(\"Full Name must contain only letters and spaces.\");\n      return;\n    }\n    if (!/^[6-9][0-9]{9}$/.test(mobileNo)) {\n      setErrorMessage(\"Mobile Number must be a valid 10-digit number starting with 6-9.\");\n      return;\n    }\n    if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      setErrorMessage(\"Invalid email format. Please use a correct format like example@mail.com.\");\n      return;\n    }\n    if (!/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$])[A-Za-z0-9@#$]{6,12}$/.test(password)) {\n      setErrorMessage(\"Password must be 6-12 characters long and include at least one digit, one lowercase letter, one uppercase letter, and one special character (@, #, $).\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      setErrorMessage(\"Passwords do not match. Please re-enter.\");\n      return;\n    }\n    const userData = {\n      name: fullName,\n      email: email,\n      mobileNo: mobileNo,\n      birthdate: birthdate,\n      password: password // No manual encryption, backend handles it\n    };\n    try {\n      const response = await fetch(\"http://localhost:8085/api/farmers/addUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      });\n      if (response.status === 409) {\n        const message = await response.text();\n        throw new Error(message || \"User already exists! MobileNo or Email\");\n      }\n      if (!response.ok) {\n        throw new Error(\"Failed to create account. Please try again.\");\n      }\n      alert(\"User added successfully!\");\n      navigate(\"/logins\");\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-card\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/loginc\",\n          className: \"signup-link\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"signup-header\",\n          children: \"Create an Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"signup-form\",\n          onSubmit: handleSignupSuccess,\n          children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"signup-error-message\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"signup-input-field\",\n            type: \"text\",\n            placeholder: \"Full Name\",\n            value: fullName,\n            onChange: e => setFullName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"signup-input-field\",\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"signup-input-field\",\n            type: \"tel\",\n            placeholder: \"Mobile Number\",\n            value: mobileNo,\n            onChange: e => setMobile(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"signup-input-field\",\n            type: \"date\",\n            placeholder: \"Birth Date\",\n            value: birthdate,\n            onChange: e => setDateOfBirth(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"signup-input-field\",\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"signup-input-field\",\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"signup-btn\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/logins\",\n              className: \"signup-link\",\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(SignupPage, \"tgujjlEo0ZmqIaeKfV55N5q3gBo=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","SignupPage","_s","errorMessage","setErrorMessage","fullName","setFullName","email","setEmail","mobileNo","setMobile","birthdate","setDateOfBirth","password","setPassword","confirmPassword","setConfirmPassword","navigate","handleSignupSuccess","event","preventDefault","trim","test","userData","name","response","fetch","method","headers","body","JSON","stringify","status","message","text","Error","ok","alert","error","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/New folder/project/src/components/login/Signup.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import \"./Signup.css\";\r\n\r\n// export default function SignupPage() {\r\n//     const [errorMessage, setErrorMessage] = useState(\"\");\r\n//     const [fullName, setFullName] = useState(\"\");\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [mobileNo, setMobile] = useState(\"\");\r\n//     const [birthdate, setDateOfBirth] = useState(\"\");\r\n//     const [password, setPassword] = useState(\"\");\r\n//     const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleSignupSuccess = (event) => {\r\n//         event.preventDefault();\r\n//         setErrorMessage(\"\");\r\n\r\n//         if (!fullName.trim() || !email.trim() || !mobileNo.trim() || !birthdate.trim() || !password.trim() || !confirmPassword.trim()) {\r\n//             setErrorMessage(\"All fields are required!\");\r\n//             return;\r\n//         }\r\n\r\n//         if (!/^[a-zA-Z]+(?: [a-zA-Z]+)*$/.test(fullName)) {\r\n//             setErrorMessage(\"Full Name must contain only letters and spaces.\");\r\n//             return;\r\n//         }\r\n\r\n//         if (!/^[6-9][0-9]{9}$/.test(mobileNo)) {\r\n//             setErrorMessage(\"Mobile Number must be a valid 10-digit number starting with 6-9.\");\r\n//             return;\r\n//         }\r\n\r\n//         if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n//             setErrorMessage(\"Invalid email format. Please use a correct format like example@mail.com.\");\r\n//             return;\r\n//         }\r\n\r\n//         if (!/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$])[A-Za-z0-9@#$]{6,12}$/.test(password)) {\r\n//             setErrorMessage(\r\n//                 \"Password must be 6-12 characters long and include at least one digit, one lowercase letter, one uppercase letter, and one special character (@, #, $).\"\r\n//             );\r\n//             return;\r\n//         }\r\n\r\n//         if (password !== confirmPassword) {\r\n//             setErrorMessage(\"Passwords do not match. Please re-enter.\");\r\n//             return;\r\n//         }\r\n\r\n//         const datas = {\r\n//             name: fullName,\r\n//             email: email,\r\n//             mobileNo: mobileNo,\r\n//             birthdate: birthdate,\r\n//             password: password,\r\n//         };\r\n\r\n//         console.log(\"Data being sent to server:\", datas);\r\n\r\n//         fetch(\"http://localhost:8085/api/farmers/addUser\", {\r\n//             method: \"POST\",\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\",\r\n//             },\r\n//             body: JSON.stringify(datas),\r\n//             credentials: \"same-origin\",\r\n//         })\r\n//             .then((response) => {\r\n//                 console.log(\"Response received:\", response);\r\n//                 if (response.status === 409) {\r\n//                     return response.text().then((text) => {\r\n//                         throw new Error(text || \"User already exists! MobileNo or Email\");\r\n//                     });\r\n//                 }\r\n//                 if (!response.ok) {\r\n//                     throw new Error(`User already exists! MobileNo or Email`);\r\n//                 }\r\n//                 return response.json();\r\n//             })\r\n//             .then((data) => {\r\n//                 console.log(\"User added:\", data);\r\n//                 alert(\"User added successfully!\");\r\n//                 navigate(\"/logins\");\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.error(\"Error:\", error);\r\n//                 setErrorMessage(error.message);\r\n//             });\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <div className=\"signup-wrapper\">\r\n//                 <div className=\"signup-card\">\r\n//                     <Link to=\"/loginc\" className=\"signup-link\">\r\n//                         Back\r\n//                     </Link>\r\n//                     <br />\r\n//                     <h2 className=\"signup-header\">Create an Account</h2>\r\n//                     <form className=\"signup-form\" onSubmit={handleSignupSuccess}>\r\n//                         {errorMessage && <p className=\"signup-error-message\">{errorMessage}</p>}\r\n//                         <input\r\n//                             className=\"signup-input-field\"\r\n//                             type=\"text\"\r\n//                             placeholder=\"Full Name\"\r\n//                             value={fullName}\r\n//                             onChange={(e) => setFullName(e.target.value)}\r\n//                             required\r\n//                         />\r\n//                         <input\r\n//                             className=\"signup-input-field\"\r\n//                             type=\"email\"\r\n//                             placeholder=\"Email\"\r\n//                             value={email}\r\n//                             onChange={(e) => setEmail(e.target.value)}\r\n//                             required\r\n//                         />\r\n//                         <input\r\n//                             className=\"signup-input-field\"\r\n//                             type=\"tel\"\r\n//                             placeholder=\"Mobile Number\"\r\n//                             value={mobileNo}\r\n//                             onChange={(e) => setMobile(e.target.value)}\r\n//                             required\r\n//                         />\r\n                        \r\n//                         <input\r\n//                             className=\"signup-input-field\"\r\n//                             type=\"date\"\r\n//                             placeholder=\"Birth Date\"\r\n//                             value={birthdate}\r\n//                             onChange={(e) => setDateOfBirth(e.target.value)}\r\n//                             required\r\n//                         />\r\n//                         <input\r\n//                             className=\"signup-input-field\"\r\n//                             type=\"password\"\r\n//                             placeholder=\"Password\"\r\n//                             value={password}\r\n//                             onChange={(e) => setPassword(e.target.value)}\r\n//                             required\r\n//                         />\r\n//                         <input\r\n//                             className=\"signup-input-field\"\r\n//                             type=\"password\"\r\n//                             placeholder=\"Confirm Password\"\r\n//                             value={confirmPassword}\r\n//                             onChange={(e) => setConfirmPassword(e.target.value)}\r\n//                             required\r\n//                         />\r\n//                         <button type=\"submit\" className=\"signup-btn\">\r\n//                             Sign Up\r\n//                         </button>\r\n//                     </form>\r\n//                     <div className=\"signup-footer\">\r\n//                         <p>\r\n//                             Already have an account?{\" \"}\r\n//                             <Link to=\"/logins\" className=\"signup-link\">\r\n//                                 Sign In\r\n//                             </Link>\r\n//                         </p>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"./Signup.css\";\r\n\r\nexport default function SignupPage() {\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mobileNo, setMobile] = useState(\"\");\r\n  const [birthdate, setDateOfBirth] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSignupSuccess = async (event) => {\r\n    event.preventDefault();\r\n    setErrorMessage(\"\");\r\n\r\n    if (!fullName.trim() || !email.trim() || !mobileNo.trim() || !birthdate.trim() || !password.trim() || !confirmPassword.trim()) {\r\n      setErrorMessage(\"All fields are required!\");\r\n      return;\r\n    }\r\n\r\n    if (!/^[a-zA-Z]+(?: [a-zA-Z]+)*$/.test(fullName)) {\r\n      setErrorMessage(\"Full Name must contain only letters and spaces.\");\r\n      return;\r\n    }\r\n\r\n    if (!/^[6-9][0-9]{9}$/.test(mobileNo)) {\r\n      setErrorMessage(\"Mobile Number must be a valid 10-digit number starting with 6-9.\");\r\n      return;\r\n    }\r\n\r\n    if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      setErrorMessage(\"Invalid email format. Please use a correct format like example@mail.com.\");\r\n      return;\r\n    }\r\n\r\n    if (!/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$])[A-Za-z0-9@#$]{6,12}$/.test(password)) {\r\n      setErrorMessage(\r\n        \"Password must be 6-12 characters long and include at least one digit, one lowercase letter, one uppercase letter, and one special character (@, #, $).\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setErrorMessage(\"Passwords do not match. Please re-enter.\");\r\n      return;\r\n    }\r\n\r\n    const userData = {\r\n      name: fullName,\r\n      email: email,\r\n      mobileNo: mobileNo,\r\n      birthdate: birthdate,\r\n      password: password, // No manual encryption, backend handles it\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8085/api/farmers/addUser\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      if (response.status === 409) {\r\n        const message = await response.text();\r\n        throw new Error(message || \"User already exists! MobileNo or Email\");\r\n      }\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to create account. Please try again.\");\r\n      }\r\n\r\n      alert(\"User added successfully!\");\r\n      navigate(\"/logins\");\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"signup-wrapper\">\r\n        <div className=\"signup-card\">\r\n          <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\r\n          <br />\r\n          <h2 className=\"signup-header\">Create an Account</h2>\r\n          <form className=\"signup-form\" onSubmit={handleSignupSuccess}>\r\n            {errorMessage && <p className=\"signup-error-message\">{errorMessage}</p>}\r\n            <input\r\n              className=\"signup-input-field\"\r\n              type=\"text\"\r\n              placeholder=\"Full Name\"\r\n              value={fullName}\r\n              onChange={(e) => setFullName(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              className=\"signup-input-field\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              className=\"signup-input-field\"\r\n              type=\"tel\"\r\n              placeholder=\"Mobile Number\"\r\n              value={mobileNo}\r\n              onChange={(e) => setMobile(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              className=\"signup-input-field\"\r\n              type=\"date\"\r\n              placeholder=\"Birth Date\"\r\n              value={birthdate}\r\n              onChange={(e) => setDateOfBirth(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              className=\"signup-input-field\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              className=\"signup-input-field\"\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n            />\r\n            <button type=\"submit\" className=\"signup-btn\">Sign Up</button>\r\n          </form>\r\n          <div className=\"signup-footer\">\r\n            <p>\r\n              Already have an account?{\" \"}\r\n              <Link to=\"/logins\" className=\"signup-link\">Sign In</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtB,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,QAAQ,EAAEC,SAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}