{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder\\\\project\\\\src\\\\components\\\\Employee\\\\ViewRecords.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { Table, Container, Button } from \"react-bootstrap\";\n// import axios from \"axios\";\n\n// function ViewRecords() {\n//   const [records, setRecords] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch data from API (replace URL with the correct one)\n//     axios\n//       .get(\"http://localhost:8085/intake/get\") // Example API endpoint\n//       .then((response) => {\n//         setRecords(response.data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching records:\", error);\n//       });\n//   }, []);\n\n//   return (\n//     <Container className=\"mt-5\">\n//       <h1 className=\"text-center mb-4\">Company Records</h1>\n\n//       {records.length > 0 ? (\n//         <Table striped bordered hover>\n//           <thead>\n//             <tr>\n//               <th>Count</th>\n//               <th>Waste ID</th>\n//               <th>Farmer Name</th>\n//               <th>Collected By</th>\n//               <th>Collected Date</th>\n//               <th>Place</th>\n//               <th>Weight (tons)</th>\n//               <th>Rate per Ton</th>\n//               <th>Total Price</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {records.map((record, index) => (\n//               <tr key={index}>\n//                 <td>{record.id}</td>\n//                 <td>{record.wasteId}</td>\n//                 <td>{record.farmerName}</td>\n//                 <td>{record.collectedBy}</td>\n//                 <td>{record.collectedDate}</td>\n//                 <td>{record.place}</td>\n//                 <td>{record.weight}</td>\n//                 <td>{record.rate}</td>\n//                 <td>{record.totalPrice}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </Table>\n//       ) : (\n//         <p className=\"text-center\">No records found.</p>\n//       )}\n//     </Container>\n//   );\n// }\n\n// export default ViewRecords;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Container } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewRecords() {\n  _s();\n  const [records, setRecords] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8085/intake/get\").then(response => {\n      setRecords(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching records:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"Company Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), records.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Farmer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Collected By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pickup Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Weight (tons)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rate per Ton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: records.map(record => {\n          var _record$wasteDetailsI, _record$wasteDetailsI2, _record$wasteDetailsI3, _record$wasteDetailsI4;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_record$wasteDetailsI = record.wasteDetailsId) === null || _record$wasteDetailsI === void 0 ? void 0 : (_record$wasteDetailsI2 = _record$wasteDetailsI.farmer) === null || _record$wasteDetailsI2 === void 0 ? void 0 : _record$wasteDetailsI2.name) || \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_record$wasteDetailsI3 = record.wasteDetailsId) === null || _record$wasteDetailsI3 === void 0 ? void 0 : _record$wasteDetailsI3.address) || \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.collectedBy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_record$wasteDetailsI4 = record.wasteDetailsId) === null || _record$wasteDetailsI4 === void 0 ? void 0 : _record$wasteDetailsI4.pickupDate) || \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.rate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.totalPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, record.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"No records found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewRecords, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c = ViewRecords;\nexport default ViewRecords;\nvar _c;\n$RefreshReg$(_c, \"ViewRecords\");","map":{"version":3,"names":["React","useEffect","useState","Table","Container","axios","jsxDEV","_jsxDEV","ViewRecords","_s","records","setRecords","get","then","response","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","striped","bordered","hover","map","record","_record$wasteDetailsI","_record$wasteDetailsI2","_record$wasteDetailsI3","_record$wasteDetailsI4","id","wasteDetailsId","farmer","name","address","collectedBy","pickupDate","weight","rate","totalPrice","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/New folder/project/src/components/Employee/ViewRecords.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { Table, Container, Button } from \"react-bootstrap\";\r\n// import axios from \"axios\";\r\n\r\n// function ViewRecords() {\r\n//   const [records, setRecords] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch data from API (replace URL with the correct one)\r\n//     axios\r\n//       .get(\"http://localhost:8085/intake/get\") // Example API endpoint\r\n//       .then((response) => {\r\n//         setRecords(response.data);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error fetching records:\", error);\r\n//       });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <Container className=\"mt-5\">\r\n//       <h1 className=\"text-center mb-4\">Company Records</h1>\r\n\r\n//       {records.length > 0 ? (\r\n//         <Table striped bordered hover>\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Count</th>\r\n//               <th>Waste ID</th>\r\n//               <th>Farmer Name</th>\r\n//               <th>Collected By</th>\r\n//               <th>Collected Date</th>\r\n//               <th>Place</th>\r\n//               <th>Weight (tons)</th>\r\n//               <th>Rate per Ton</th>\r\n//               <th>Total Price</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {records.map((record, index) => (\r\n//               <tr key={index}>\r\n//                 <td>{record.id}</td>\r\n//                 <td>{record.wasteId}</td>\r\n//                 <td>{record.farmerName}</td>\r\n//                 <td>{record.collectedBy}</td>\r\n//                 <td>{record.collectedDate}</td>\r\n//                 <td>{record.place}</td>\r\n//                 <td>{record.weight}</td>\r\n//                 <td>{record.rate}</td>\r\n//                 <td>{record.totalPrice}</td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </Table>\r\n//       ) : (\r\n//         <p className=\"text-center\">No records found.</p>\r\n//       )}\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\n// export default ViewRecords;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Table, Container } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nfunction ViewRecords() {\r\n  const [records, setRecords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8085/intake/get\")\r\n      .then((response) => {\r\n        setRecords(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching records:\", error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <h1 className=\"text-center mb-4\">Company Records</h1>\r\n\r\n      {records.length > 0 ? (\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Farmer Name</th>\r\n              <th>Place</th>\r\n              <th>Collected By</th>\r\n              <th>Pickup Date</th>\r\n              <th>Weight (tons)</th>\r\n              <th>Rate per Ton</th>\r\n              <th>Total Price</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {records.map((record) => (\r\n              <tr key={record.id}>\r\n                <td>{record.id}</td>\r\n                <td>{record.wasteDetailsId?.farmer?.name || \"N/A\"}</td>\r\n                <td>{record.wasteDetailsId?.address || \"N/A\"}</td>\r\n                <td>{record.collectedBy}</td>\r\n                <td>{record.wasteDetailsId?.pickupDate || \"N/A\"}</td>\r\n                <td>{record.weight}</td>\r\n                <td>{record.rate}</td>\r\n                <td>{record.totalPrice}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <p className=\"text-center\">No records found.</p>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ViewRecords;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}