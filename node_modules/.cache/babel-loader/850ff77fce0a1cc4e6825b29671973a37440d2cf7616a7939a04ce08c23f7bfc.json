{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder\\\\project\\\\src\\\\components\\\\Employee\\\\GetQueries.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GetQueries() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8085/contact/get\").then(res => res.json()).then(val => {\n      setData(val);\n      console.log(val);\n    }).catch(err => console.log(\"Unable to fetch\", err));\n  }, []);\n  const formatDate = timestamp => {\n    if (!timestamp) return \"N/A\";\n    const date = new Date(timestamp);\n    return date.toLocaleDateString('en-GB');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"emph1\",\n      children: \"Employee Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backsize\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Query\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Date Of Raised\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data && data.length > 0 && data.map((val, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: val.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.subject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(val.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 22\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n_s(GetQueries, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = GetQueries;\nvar _c;\n$RefreshReg$(_c, \"GetQueries\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","GetQueries","_s","data","setData","useState","useEffect","fetch","then","res","json","val","console","log","catch","err","formatDate","timestamp","date","Date","toLocaleDateString","children","className","fileName","_jsxFileName","lineNumber","columnNumber","scope","length","map","index","id","name","email","subject","message","createdAt","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/New folder/project/src/components/Employee/GetQueries.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport default function GetQueries() {\r\n  const [data, setData] = useState([]);\r\n \r\n   useEffect(() => {\r\n     fetch(\"http://localhost:8085/contact/get\")\r\n       .then((res) => res.json())\r\n       .then((val) => {\r\n         setData(val);\r\n         console.log(val);\r\n       })\r\n       .catch((err) => console.log(\"Unable to fetch\", err));\r\n   }, []);\r\n \r\n   const formatDate = (timestamp) => {\r\n     if (!timestamp) return \"N/A\"; \r\n     const date = new Date(timestamp);\r\n     return date.toLocaleDateString('en-GB'); \r\n   };\r\n \r\n   return (\r\n     <>\r\n       <h1 className='emph1'>Employee Data</h1>\r\n       <div className='backsize'>\r\n         <table className=\"table\">\r\n           <thead>\r\n             <tr>\r\n               <th scope=\"col\">Id</th>\r\n               <th scope=\"col\">Name</th>\r\n               <th scope=\"col\">Email</th>\r\n               <th scope=\"col\">Subject</th>\r\n               <th scope=\"col\">Query</th>\r\n               <th scope=\"col\">Date Of Raised</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n             {data && data.length > 0 &&\r\n               data.map((val, index) => {\r\n                 return (\r\n                   <tr key={index}>\r\n                     <th scope=\"row\">{val.id}</th>\r\n                     <td>{val.name}</td>\r\n                     <td>{val.email}</td>\r\n                     <td>{val.subject}</td>\r\n                     <td>{val.message}</td>\r\n                     <td>{formatDate(val.createdAt)}</td>\r\n                     \r\n                   </tr>\r\n                 );\r\n               })\r\n             }\r\n           </tbody>\r\n         </table>\r\n       </div>\r\n     </>\r\n   );\r\n }\r\n \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}