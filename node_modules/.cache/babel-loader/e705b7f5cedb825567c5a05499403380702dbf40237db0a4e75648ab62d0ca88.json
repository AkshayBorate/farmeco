{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder\\\\project\\\\src\\\\components\\\\login\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useRef, useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import \"./Login.css\";\n\n// export default function LoginPage() {\n//   const [errorMessage, setErrorMessage] = useState(\"\");\n//   const emailRef = useRef();\n//   const passwordRef = useRef();\n//   const navigate = useNavigate();\n\n//   const handleSignIn = async () => {\n//     setErrorMessage(\"\");\n//     const email = emailRef.current.value.trim();\n//     const password = passwordRef.current.value.trim();\n\n//     if (!email || !password) {\n//       setErrorMessage(\"Please fill out both fields!\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:8085/api/farmers/login\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ email, password }),\n//       });\n\n//       const data = await response.json();\n\n//       if (!response.ok) {\n//         setErrorMessage(data.message || \"An error occurred. Please try again.\");\n//         return;\n//       }\n\n//       if (data.id) {\n//         localStorage.setItem(\"userId\", data.id);\n//         alert(\"Login successful!\");\n//         navigate(\"/custheader/dashboard\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       setErrorMessage(\"Failed to log in. Please try again later.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"unique-login-page\">\n//       <div className=\"unique-login-container\">\n//         <div className=\"unique-form-container\">\n//           <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\n//           <h2 className=\"unique-form-title\">Sign In</h2>\n//           <form\n//             className=\"unique-form unique-signin-form\"\n//             onSubmit={(e) => e.preventDefault()}\n//           >\n//             {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//             <div className=\"unique-form-group\">\n//               <label>Email</label>\n//               <input\n//                 className=\"unique-form-input\"\n//                 type=\"email\"\n//                 placeholder=\"Enter your email\"\n//                 ref={emailRef}\n//                 required\n//               />\n//             </div>\n//             <div className=\"unique-form-group\">\n//               <label>Password</label>\n//               <input\n//                 className=\"unique-form-input\"\n//                 type=\"password\"\n//                 placeholder=\"Enter your password\"\n//                 ref={passwordRef}\n//                 required\n//               />\n//             </div>\n//             <button\n//               type=\"button\"\n//               className=\"unique-form-submit-button\"\n//               onClick={handleSignIn}\n//             >\n//               Sign In\n//             </button>\n//           </form>\n//           <div className=\"unique-signup-link\">\n//             <p>\n//               Don't have an account? <Link to=\"/signup\">Sign Up</Link>\n//             </p>\n//             <p>\n//                <Link to=\"/forpass\">Forgot Password</Link>\n//             </p>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"./Login.css\";\n\n// export default function RoleBasedLogin() {\n//   const [role, setRole] = useState(\"customer\"); \n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [errorMessage, setErrorMessage] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleLogin = async () => {\n//     setErrorMessage(\"\");\n\n//     if (!email.trim() || !password.trim()) {\n//       setErrorMessage(\"Please fill out both fields!\");\n//       return;\n//     }\n\n//     try {\n//       const loginData = { email, password };\n//       const apiUrl =\n//         role === \"customer\"\n//           ? \"http://localhost:8085/api/farmers/login\"\n//           : \"http://localhost:8085/api/employee/login\";\n\n//       const response = await axios.post(apiUrl, loginData);\n\n//       if (response.status === 200) {\n//         const userId = response.data.id;\n//         const storageKey = role === \"customer\" ? \"userId\" : \"employeeId\";\n\n//         localStorage.setItem(storageKey, userId);\n\n//         alert(\"Login successful!\");\n//         const dashboardPath =\n//           role === \"customer\" ? \"/custheader/dashboard\" : \"/empdash/dashboard\";\n//         navigate(dashboardPath);\n//       } else {\n//         setErrorMessage(\"Invalid email or password.\");\n//       }\n//     } catch (error) {\n//       setErrorMessage(\n//         error.response?.data?.message || \"Error while logging in. Please try again later.\"\n//       );\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"unique-login-page\">\n//       <div className=\"unique-login-container\">\n//         <div className=\"unique-form-container\">\n//           <Link to=\"/loginc\" className=\"signup-link\">\n//             Back\n//           </Link>\n//           <h2 className=\"unique-form-title\">Sign In</h2>\n//           <form\n//             className=\"unique-form unique-signin-form\"\n//             onSubmit={(e) => e.preventDefault()}\n//           >\n//             <div className=\"unique-form-group\">\n//               <label htmlFor=\"role\">Select Role</label>\n//               <select\n//                 className=\"unique-form-input\"\n//                 value={role}\n//                 onChange={(e) => setRole(e.target.value)}\n//               >\n//                 <option value=\"customer\">Customer</option>\n//                 <option value=\"employee\">Employee</option>\n//               </select>\n//             </div>\n\n//             <div className=\"unique-form-group\">\n//               <label>Email</label>\n//               <input\n//                 className=\"unique-form-input\"\n//                 type=\"email\"\n//                 placeholder=\"Enter your email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 required\n//               />\n//             </div>\n//             <div className=\"unique-form-group\">\n//               <label>Password</label>\n//               <input\n//                 className=\"unique-form-input\"\n//                 type=\"password\"\n//                 placeholder=\"Enter your password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//                 required\n//               />\n//             </div>\n\n//             {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n//             <button\n//               type=\"button\"\n//               className=\"unique-form-submit-button\"\n//               onClick={handleLogin}\n//             >\n//               Sign In\n//             </button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"./Login.css\";\n\n// export default function RoleBasedLogin() {\n//   const [role, setRole] = useState(\"customer\"); // Default role is customer\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [errorMessage, setErrorMessage] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleLogin = async () => {\n//     setErrorMessage(\"\");\n\n//     if (!email.trim() || !password.trim()) {\n//       setErrorMessage(\"Please fill out both fields!\");\n//       return;\n//     }\n\n//     try {\n//       const loginData = { email, password };\n//       let apiUrl = \"\";\n\n//       if (role === \"customer\") {\n//         apiUrl = \"http://localhost:8085/api/farmers/login\";\n//       } else {\n//         apiUrl = \"http://localhost:8085/api/employee/login\";\n//       }\n\n//       const response = await axios.post(apiUrl, loginData);\n\n//       if (response.status === 200) {\n//         const userId = response.data.id;\n//         const userRole = response.data.role;\n\n//         // Store the userId for session handling\n//         localStorage.setItem(\"userId\", userId);\n\n//         if (userRole === \"ADMIN\") {\n//           navigate(\"/admindash/home\");\n//         } else if (userRole === \"EMPLOYEE\") {\n//           navigate(\"/empdash/dashboard\");\n//         } else if (role === \"customer\") {\n//           navigate(\"/custheader/dashboard\");\n//         }\n\n//         alert(\"Login successful!\");\n//       } else {\n//         setErrorMessage(\"Invalid email or password.\");\n//       }\n//     } catch (error) {\n//       setErrorMessage(\n//         error.response?.data?.message || \"Error while logging in. Please try again later.\"\n//       );\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"unique-login-page\">\n//       <div className=\"unique-login-container\">\n//         <div className=\"unique-form-container\">\n//           <Link to=\"/loginc\" className=\"signup-link\">\n//             Back\n//           </Link>\n//           <h2 className=\"unique-form-title\">Sign In</h2>\n//           <form\n//             className=\"unique-form unique-signin-form\"\n//             onSubmit={(e) => e.preventDefault()}\n//           >\n//             <div className=\"unique-form-group\">\n//               <label htmlFor=\"role\">Select Role</label>\n//               <select\n//                 className=\"unique-form-input\"\n//                 value={role}\n//                 onChange={(e) => setRole(e.target.value)}\n//               >\n//                 <option value=\"customer\">Customer</option>\n//                 <option value=\"employee\">Employee</option>\n//                 <option value=\"admin\">Admin</option>\n//               </select>\n//             </div>\n\n//             <div className=\"unique-form-group\">\n//               <label>Email</label>\n//               <input\n//                 className=\"unique-form-input\"\n//                 type=\"email\"\n//                 placeholder=\"Enter your email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 required\n//               />\n//             </div>\n\n//             <div className=\"unique-form-group\">\n//               <label>Password</label>\n//               <input\n//                 className=\"unique-form-input\"\n//                 type=\"password\"\n//                 placeholder=\"Enter your password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//                 required\n//               />\n//             </div>\n\n//             {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n//             <button\n//               type=\"button\"\n//               className=\"unique-form-submit-button\"\n//               onClick={handleLogin}\n//             >\n//               Sign In\n//             </button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"./Login.css\";\n\n// export default function RoleBasedLogin() {\n//   const [role, setRole] = useState(\"customer\"); \n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [errorMessage, setErrorMessage] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleLogin = async () => {\n//     setErrorMessage(\"\");\n\n//     if (!email.trim() || !password.trim()) {\n//       setErrorMessage(\"Please fill out both fields!\");\n//       return;\n//     }\n\n//     try {\n//       const loginData = { email, password };\n//       const apiUrl =\n//         role === \"customer\"\n//           ? \"http://localhost:8085/api/farmers/login\"\n//           : \"http://localhost:8085/api/employee/login\";\n\n//       const response = await axios.post(apiUrl, loginData);\n\n//       if (response.status === 200) {\n//         const { id, role: userRole } = response.data;\n//         let dashboardPath = \"\";\n\n//         if (role === \"customer\" && userRole !== \"customer\") {\n//           setErrorMessage(\"Invalid role selection!\");\n//           return;\n//         }\n\n//         if (userRole === \"ADMIN\") {\n//           dashboardPath = \"/admindash/home\";\n//           localStorage.setItem(\"adminId\", id);\n//         } else if (userRole === \"EMPLOYEE\") {\n//           dashboardPath = \"/empdash/dashboard\";\n//           localStorage.setItem(\"employeeId\", id);\n//         } else if (userRole === \"customer\") {\n//           dashboardPath = \"/custheader/dashboard\";\n//           localStorage.setItem(\"userId\", id);\n//         } else {\n//           setErrorMessage(\"Unauthorized access!\");\n//           return;\n//         }\n\n//         alert(\"Login successful!\");\n//         navigate(dashboardPath);\n//       } else {\n//         setErrorMessage(\"Invalid email or password.\");\n//       }\n//     } catch (error) {\n//       setErrorMessage(\n//         error.response?.data?.message || \"Error while logging in. Please try again later.\"\n//       );\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"unique-login-page\">\n//       <div className=\"unique-login-container\">\n//         <div className=\"unique-form-container\">\n//           <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\n//           <h2 className=\"unique-form-title\">Sign In</h2>\n//           <form\n//             className=\"unique-form unique-signin-form\"\n//             onSubmit={(e) => e.preventDefault()}\n//           >\n//             <div className=\"unique-form-group\">\n//               <label htmlFor=\"role\">Select Role</label>\n//               <select\n//                 className=\"unique-form-input\"\n//                 value={role}\n//                 onChange={(e) => setRole(e.target.value)}\n//               >\n//                 <option value=\"customer\">Customer</option>\n//                 <option value=\"admin\">Admin/Employee</option>\n//               </select>\n//             </div>\n\n//             <div className=\"unique-form-group\">\n//               <label>Email</label>\n//               <input\n//                 className=\"unique-form-input\"\n//                 type=\"email\"\n//                 placeholder=\"Enter your email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 required\n//               />\n//             </div>\n//             <div className=\"unique-form-group\">\n//               <label>Password</label>\n//               <input\n//                 className=\"unique-form-input\"\n//                 type=\"password\"\n//                 placeholder=\"Enter your password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//                 required\n//               />\n//             </div>\n\n//             {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n//             <button\n//               type=\"button\"\n//               className=\"unique-form-submit-button\"\n//               onClick={handleLogin}\n//             >\n//               Sign In\n//             </button>\n//             {role === \"customer\" && (\n//               <div className=\"unique-signup-link\">\n//                 <p>\n//                   Don't have an account? <Link to=\"/signup\">Sign Up</Link>\n//                 </p>\n//                 <p>\n//                   <Link to=\"/forpass\">Forgot Password</Link>\n//                 </p>\n//               </div>\n\n//               )\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RoleBasedLogin() {\n  _s();\n  const [role, setRole] = useState(\"customer\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    setErrorMessage(\"\");\n    if (!email.trim() || !password.trim()) {\n      setErrorMessage(\"Please fill out both fields!\");\n      return;\n    }\n    try {\n      const loginData = {\n        email,\n        password\n      };\n      const apiUrl = role === \"customer\" ? \"http://localhost:8085/api/farmers/login\" : \"http://localhost:8085/api/employee/login\";\n      const response = await axios.post(apiUrl, loginData);\n      if (response.status === 200) {\n        const {\n          id,\n          role: userRole\n        } = response.data;\n        let dashboardPath = \"\";\n        if (role === \"customer\" && userRole !== \"customer\") {\n          setErrorMessage(\"Invalid role selection!\");\n          return;\n        }\n        if (userRole === \"ADMIN\") {\n          dashboardPath = \"/admindash/home\";\n          localStorage.setItem(\"adminId\", id);\n        } else if (userRole === \"EMPLOYEE\") {\n          dashboardPath = \"/empdash/dashboard\";\n          localStorage.setItem(\"employeeId\", id);\n        } else if (userRole === \"customer\") {\n          dashboardPath = \"/custheader/dashboard\";\n          localStorage.setItem(\"userId\", id);\n        } else {\n          setErrorMessage(\"Unauthorized access!\");\n          return;\n        }\n        alert(\"Login successful!\");\n        navigate(dashboardPath);\n      } else {\n        setErrorMessage(\"Invalid email or password.\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setErrorMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error while logging in. Please try again later.\");\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unique-login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unique-login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unique-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/loginc\",\n          className: \"signup-link\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"unique-form-title\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"unique-form unique-signin-form\",\n          onSubmit: e => e.preventDefault(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unique-form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"role\",\n              children: \"Select Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"unique-form-input\",\n              value: role,\n              onChange: e => setRole(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"customer\",\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin/Employee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unique-form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"unique-form-input\",\n              type: \"email\",\n              placeholder: \"Enter your email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unique-form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"unique-form-input\",\n              type: \"password\",\n              placeholder: \"Enter your password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 13\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"unique-form-submit-button\",\n            onClick: handleLogin,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }, this), role === \"customer\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unique-signup-link\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/signup\",\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/forpass\",\n                children: \"Forgot Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 548,\n    columnNumber: 5\n  }, this);\n}\n_s(RoleBasedLogin, \"TYKTLBpmxU9+wStywNFWv12lNzc=\", false, function () {\n  return [useNavigate];\n});\n_c = RoleBasedLogin;\nvar _c;\n$RefreshReg$(_c, \"RoleBasedLogin\");","map":{"version":3,"names":["React","useState","Link","useNavigate","axios","jsxDEV","_jsxDEV","RoleBasedLogin","_s","role","setRole","email","setEmail","password","setPassword","errorMessage","setErrorMessage","navigate","handleLogin","trim","loginData","apiUrl","response","post","status","id","userRole","data","dashboardPath","localStorage","setItem","alert","error","_error$response","_error$response$data","message","console","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","htmlFor","value","onChange","target","type","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/New folder/project/src/components/login/Login.js"],"sourcesContent":["\r\n\r\n\r\n// import React, { useRef, useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import \"./Login.css\";\r\n\r\n// export default function LoginPage() {\r\n//   const [errorMessage, setErrorMessage] = useState(\"\");\r\n//   const emailRef = useRef();\r\n//   const passwordRef = useRef();\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSignIn = async () => {\r\n//     setErrorMessage(\"\");\r\n//     const email = emailRef.current.value.trim();\r\n//     const password = passwordRef.current.value.trim();\r\n\r\n//     if (!email || !password) {\r\n//       setErrorMessage(\"Please fill out both fields!\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8085/api/farmers/login\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ email, password }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (!response.ok) {\r\n//         setErrorMessage(data.message || \"An error occurred. Please try again.\");\r\n//         return;\r\n//       }\r\n\r\n//       if (data.id) {\r\n//         localStorage.setItem(\"userId\", data.id);\r\n//         alert(\"Login successful!\");\r\n//         navigate(\"/custheader/dashboard\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       setErrorMessage(\"Failed to log in. Please try again later.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"unique-login-page\">\r\n//       <div className=\"unique-login-container\">\r\n//         <div className=\"unique-form-container\">\r\n//           <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\r\n//           <h2 className=\"unique-form-title\">Sign In</h2>\r\n//           <form\r\n//             className=\"unique-form unique-signin-form\"\r\n//             onSubmit={(e) => e.preventDefault()}\r\n//           >\r\n//             {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n//             <div className=\"unique-form-group\">\r\n//               <label>Email</label>\r\n//               <input\r\n//                 className=\"unique-form-input\"\r\n//                 type=\"email\"\r\n//                 placeholder=\"Enter your email\"\r\n//                 ref={emailRef}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div className=\"unique-form-group\">\r\n//               <label>Password</label>\r\n//               <input\r\n//                 className=\"unique-form-input\"\r\n//                 type=\"password\"\r\n//                 placeholder=\"Enter your password\"\r\n//                 ref={passwordRef}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"unique-form-submit-button\"\r\n//               onClick={handleSignIn}\r\n//             >\r\n//               Sign In\r\n//             </button>\r\n//           </form>\r\n//           <div className=\"unique-signup-link\">\r\n//             <p>\r\n//               Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n//             </p>\r\n//             <p>\r\n//                <Link to=\"/forpass\">Forgot Password</Link>\r\n//             </p>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import \"./Login.css\";\r\n\r\n// export default function RoleBasedLogin() {\r\n//   const [role, setRole] = useState(\"customer\"); \r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [errorMessage, setErrorMessage] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = async () => {\r\n//     setErrorMessage(\"\");\r\n\r\n//     if (!email.trim() || !password.trim()) {\r\n//       setErrorMessage(\"Please fill out both fields!\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const loginData = { email, password };\r\n//       const apiUrl =\r\n//         role === \"customer\"\r\n//           ? \"http://localhost:8085/api/farmers/login\"\r\n//           : \"http://localhost:8085/api/employee/login\";\r\n\r\n//       const response = await axios.post(apiUrl, loginData);\r\n\r\n//       if (response.status === 200) {\r\n//         const userId = response.data.id;\r\n//         const storageKey = role === \"customer\" ? \"userId\" : \"employeeId\";\r\n\r\n//         localStorage.setItem(storageKey, userId);\r\n\r\n//         alert(\"Login successful!\");\r\n//         const dashboardPath =\r\n//           role === \"customer\" ? \"/custheader/dashboard\" : \"/empdash/dashboard\";\r\n//         navigate(dashboardPath);\r\n//       } else {\r\n//         setErrorMessage(\"Invalid email or password.\");\r\n//       }\r\n//     } catch (error) {\r\n//       setErrorMessage(\r\n//         error.response?.data?.message || \"Error while logging in. Please try again later.\"\r\n//       );\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"unique-login-page\">\r\n//       <div className=\"unique-login-container\">\r\n//         <div className=\"unique-form-container\">\r\n//           <Link to=\"/loginc\" className=\"signup-link\">\r\n//             Back\r\n//           </Link>\r\n//           <h2 className=\"unique-form-title\">Sign In</h2>\r\n//           <form\r\n//             className=\"unique-form unique-signin-form\"\r\n//             onSubmit={(e) => e.preventDefault()}\r\n//           >\r\n//             <div className=\"unique-form-group\">\r\n//               <label htmlFor=\"role\">Select Role</label>\r\n//               <select\r\n//                 className=\"unique-form-input\"\r\n//                 value={role}\r\n//                 onChange={(e) => setRole(e.target.value)}\r\n//               >\r\n//                 <option value=\"customer\">Customer</option>\r\n//                 <option value=\"employee\">Employee</option>\r\n//               </select>\r\n//             </div>\r\n\r\n//             <div className=\"unique-form-group\">\r\n//               <label>Email</label>\r\n//               <input\r\n//                 className=\"unique-form-input\"\r\n//                 type=\"email\"\r\n//                 placeholder=\"Enter your email\"\r\n//                 value={email}\r\n//                 onChange={(e) => setEmail(e.target.value)}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div className=\"unique-form-group\">\r\n//               <label>Password</label>\r\n//               <input\r\n//                 className=\"unique-form-input\"\r\n//                 type=\"password\"\r\n//                 placeholder=\"Enter your password\"\r\n//                 value={password}\r\n//                 onChange={(e) => setPassword(e.target.value)}\r\n//                 required\r\n//               />\r\n//             </div>\r\n\r\n//             {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"unique-form-submit-button\"\r\n//               onClick={handleLogin}\r\n//             >\r\n//               Sign In\r\n//             </button>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// import React, { useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import \"./Login.css\";\r\n\r\n// export default function RoleBasedLogin() {\r\n//   const [role, setRole] = useState(\"customer\"); // Default role is customer\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [errorMessage, setErrorMessage] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = async () => {\r\n//     setErrorMessage(\"\");\r\n\r\n//     if (!email.trim() || !password.trim()) {\r\n//       setErrorMessage(\"Please fill out both fields!\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const loginData = { email, password };\r\n//       let apiUrl = \"\";\r\n\r\n//       if (role === \"customer\") {\r\n//         apiUrl = \"http://localhost:8085/api/farmers/login\";\r\n//       } else {\r\n//         apiUrl = \"http://localhost:8085/api/employee/login\";\r\n//       }\r\n\r\n//       const response = await axios.post(apiUrl, loginData);\r\n\r\n//       if (response.status === 200) {\r\n//         const userId = response.data.id;\r\n//         const userRole = response.data.role;\r\n\r\n//         // Store the userId for session handling\r\n//         localStorage.setItem(\"userId\", userId);\r\n\r\n//         if (userRole === \"ADMIN\") {\r\n//           navigate(\"/admindash/home\");\r\n//         } else if (userRole === \"EMPLOYEE\") {\r\n//           navigate(\"/empdash/dashboard\");\r\n//         } else if (role === \"customer\") {\r\n//           navigate(\"/custheader/dashboard\");\r\n//         }\r\n\r\n//         alert(\"Login successful!\");\r\n//       } else {\r\n//         setErrorMessage(\"Invalid email or password.\");\r\n//       }\r\n//     } catch (error) {\r\n//       setErrorMessage(\r\n//         error.response?.data?.message || \"Error while logging in. Please try again later.\"\r\n//       );\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"unique-login-page\">\r\n//       <div className=\"unique-login-container\">\r\n//         <div className=\"unique-form-container\">\r\n//           <Link to=\"/loginc\" className=\"signup-link\">\r\n//             Back\r\n//           </Link>\r\n//           <h2 className=\"unique-form-title\">Sign In</h2>\r\n//           <form\r\n//             className=\"unique-form unique-signin-form\"\r\n//             onSubmit={(e) => e.preventDefault()}\r\n//           >\r\n//             <div className=\"unique-form-group\">\r\n//               <label htmlFor=\"role\">Select Role</label>\r\n//               <select\r\n//                 className=\"unique-form-input\"\r\n//                 value={role}\r\n//                 onChange={(e) => setRole(e.target.value)}\r\n//               >\r\n//                 <option value=\"customer\">Customer</option>\r\n//                 <option value=\"employee\">Employee</option>\r\n//                 <option value=\"admin\">Admin</option>\r\n//               </select>\r\n//             </div>\r\n\r\n//             <div className=\"unique-form-group\">\r\n//               <label>Email</label>\r\n//               <input\r\n//                 className=\"unique-form-input\"\r\n//                 type=\"email\"\r\n//                 placeholder=\"Enter your email\"\r\n//                 value={email}\r\n//                 onChange={(e) => setEmail(e.target.value)}\r\n//                 required\r\n//               />\r\n//             </div>\r\n\r\n//             <div className=\"unique-form-group\">\r\n//               <label>Password</label>\r\n//               <input\r\n//                 className=\"unique-form-input\"\r\n//                 type=\"password\"\r\n//                 placeholder=\"Enter your password\"\r\n//                 value={password}\r\n//                 onChange={(e) => setPassword(e.target.value)}\r\n//                 required\r\n//               />\r\n//             </div>\r\n\r\n//             {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"unique-form-submit-button\"\r\n//               onClick={handleLogin}\r\n//             >\r\n//               Sign In\r\n//             </button>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import \"./Login.css\";\r\n\r\n// export default function RoleBasedLogin() {\r\n//   const [role, setRole] = useState(\"customer\"); \r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [errorMessage, setErrorMessage] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = async () => {\r\n//     setErrorMessage(\"\");\r\n\r\n//     if (!email.trim() || !password.trim()) {\r\n//       setErrorMessage(\"Please fill out both fields!\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const loginData = { email, password };\r\n//       const apiUrl =\r\n//         role === \"customer\"\r\n//           ? \"http://localhost:8085/api/farmers/login\"\r\n//           : \"http://localhost:8085/api/employee/login\";\r\n\r\n//       const response = await axios.post(apiUrl, loginData);\r\n\r\n//       if (response.status === 200) {\r\n//         const { id, role: userRole } = response.data;\r\n//         let dashboardPath = \"\";\r\n\r\n//         if (role === \"customer\" && userRole !== \"customer\") {\r\n//           setErrorMessage(\"Invalid role selection!\");\r\n//           return;\r\n//         }\r\n\r\n//         if (userRole === \"ADMIN\") {\r\n//           dashboardPath = \"/admindash/home\";\r\n//           localStorage.setItem(\"adminId\", id);\r\n//         } else if (userRole === \"EMPLOYEE\") {\r\n//           dashboardPath = \"/empdash/dashboard\";\r\n//           localStorage.setItem(\"employeeId\", id);\r\n//         } else if (userRole === \"customer\") {\r\n//           dashboardPath = \"/custheader/dashboard\";\r\n//           localStorage.setItem(\"userId\", id);\r\n//         } else {\r\n//           setErrorMessage(\"Unauthorized access!\");\r\n//           return;\r\n//         }\r\n\r\n//         alert(\"Login successful!\");\r\n//         navigate(dashboardPath);\r\n//       } else {\r\n//         setErrorMessage(\"Invalid email or password.\");\r\n//       }\r\n//     } catch (error) {\r\n//       setErrorMessage(\r\n//         error.response?.data?.message || \"Error while logging in. Please try again later.\"\r\n//       );\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"unique-login-page\">\r\n//       <div className=\"unique-login-container\">\r\n//         <div className=\"unique-form-container\">\r\n//           <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\r\n//           <h2 className=\"unique-form-title\">Sign In</h2>\r\n//           <form\r\n//             className=\"unique-form unique-signin-form\"\r\n//             onSubmit={(e) => e.preventDefault()}\r\n//           >\r\n//             <div className=\"unique-form-group\">\r\n//               <label htmlFor=\"role\">Select Role</label>\r\n//               <select\r\n//                 className=\"unique-form-input\"\r\n//                 value={role}\r\n//                 onChange={(e) => setRole(e.target.value)}\r\n//               >\r\n//                 <option value=\"customer\">Customer</option>\r\n//                 <option value=\"admin\">Admin/Employee</option>\r\n//               </select>\r\n//             </div>\r\n\r\n//             <div className=\"unique-form-group\">\r\n//               <label>Email</label>\r\n//               <input\r\n//                 className=\"unique-form-input\"\r\n//                 type=\"email\"\r\n//                 placeholder=\"Enter your email\"\r\n//                 value={email}\r\n//                 onChange={(e) => setEmail(e.target.value)}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div className=\"unique-form-group\">\r\n//               <label>Password</label>\r\n//               <input\r\n//                 className=\"unique-form-input\"\r\n//                 type=\"password\"\r\n//                 placeholder=\"Enter your password\"\r\n//                 value={password}\r\n//                 onChange={(e) => setPassword(e.target.value)}\r\n//                 required\r\n//               />\r\n//             </div>\r\n\r\n//             {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"unique-form-submit-button\"\r\n//               onClick={handleLogin}\r\n//             >\r\n//               Sign In\r\n//             </button>\r\n//             {role === \"customer\" && (\r\n//               <div className=\"unique-signup-link\">\r\n//                 <p>\r\n//                   Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n//                 </p>\r\n//                 <p>\r\n//                   <Link to=\"/forpass\">Forgot Password</Link>\r\n//                 </p>\r\n//               </div>\r\n\r\n//               )\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./Login.css\";\r\n\r\nexport default function RoleBasedLogin() {\r\n  const [role, setRole] = useState(\"customer\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    setErrorMessage(\"\");\r\n\r\n    if (!email.trim() || !password.trim()) {\r\n      setErrorMessage(\"Please fill out both fields!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const loginData = { email, password };\r\n      const apiUrl =\r\n        role === \"customer\"\r\n          ? \"http://localhost:8085/api/farmers/login\"\r\n          : \"http://localhost:8085/api/employee/login\";\r\n\r\n      const response = await axios.post(apiUrl, loginData);\r\n\r\n      if (response.status === 200) {\r\n        const { id, role: userRole } = response.data;\r\n        let dashboardPath = \"\";\r\n\r\n        if (role === \"customer\" && userRole !== \"customer\") {\r\n          setErrorMessage(\"Invalid role selection!\");\r\n          return;\r\n        }\r\n\r\n        if (userRole === \"ADMIN\") {\r\n          dashboardPath = \"/admindash/home\";\r\n          localStorage.setItem(\"adminId\", id);\r\n        } else if (userRole === \"EMPLOYEE\") {\r\n          dashboardPath = \"/empdash/dashboard\";\r\n          localStorage.setItem(\"employeeId\", id);\r\n        } else if (userRole === \"customer\") {\r\n          dashboardPath = \"/custheader/dashboard\";\r\n          localStorage.setItem(\"userId\", id);\r\n        } else {\r\n          setErrorMessage(\"Unauthorized access!\");\r\n          return;\r\n        }\r\n\r\n        alert(\"Login successful!\");\r\n        navigate(dashboardPath);\r\n      } else {\r\n        setErrorMessage(\"Invalid email or password.\");\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(\r\n        error.response?.data?.message || \"Error while logging in. Please try again later.\"\r\n      );\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"unique-login-page\">\r\n      <div className=\"unique-login-container\">\r\n        <div className=\"unique-form-container\">\r\n          <Link to=\"/loginc\" className=\"signup-link\">Back</Link>\r\n          <h2 className=\"unique-form-title\">Sign In</h2>\r\n          <form\r\n            className=\"unique-form unique-signin-form\"\r\n            onSubmit={(e) => e.preventDefault()}\r\n          >\r\n            <div className=\"unique-form-group\">\r\n              <label htmlFor=\"role\">Select Role</label>\r\n              <select\r\n                className=\"unique-form-input\"\r\n                value={role}\r\n                onChange={(e) => setRole(e.target.value)}\r\n              >\r\n                <option value=\"customer\">Customer</option>\r\n                <option value=\"admin\">Admin/Employee</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"unique-form-group\">\r\n              <label>Email</label>\r\n              <input\r\n                className=\"unique-form-input\"\r\n                type=\"email\"\r\n                placeholder=\"Enter your email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"unique-form-group\">\r\n              <label>Password</label>\r\n              <input\r\n                className=\"unique-form-input\"\r\n                type=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"unique-form-submit-button\"\r\n              onClick={handleLogin}\r\n            >\r\n              Sign In\r\n            </button>\r\n\r\n            {role === \"customer\" && (\r\n              <div className=\"unique-signup-link\">\r\n                <p>\r\n                  Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n                </p>\r\n                <p>\r\n                  <Link to=\"/forpass\">Forgot Password</Link>\r\n                </p>\r\n              </div>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}