{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder\\\\project\\\\src\\\\components\\\\customer\\\\SellWaste.js\",\n  _s = $RefreshSig$();\n// import React, { useRef, useState } from \"react\";\n\n// const SellWaste = () => {\n//   const nameRef = useRef(null);\n//   const phoneRef = useRef(null);\n//   const placeRef = useRef(null);\n//   const addressRef = useRef(null);\n//   const emailRef = useRef(null);\n//   const wasteTypeRef = useRef(null);\n//   const weightRef = useRef(null);\n//   const rateRef = useRef(null);\n//   const imageRef = useRef(null);\n\n//   const [message, setMessage] = useState(\"\");\n\n//   // Submit the form\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Get the form values from useRef\n//     const name = nameRef.current.value;\n//     const phone = phoneRef.current.value;\n//     const place = placeRef.current.value;\n//     const address = addressRef.current.value;\n//     const email = emailRef.current.value;\n//     const wasteType = wasteTypeRef.current.value;\n//     const weight = weightRef.current.value;\n//     const rate = rateRef.current.value;\n//     const image = imageRef.current.files[0];\n\n//     const formData = new FormData();\n//     formData.append(\"image\", image);\n//     formData.append(\"name\", name);\n//     formData.append(\"phone\", phone);\n//     formData.append(\"place\", place);\n//     formData.append(\"address\", address);\n//     formData.append(\"email\", email);\n//     formData.append(\"wasteType\", wasteType);\n//     formData.append(\"weight\", weight);\n//     formData.append(\"rate\", rate);\n\n//     try {\n//       // Make the POST request to the backend API\n//       const response = await fetch(\"http://localhost:9001/FarmerDetails\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       if (response.ok) {\n//         const result = await response.json(); // Handling success response as JSON\n//         setMessage(result.message); // Show success message\n//       } else {\n//         const errorResult = await response.json(); // Handling error response as JSON\n//         setMessage(`Error: ${errorResult.message || \"Unknown error\"}`);\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       setMessage(`Error: ${error.message || \"Unknown error\"}`);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1> Sell Waste Form</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label htmlFor=\"image\">Image</label>\n//         <input type=\"file\" id=\"image\" name=\"image\" ref={imageRef} />\n\n//         <label htmlFor=\"name\">Name</label>\n//         <input\n//           type=\"text\"\n//           id=\"name\"\n//           name=\"name\"\n//           placeholder=\"Enter name\"\n//           ref={nameRef}\n//         />\n\n//         <label htmlFor=\"phone\">Phone</label>\n//         <input\n//           type=\"tel\"\n//           id=\"phone\"\n//           name=\"phone\"\n//           placeholder=\"Enter mobile no\"\n//           ref={phoneRef}\n//         />\n\n//         <label htmlFor=\"place\">Place</label>\n//         <input\n//           type=\"text\"\n//           id=\"place\"\n//           name=\"place\"\n//           placeholder=\"Enter place\"\n//           ref={placeRef}\n//         />\n\n//         <label htmlFor=\"address\">Address</label>\n//         <input\n//           type=\"text\"\n//           id=\"address\"\n//           name=\"address\"\n//           placeholder=\"Enter address\"\n//           ref={addressRef}\n//         />\n\n//         <label htmlFor=\"email\">Email</label>\n//         <input\n//           type=\"email\"\n//           id=\"email\"\n//           name=\"email\"\n//           placeholder=\"Enter email\"\n//           ref={emailRef}\n//         />\n\n//         <label htmlFor=\"wasteType\">Waste Type</label>\n//         <input\n//           type=\"text\"\n//           id=\"wasteType\"\n//           name=\"wasteType\"\n//           placeholder=\"Enter waste type\"\n//           ref={wasteTypeRef}\n//         />\n\n//         <label htmlFor=\"weight\">Weight</label>\n//         <input\n//           type=\"number\"\n//           id=\"weight\"\n//           name=\"weight\"\n//           placeholder=\"Enter weight\"\n//           ref={weightRef}\n//         />\n\n//         <label htmlFor=\"rate\">Rate</label>\n//         <input\n//           type=\"number\"\n//           id=\"rate\"\n//           name=\"rate\"\n//           placeholder=\"Enter rate\"\n//           ref={rateRef}\n//         />\n\n//         <button type=\"submit\">Submit</button>\n//       </form>\n\n//       {/* Display message */}\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// };\n\n// export default SellWaste;\n\n// import React, { useRef, useState } from \"react\";\n// import \"./SellWaste.css\";\n\n// const SellWaste = () => {\n//   const formRefs = {\n//     name: useRef(null),\n//     phone: useRef(null),\n//     place: useRef(null),\n//     address: useRef(null),\n//     email: useRef(null),\n//     wasteType: useRef(null),\n//     weight: useRef(null),\n//     rate: useRef(null),\n//     image: useRef(null),\n//   };\n\n//   const [message, setMessage] = useState(\"\");\n//   const [imagePreview, setImagePreview] = useState(null);\n\n//   const handleImageChange = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       setImagePreview(URL.createObjectURL(file));\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const formData = new FormData();\n//     Object.keys(formRefs).forEach(key => {\n//       if (key === 'image') {\n//         formData.append(key, formRefs[key].current.files[0]);\n//       } else {\n//         formData.append(key, formRefs[key].current.value);\n//       }\n//     });\n\n//     try {\n//       const response = await fetch(\"http://localhost:9001/FarmerDetails\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       const result = await response.json();\n//       setMessage(response.ok ? result.message : `Error: ${result.message || \"Unknown error\"}`);\n//     } catch (error) {\n//       setMessage(`Error: ${error.message || \"Unknown error\"}`);\n//     }\n//   };\n\n//   return (  \n//     <div className=\"sell-waste-container\">\n//       <div className=\"form-card\">\n//         <h1 className=\"form-title\">Sell Your Waste</h1>\n//         <p className=\"form-subtitle\">Turn your agricultural waste into profit</p>\n\n//         <form onSubmit={handleSubmit} className=\"waste-form\">\n//           <div className=\"form-grid\">\n//             <div className=\"form-group image-upload\">\n//               <label className=\"custom-file-upload\">\n//                 <input \n//                   type=\"file\" \n//                   ref={formRefs.image}\n//                   onChange={handleImageChange}\n//                   accept=\"image/*\"\n//                 />\n//                 {imagePreview ? (\n//                   <img src={imagePreview} alt=\"Preview\" className=\"image-preview\" />\n//                 ) : (\n//                   <div className=\"upload-placeholder\">\n//                     <i className=\"fas fa-cloud-upload-alt\"></i>\n//                     <span>Upload Waste Image</span>\n//                   </div>\n//                 )}\n//               </label>\n//             </div>\n\n//             <div className=\"form-section\">\n//               <div className=\"form-group\">\n//                 <label>Name</label>\n//                 <input type=\"text\" ref={formRefs.name} placeholder=\"Your full name\" required />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label>Phone</label>\n//                 <input type=\"tel\" ref={formRefs.phone} placeholder=\"Your contact number\" required />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label>Email</label>\n//                 <input type=\"email\" ref={formRefs.email} placeholder=\"Your email address\" required />\n//               </div>\n//             </div>\n\n//             <div className=\"form-section\">\n//               {/* <div className=\"form-group\">\n//                 <label>Place</label>\n//                 <input type=\"text\" ref={formRefs.place} placeholder=\"Your location\" required />\n//               </div> */}\n\n//               <div className=\"form-group\">\n//                 <label>Address</label>\n//                 <textarea ref={formRefs.address} placeholder=\"Your detailed address\" required />\n//               </div>\n//             </div>\n\n//             <div className=\"form-section\">\n//               <div className=\"form-group\">\n//                 <label>Waste Type</label>\n//                 <select ref={formRefs.wasteType} required>\n//                   <option value=\"\">Select waste type</option>\n//                   <option value=\"organic\">Organic Waste</option>\n//                   <option value=\"crop\">Crop Residue</option>\n//                   <option value=\"animal\">Animal Waste</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n\n//               <div className=\"form-row\">\n//                 {/* <div className=\"form-group half\">\n//                   <label>Weight (kg)</label>\n//                   <input type=\"number\" ref={formRefs.weight} placeholder=\"Weight\" required />\n//                 </div>\n\n//                 <div className=\"form-group half\">\n//                   <label>Rate (â‚¹/kg)</label>\n//                   <input type=\"number\" ref={formRefs.rate} placeholder=\"Rate\" required />\n//                 </div> */}\n//               </div>\n//             </div>\n//           </div>\n\n//           <button type=\"submit\" className=\"submit-btn\">\n//             Submit Request\n//           </button>\n//         </form>\n\n//         {message && <div className=\"message-toast\">{message}</div>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SellWaste;\n\nimport React, { useRef, useState } from \"react\";\nimport \"./SellWaste.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SellWaste = () => {\n  _s();\n  const formRefs = {\n    name: useRef(null),\n    email: useRef(null),\n    mobileNo: useRef(null),\n    address: useRef(null),\n    wasteType: useRef(null),\n    image: useRef(null)\n  };\n  const [message, setMessage] = useState(\"\");\n  const [imagePreview, setImagePreview] = useState(null);\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setImagePreview(URL.createObjectURL(file));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const farmerId = localStorage.getItem(\"userId\");\n    if (!farmerId) {\n      setMessage(\"Error: Farmer ID not found. Please log in again.\");\n      return;\n    }\n    const formData = new FormData();\n\n    // Create the wasteDetailsDto object to group the form data\n    const wasteDetailsDto = {\n      name: formRefs.name.current.value,\n      email: formRefs.email.current.value,\n      mobileNo: formRefs.mobileNo.current.value,\n      address: formRefs.address.current.value,\n      wasteType: formRefs.wasteType.current.value,\n      farmerid: farmerId // Add farmer ID from local storage\n    };\n\n    // Append the wasteDetailsDto to formData\n    formData.append(\"wasteDetailsDto\", JSON.stringify(wasteDetailsDto));\n\n    // Append the image if available\n    if (formRefs.image.current.files[0]) {\n      formData.append(\"imagePath\", formRefs.image.current.files[0]);\n    }\n\n    // Debugging: Log form data\n    for (let pair of formData.entries()) {\n      console.log(pair[0] + \": \" + pair[1]);\n    }\n    try {\n      const response = await fetch(\"http://localhost:8085/waste-details/add\", {\n        method: \"POST\",\n        body: formData\n      });\n      const result = await response.json();\n      setMessage(response.ok ? result.message : `Error: ${result.message || \"Unknown error\"}`);\n    } catch (error) {\n      setMessage(`Error: ${error.message || \"Unknown error\"}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sell-waste-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"form-title\",\n        children: \"Sell Your Waste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-subtitle\",\n        children: \"Turn your agricultural waste into profit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"waste-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group image-upload\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"custom-file-upload\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                ref: formRefs.image,\n                onChange: handleImageChange,\n                accept: \"image/*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this), imagePreview ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imagePreview,\n                alt: \"Preview\",\n                className: \"image-preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-placeholder\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-cloud-upload-alt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Upload Waste Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                ref: formRefs.name,\n                placeholder: \"Your full name\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                ref: formRefs.email,\n                placeholder: \"Your email address\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Mobile Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                ref: formRefs.mobileNo,\n                placeholder: \"Your contact number\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                ref: formRefs.address,\n                placeholder: \"Your detailed address\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Waste Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                ref: formRefs.wasteType,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select waste type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"organic\",\n                  children: \"Organic Waste\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"crop\",\n                  children: \"Crop Residue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"animal\",\n                  children: \"Animal Waste\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"other\",\n                  children: \"Other\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"Submit Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-toast\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 5\n  }, this);\n};\n_s(SellWaste, \"XgNROchmzB/cGvwasvRc7meYb9Q=\");\n_c = SellWaste;\nexport default SellWaste;\nvar _c;\n$RefreshReg$(_c, \"SellWaste\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","SellWaste","_s","formRefs","name","email","mobileNo","address","wasteType","image","message","setMessage","imagePreview","setImagePreview","handleImageChange","e","file","target","files","URL","createObjectURL","handleSubmit","preventDefault","farmerId","localStorage","getItem","formData","FormData","wasteDetailsDto","current","value","farmerid","append","JSON","stringify","pair","entries","console","log","response","fetch","method","body","result","json","ok","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","ref","onChange","accept","src","alt","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/New folder/project/src/components/customer/SellWaste.js"],"sourcesContent":["// import React, { useRef, useState } from \"react\";\r\n\r\n// const SellWaste = () => {\r\n//   const nameRef = useRef(null);\r\n//   const phoneRef = useRef(null);\r\n//   const placeRef = useRef(null);\r\n//   const addressRef = useRef(null);\r\n//   const emailRef = useRef(null);\r\n//   const wasteTypeRef = useRef(null);\r\n//   const weightRef = useRef(null);\r\n//   const rateRef = useRef(null);\r\n//   const imageRef = useRef(null);\r\n\r\n//   const [message, setMessage] = useState(\"\");\r\n\r\n//   // Submit the form\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Get the form values from useRef\r\n//     const name = nameRef.current.value;\r\n//     const phone = phoneRef.current.value;\r\n//     const place = placeRef.current.value;\r\n//     const address = addressRef.current.value;\r\n//     const email = emailRef.current.value;\r\n//     const wasteType = wasteTypeRef.current.value;\r\n//     const weight = weightRef.current.value;\r\n//     const rate = rateRef.current.value;\r\n//     const image = imageRef.current.files[0];\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", image);\r\n//     formData.append(\"name\", name);\r\n//     formData.append(\"phone\", phone);\r\n//     formData.append(\"place\", place);\r\n//     formData.append(\"address\", address);\r\n//     formData.append(\"email\", email);\r\n//     formData.append(\"wasteType\", wasteType);\r\n//     formData.append(\"weight\", weight);\r\n//     formData.append(\"rate\", rate);\r\n\r\n//     try {\r\n//       // Make the POST request to the backend API\r\n//       const response = await fetch(\"http://localhost:9001/FarmerDetails\", {\r\n//         method: \"POST\",\r\n//         body: formData,\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         const result = await response.json(); // Handling success response as JSON\r\n//         setMessage(result.message); // Show success message\r\n//       } else {\r\n//         const errorResult = await response.json(); // Handling error response as JSON\r\n//         setMessage(`Error: ${errorResult.message || \"Unknown error\"}`);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       setMessage(`Error: ${error.message || \"Unknown error\"}`);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h1> Sell Waste Form</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label htmlFor=\"image\">Image</label>\r\n//         <input type=\"file\" id=\"image\" name=\"image\" ref={imageRef} />\r\n\r\n//         <label htmlFor=\"name\">Name</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           id=\"name\"\r\n//           name=\"name\"\r\n//           placeholder=\"Enter name\"\r\n//           ref={nameRef}\r\n//         />\r\n\r\n//         <label htmlFor=\"phone\">Phone</label>\r\n//         <input\r\n//           type=\"tel\"\r\n//           id=\"phone\"\r\n//           name=\"phone\"\r\n//           placeholder=\"Enter mobile no\"\r\n//           ref={phoneRef}\r\n//         />\r\n\r\n//         <label htmlFor=\"place\">Place</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           id=\"place\"\r\n//           name=\"place\"\r\n//           placeholder=\"Enter place\"\r\n//           ref={placeRef}\r\n//         />\r\n\r\n//         <label htmlFor=\"address\">Address</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           id=\"address\"\r\n//           name=\"address\"\r\n//           placeholder=\"Enter address\"\r\n//           ref={addressRef}\r\n//         />\r\n\r\n//         <label htmlFor=\"email\">Email</label>\r\n//         <input\r\n//           type=\"email\"\r\n//           id=\"email\"\r\n//           name=\"email\"\r\n//           placeholder=\"Enter email\"\r\n//           ref={emailRef}\r\n//         />\r\n\r\n//         <label htmlFor=\"wasteType\">Waste Type</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           id=\"wasteType\"\r\n//           name=\"wasteType\"\r\n//           placeholder=\"Enter waste type\"\r\n//           ref={wasteTypeRef}\r\n//         />\r\n\r\n//         <label htmlFor=\"weight\">Weight</label>\r\n//         <input\r\n//           type=\"number\"\r\n//           id=\"weight\"\r\n//           name=\"weight\"\r\n//           placeholder=\"Enter weight\"\r\n//           ref={weightRef}\r\n//         />\r\n\r\n//         <label htmlFor=\"rate\">Rate</label>\r\n//         <input\r\n//           type=\"number\"\r\n//           id=\"rate\"\r\n//           name=\"rate\"\r\n//           placeholder=\"Enter rate\"\r\n//           ref={rateRef}\r\n//         />\r\n\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n\r\n//       {/* Display message */}\r\n//       {message && <p>{message}</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SellWaste;\r\n\r\n\r\n// import React, { useRef, useState } from \"react\";\r\n// import \"./SellWaste.css\";\r\n\r\n// const SellWaste = () => {\r\n//   const formRefs = {\r\n//     name: useRef(null),\r\n//     phone: useRef(null),\r\n//     place: useRef(null),\r\n//     address: useRef(null),\r\n//     email: useRef(null),\r\n//     wasteType: useRef(null),\r\n//     weight: useRef(null),\r\n//     rate: useRef(null),\r\n//     image: useRef(null),\r\n//   };\r\n\r\n//   const [message, setMessage] = useState(\"\");\r\n//   const [imagePreview, setImagePreview] = useState(null);\r\n\r\n//   const handleImageChange = (e) => {\r\n//     const file = e.target.files[0];\r\n//     if (file) {\r\n//       setImagePreview(URL.createObjectURL(file));\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n    \r\n//     const formData = new FormData();\r\n//     Object.keys(formRefs).forEach(key => {\r\n//       if (key === 'image') {\r\n//         formData.append(key, formRefs[key].current.files[0]);\r\n//       } else {\r\n//         formData.append(key, formRefs[key].current.value);\r\n//       }\r\n//     });\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:9001/FarmerDetails\", {\r\n//         method: \"POST\",\r\n//         body: formData,\r\n//       });\r\n\r\n//       const result = await response.json();\r\n//       setMessage(response.ok ? result.message : `Error: ${result.message || \"Unknown error\"}`);\r\n//     } catch (error) {\r\n//       setMessage(`Error: ${error.message || \"Unknown error\"}`);\r\n//     }\r\n//   };\r\n\r\n//   return (  \r\n//     <div className=\"sell-waste-container\">\r\n//       <div className=\"form-card\">\r\n//         <h1 className=\"form-title\">Sell Your Waste</h1>\r\n//         <p className=\"form-subtitle\">Turn your agricultural waste into profit</p>\r\n\r\n//         <form onSubmit={handleSubmit} className=\"waste-form\">\r\n//           <div className=\"form-grid\">\r\n//             <div className=\"form-group image-upload\">\r\n//               <label className=\"custom-file-upload\">\r\n//                 <input \r\n//                   type=\"file\" \r\n//                   ref={formRefs.image}\r\n//                   onChange={handleImageChange}\r\n//                   accept=\"image/*\"\r\n//                 />\r\n//                 {imagePreview ? (\r\n//                   <img src={imagePreview} alt=\"Preview\" className=\"image-preview\" />\r\n//                 ) : (\r\n//                   <div className=\"upload-placeholder\">\r\n//                     <i className=\"fas fa-cloud-upload-alt\"></i>\r\n//                     <span>Upload Waste Image</span>\r\n//                   </div>\r\n//                 )}\r\n//               </label>\r\n//             </div>\r\n\r\n//             <div className=\"form-section\">\r\n//               <div className=\"form-group\">\r\n//                 <label>Name</label>\r\n//                 <input type=\"text\" ref={formRefs.name} placeholder=\"Your full name\" required />\r\n//               </div>\r\n\r\n//               <div className=\"form-group\">\r\n//                 <label>Phone</label>\r\n//                 <input type=\"tel\" ref={formRefs.phone} placeholder=\"Your contact number\" required />\r\n//               </div>\r\n\r\n//               <div className=\"form-group\">\r\n//                 <label>Email</label>\r\n//                 <input type=\"email\" ref={formRefs.email} placeholder=\"Your email address\" required />\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div className=\"form-section\">\r\n//               {/* <div className=\"form-group\">\r\n//                 <label>Place</label>\r\n//                 <input type=\"text\" ref={formRefs.place} placeholder=\"Your location\" required />\r\n//               </div> */}\r\n\r\n//               <div className=\"form-group\">\r\n//                 <label>Address</label>\r\n//                 <textarea ref={formRefs.address} placeholder=\"Your detailed address\" required />\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div className=\"form-section\">\r\n//               <div className=\"form-group\">\r\n//                 <label>Waste Type</label>\r\n//                 <select ref={formRefs.wasteType} required>\r\n//                   <option value=\"\">Select waste type</option>\r\n//                   <option value=\"organic\">Organic Waste</option>\r\n//                   <option value=\"crop\">Crop Residue</option>\r\n//                   <option value=\"animal\">Animal Waste</option>\r\n//                   <option value=\"other\">Other</option>\r\n//                 </select>\r\n//               </div>\r\n\r\n//               <div className=\"form-row\">\r\n//                 {/* <div className=\"form-group half\">\r\n//                   <label>Weight (kg)</label>\r\n//                   <input type=\"number\" ref={formRefs.weight} placeholder=\"Weight\" required />\r\n//                 </div>\r\n\r\n//                 <div className=\"form-group half\">\r\n//                   <label>Rate (â‚¹/kg)</label>\r\n//                   <input type=\"number\" ref={formRefs.rate} placeholder=\"Rate\" required />\r\n//                 </div> */}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <button type=\"submit\" className=\"submit-btn\">\r\n//             Submit Request\r\n//           </button>\r\n//         </form>\r\n\r\n//         {message && <div className=\"message-toast\">{message}</div>}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SellWaste;\r\n\r\n\r\n\r\nimport React, { useRef, useState } from \"react\";\r\nimport \"./SellWaste.css\";\r\n\r\nconst SellWaste = () => {\r\n  const formRefs = {\r\n    name: useRef(null),\r\n    email: useRef(null),\r\n    mobileNo: useRef(null),\r\n    address: useRef(null),\r\n    wasteType: useRef(null),\r\n    image: useRef(null),\r\n  };\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImagePreview(URL.createObjectURL(file));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const farmerId = localStorage.getItem(\"userId\");\r\n    if (!farmerId) {\r\n      setMessage(\"Error: Farmer ID not found. Please log in again.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n\r\n    // Create the wasteDetailsDto object to group the form data\r\n    const wasteDetailsDto = {\r\n      name: formRefs.name.current.value,\r\n      email: formRefs.email.current.value,\r\n      mobileNo: formRefs.mobileNo.current.value,\r\n      address: formRefs.address.current.value,\r\n      wasteType: formRefs.wasteType.current.value,\r\n      farmerid: farmerId, // Add farmer ID from local storage\r\n    };\r\n\r\n    // Append the wasteDetailsDto to formData\r\n    formData.append(\"wasteDetailsDto\", JSON.stringify(wasteDetailsDto));\r\n\r\n    // Append the image if available\r\n    if (formRefs.image.current.files[0]) {\r\n      formData.append(\"imagePath\", formRefs.image.current.files[0]);\r\n    }\r\n\r\n    // Debugging: Log form data\r\n    for (let pair of formData.entries()) {\r\n      console.log(pair[0] + \": \" + pair[1]);\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8085/waste-details/add\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const result = await response.json();\r\n      setMessage(response.ok ? result.message : `Error: ${result.message || \"Unknown error\"}`);\r\n    } catch (error) {\r\n      setMessage(`Error: ${error.message || \"Unknown error\"}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sell-waste-container\">\r\n      <div className=\"form-card\">\r\n        <h1 className=\"form-title\">Sell Your Waste</h1>\r\n        <p className=\"form-subtitle\">Turn your agricultural waste into profit</p>\r\n\r\n        <form onSubmit={handleSubmit} className=\"waste-form\">\r\n          <div className=\"form-grid\">\r\n            <div className=\"form-group image-upload\">\r\n              <label className=\"custom-file-upload\">\r\n                <input\r\n                  type=\"file\"\r\n                  ref={formRefs.image}\r\n                  onChange={handleImageChange}\r\n                  accept=\"image/*\"\r\n                />\r\n                {imagePreview ? (\r\n                  <img src={imagePreview} alt=\"Preview\" className=\"image-preview\" />\r\n                ) : (\r\n                  <div className=\"upload-placeholder\">\r\n                    <i className=\"fas fa-cloud-upload-alt\"></i>\r\n                    <span>Upload Waste Image</span>\r\n                  </div>\r\n                )}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"form-section\">\r\n              <div className=\"form-group\">\r\n                <label>Name</label>\r\n                <input type=\"text\" ref={formRefs.name} placeholder=\"Your full name\" required />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Email</label>\r\n                <input type=\"email\" ref={formRefs.email} placeholder=\"Your email address\" required />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Mobile Number</label>\r\n                <input type=\"tel\" ref={formRefs.mobileNo} placeholder=\"Your contact number\" required />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-section\">\r\n              <div className=\"form-group\">\r\n                <label>Address</label>\r\n                <textarea ref={formRefs.address} placeholder=\"Your detailed address\" required />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Waste Type</label>\r\n                <select ref={formRefs.wasteType} required>\r\n                  <option value=\"\">Select waste type</option>\r\n                  <option value=\"organic\">Organic Waste</option>\r\n                  <option value=\"crop\">Crop Residue</option>\r\n                  <option value=\"animal\">Animal Waste</option>\r\n                  <option value=\"other\">Other</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"submit-btn\">\r\n            Submit Request\r\n          </button>\r\n        </form>\r\n\r\n        {message && <div className=\"message-toast\">{message}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SellWaste;\r\n\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}