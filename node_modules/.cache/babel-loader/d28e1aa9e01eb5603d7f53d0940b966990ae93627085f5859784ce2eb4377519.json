{"ast":null,"code":"// import React, { useRef, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"./EmployeeRegister.css\";\n\n// export default function EmployeeRegister() {\n//     const [errorMessage, setErrorMessage] = useState(\"\");\n//     const [successMessage, setSuccessMessage] = useState(\"\");\n//     const fullNameRef = useRef();\n//     const emailRef = useRef();\n//     const passwordRef = useRef();\n//     const mobileRef = useRef();\n//     const dateRef = useRef();\n//     const confirmPasswordRef = useRef();\n//     const salaryRef = useRef();\n//     const navigate = useNavigate();\n\n//     const handleSignupSuccess = (event) => {\n//         event.preventDefault();\n//         setErrorMessage(\"\");\n//         setSuccessMessage(\"\");\n\n//         const name = fullNameRef.current.value.trim();\n//         const email = emailRef.current.value.trim();\n//         const mobileNo = mobileRef.current.value.trim();\n//         const joiningDate = dateRef.current.value.trim();\n//         const password = passwordRef.current.value.trim();\n//         const confirmPassword = confirmPasswordRef.current.value.trim();\n//         const salary = parseFloat(salaryRef.current.value.trim());\n\n//         if (!name || !email || !mobileNo || !joiningDate || !password || !confirmPassword || !salary) {\n//             setErrorMessage(\"All fields are required!\");\n//             return;\n//         }\n//         if (!/^[a-zA-Z]+(?: [a-zA-Z]+)*$/.test(name)) {\n//             setErrorMessage(\"Please enter a valid name!\");\n//             return;\n//         }\n//         if (!/^[6-9][0-9]{9}$/.test(mobileNo)) {\n//             setErrorMessage(\"Please enter a valid mobile number!\");\n//             return;\n//         }\n//         if (!/^([a-zA-Z0-9]+)@([a-zA-Z0-9]+)\\.([a-zA-Z]{2,})(\\.[a-zA-Z]{2,})?$/.test(email)) {\n//             setErrorMessage(\"Please enter a valid email!\");\n//             return;\n//         }\n//         if (!/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$])[A-Za-z0-9@#$]{6,12}$/.test(password)) {\n//             setErrorMessage(\"Password must be 6-12 characters, with at least one digit, one lowercase, one uppercase, and one special character (@, #, $)\");\n//             return;\n//         }\n//         if (password !== confirmPassword) {\n//             setErrorMessage(\"Passwords do not match!\");\n//             return;\n//         }\n\n//         const data = {\n//             name,\n//             email,\n//             mobileNo,\n//             joiningDate,\n//             salary,\n//             password,\n//         };\n\n//         fetch(\"http://localhost:8085/api/employee/addUser\", {\n//             method: \"POST\",\n//             headers: {\n//                 \"Content-Type\": \"application/json\",\n//             },\n//             body: JSON.stringify(data),\n//         })\n//             .then((response) => {\n//                 console.log(\"Response received:\", response);\n//                 if (response.status === 409) {\n//                     return response.text().then((text) => {\n//                         throw new Error(text || \"Employee already exists! MobileNo or Email\");\n//                     });\n//                 }\n//                 if (!response.ok) {\n//                     throw new Error(`Server error: ${response.status}`);\n//                 }\n//                 return response.json();\n//             })\n//             .then((data) => {\n//                 console.log(\"Employee added:\", data);\n//                 setSuccessMessage(\"Employee added successfully!\");\n//                 alert(\"Employee added successfully!\");\n\n//             })\n//             .catch((error) => {\n//                 console.error(\"Error:\", error);\n//                 setErrorMessage(error.message);\n//             });\n//     };\n\n//     return (\n//         <div className=\"employee-register-wrapper\">\n//             <div className=\"employee-register-card\">\n//                 <h2 className=\"form-header\">Register Employee</h2>\n//                 <form className=\"employee-register-form\" onSubmit={handleSignupSuccess}>\n//                     {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n//                     {successMessage && <p className=\"success-message\">{successMessage}</p>}\n//                     <input className=\"input-field\" type=\"text\" placeholder=\"Full Name\" ref={fullNameRef} />\n//                     <input className=\"input-field\" type=\"email\" placeholder=\"Email\" ref={emailRef} />\n//                     <input className=\"input-field\" type=\"tel\" placeholder=\"Mobile Number\" ref={mobileRef} />\n//                     <input className=\"input-field\" type=\"date\" placeholder=\"Joining Date\" ref={dateRef} />\n//                     <input className=\"input-field\" type=\"number\" placeholder=\"Salary\" ref={salaryRef} min=\"0\" />\n//                     <input className=\"input-field\" type=\"password\" placeholder=\"Password\" ref={passwordRef} />\n//                     <input className=\"input-field\" type=\"password\" placeholder=\"Confirm Password\" ref={confirmPasswordRef} />\n//                     <button type=\"submit\" className=\"submit-btn\">Create Employee</button>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Lenovo/Desktop/New folder/project/src/components/admin/EmployeeRegister.js"],"sourcesContent":["// import React, { useRef, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"./EmployeeRegister.css\";\r\n\r\n// export default function EmployeeRegister() {\r\n//     const [errorMessage, setErrorMessage] = useState(\"\");\r\n//     const [successMessage, setSuccessMessage] = useState(\"\");\r\n//     const fullNameRef = useRef();\r\n//     const emailRef = useRef();\r\n//     const passwordRef = useRef();\r\n//     const mobileRef = useRef();\r\n//     const dateRef = useRef();\r\n//     const confirmPasswordRef = useRef();\r\n//     const salaryRef = useRef();\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleSignupSuccess = (event) => {\r\n//         event.preventDefault();\r\n//         setErrorMessage(\"\");\r\n//         setSuccessMessage(\"\");\r\n\r\n//         const name = fullNameRef.current.value.trim();\r\n//         const email = emailRef.current.value.trim();\r\n//         const mobileNo = mobileRef.current.value.trim();\r\n//         const joiningDate = dateRef.current.value.trim();\r\n//         const password = passwordRef.current.value.trim();\r\n//         const confirmPassword = confirmPasswordRef.current.value.trim();\r\n//         const salary = parseFloat(salaryRef.current.value.trim());\r\n\r\n//         if (!name || !email || !mobileNo || !joiningDate || !password || !confirmPassword || !salary) {\r\n//             setErrorMessage(\"All fields are required!\");\r\n//             return;\r\n//         }\r\n//         if (!/^[a-zA-Z]+(?: [a-zA-Z]+)*$/.test(name)) {\r\n//             setErrorMessage(\"Please enter a valid name!\");\r\n//             return;\r\n//         }\r\n//         if (!/^[6-9][0-9]{9}$/.test(mobileNo)) {\r\n//             setErrorMessage(\"Please enter a valid mobile number!\");\r\n//             return;\r\n//         }\r\n//         if (!/^([a-zA-Z0-9]+)@([a-zA-Z0-9]+)\\.([a-zA-Z]{2,})(\\.[a-zA-Z]{2,})?$/.test(email)) {\r\n//             setErrorMessage(\"Please enter a valid email!\");\r\n//             return;\r\n//         }\r\n//         if (!/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$])[A-Za-z0-9@#$]{6,12}$/.test(password)) {\r\n//             setErrorMessage(\"Password must be 6-12 characters, with at least one digit, one lowercase, one uppercase, and one special character (@, #, $)\");\r\n//             return;\r\n//         }\r\n//         if (password !== confirmPassword) {\r\n//             setErrorMessage(\"Passwords do not match!\");\r\n//             return;\r\n//         }\r\n\r\n//         const data = {\r\n//             name,\r\n//             email,\r\n//             mobileNo,\r\n//             joiningDate,\r\n//             salary,\r\n//             password,\r\n//         };\r\n\r\n//         fetch(\"http://localhost:8085/api/employee/addUser\", {\r\n//             method: \"POST\",\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\",\r\n//             },\r\n//             body: JSON.stringify(data),\r\n//         })\r\n//             .then((response) => {\r\n//                 console.log(\"Response received:\", response);\r\n//                 if (response.status === 409) {\r\n//                     return response.text().then((text) => {\r\n//                         throw new Error(text || \"Employee already exists! MobileNo or Email\");\r\n//                     });\r\n//                 }\r\n//                 if (!response.ok) {\r\n//                     throw new Error(`Server error: ${response.status}`);\r\n//                 }\r\n//                 return response.json();\r\n//             })\r\n//             .then((data) => {\r\n//                 console.log(\"Employee added:\", data);\r\n//                 setSuccessMessage(\"Employee added successfully!\");\r\n//                 alert(\"Employee added successfully!\");\r\n                \r\n//             })\r\n//             .catch((error) => {\r\n//                 console.error(\"Error:\", error);\r\n//                 setErrorMessage(error.message);\r\n//             });\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"employee-register-wrapper\">\r\n//             <div className=\"employee-register-card\">\r\n//                 <h2 className=\"form-header\">Register Employee</h2>\r\n//                 <form className=\"employee-register-form\" onSubmit={handleSignupSuccess}>\r\n//                     {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n//                     {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n//                     <input className=\"input-field\" type=\"text\" placeholder=\"Full Name\" ref={fullNameRef} />\r\n//                     <input className=\"input-field\" type=\"email\" placeholder=\"Email\" ref={emailRef} />\r\n//                     <input className=\"input-field\" type=\"tel\" placeholder=\"Mobile Number\" ref={mobileRef} />\r\n//                     <input className=\"input-field\" type=\"date\" placeholder=\"Joining Date\" ref={dateRef} />\r\n//                     <input className=\"input-field\" type=\"number\" placeholder=\"Salary\" ref={salaryRef} min=\"0\" />\r\n//                     <input className=\"input-field\" type=\"password\" placeholder=\"Password\" ref={passwordRef} />\r\n//                     <input className=\"input-field\" type=\"password\" placeholder=\"Confirm Password\" ref={confirmPasswordRef} />\r\n//                     <button type=\"submit\" className=\"submit-btn\">Create Employee</button>\r\n//                 </form>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}