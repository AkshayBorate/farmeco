{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder\\\\project\\\\src\\\\components\\\\Employee\\\\Dashboard.js\";\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import \"./Dashboard.css\";\n// import { Line } from \"react-chartjs-2\";\n// import { Chart as ChartJS, CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// // Registering the necessary chart components including PointElement\n// ChartJS.register(CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend);\n\n// const Dashboard = () => {\n//   const [metrics, setMetrics] = useState({\n//     totalWasteProcessed: 0,\n//     totalWasteRemaining: 0,\n//     totalCyclesCompleted: 0,\n//     availableProducts: 0,\n//     wasteIntakeData: [],\n//   });\n\n//   useEffect(() => {\n//     // Dummy data to simulate the fetch from an API\n//     const fetchData = () => {\n//       const data = {\n//         totalWasteProcessed: 1200,\n//         totalWasteRemaining: 300,\n//         totalCyclesCompleted: 15,\n//         availableProducts: 500,\n//         wasteIntakeData: [\n//           { date: \"2024-01-01\", volume: 100 },\n//           { date: \"2024-01-02\", volume: 150 },\n//           { date: \"2024-01-03\", volume: 200 },\n//           { date: \"2024-01-04\", volume: 180 },\n//           { date: \"2024-01-05\", volume: 210 },\n//           { date: \"2024-01-06\", volume: 250 },\n//         ],\n//       };\n//       setMetrics(data);\n//     };\n//     fetchData();\n//   }, []);\n\n//   const chartData = {\n//     labels: metrics.wasteIntakeData.map(item => item.date),\n//     datasets: [\n//       {\n//         label: \"Waste Intake Over Time\",\n//         data: metrics.wasteIntakeData.map(item => item.volume),\n//         borderColor: \"#4CAF50\", // Professional green\n//         backgroundColor: \"rgba(76, 175, 80, 0.2)\", // Light green for fill\n//         tension: 0.4,\n//       },\n//     ],\n//   };\n\n//   return (\n//     <div className=\"container\">\n//         <div className=\"row\">\n//     <div className=\"dashboard-container\">\n//       <h1 className=\"dashboard-title\">Waste Processing Dashboard</h1>\n\n//       <div className=\"dashboard-metrics\">\n//         <div className=\"metric-card\">\n//           <h2>Total Waste Processed</h2>\n//           <p>{metrics.totalWasteProcessed} tons</p>\n//         </div>\n//         <div className=\"metric-card\">\n//           <h2>Total Waste Remaining</h2>\n//           <p>{metrics.totalWasteRemaining} tons</p>\n//         </div>\n//         <div className=\"metric-card\">\n//           <h2>Completed Processing Cycles</h2>\n//           <p>{metrics.totalCyclesCompleted}</p>\n//         </div>\n//         <div className=\"metric-card\">\n//           <h2>Available Products</h2>\n//           <p>{metrics.availableProducts} units</p>\n//         </div>\n//       </div>\n\n//       <div className=\"metrics-visualization\">\n//         <h2 className=\"chart-title\">Waste Intake Over Time</h2>\n//         <Line data={chartData} options={{\n//           responsive: true,\n//           plugins: {\n//             tooltip: {\n//               mode: \"index\",\n//               intersect: false,\n//             },\n//             legend: {\n//               display: true,\n//               position: 'top',\n//             },\n//           },\n//           scales: {\n//             x: {\n//               type: \"category\", // Make sure the x-axis uses the category scale\n//               title: {\n//                 display: true,\n//                 text: \"Date\"\n//               },\n//             },\n//             y: {\n//               title: {\n//                 display: true,\n//                 text: \"Waste Volume (tons)\"\n//               },\n//               beginAtZero: true,\n//             },\n//           },\n//         }} />\n//       </div>\n\n//     </div>\n//     </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\nimport React from 'react';\n// import './Dashboard.module.css'; // Import the CSS module\n// import WasteItem from './components/WasteItem';\n// import ProcessingCard from './components/ProcessingCard';\n// import ProductListingCard from './components/ProductListingCard';\n\n// Dummy data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyIntakeData = [{\n  id: 1,\n  type: 'Organic Waste',\n  volume: 500,\n  source: 'Local Farm',\n  date: '2023-10-01'\n}, {\n  id: 2,\n  type: 'Plastic Waste',\n  volume: 300,\n  source: 'Community Center',\n  date: '2023-10-02'\n}];\nconst dummyProcessingData = [{\n  id: 1,\n  type: 'Organic Waste',\n  status: 'In Progress',\n  estimatedCompletion: '2023-10-05'\n}, {\n  id: 2,\n  type: 'Plastic Waste',\n  status: 'Completed',\n  estimatedCompletion: '2023-10-03'\n}];\nconst dummyProductData = [{\n  id: 1,\n  name: 'Organic Compost',\n  quantity: 200,\n  price: 15\n}, {\n  id: 2,\n  name: 'Recycled Plastic',\n  quantity: 100,\n  price: 25\n}];\nconst Dashboard = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Waste Processing Unit Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recent Waste Intakes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"intake-list\",\n        children: dummyIntakeData.map(item => /*#__PURE__*/_jsxDEV(WasteItem, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Processing Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"processing-list\",\n        children: dummyProcessingData.map(item => /*#__PURE__*/_jsxDEV(ProcessingCard, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Available Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-list\",\n        children: dummyProductData.map(item => /*#__PURE__*/_jsxDEV(ProductListingCard, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","dummyIntakeData","id","type","volume","source","date","dummyProcessingData","status","estimatedCompletion","dummyProductData","name","quantity","price","Dashboard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","WasteItem","ProcessingCard","ProductListingCard","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/New folder/project/src/components/Employee/Dashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"./Dashboard.css\";\r\n// import { Line } from \"react-chartjs-2\";\r\n// import { Chart as ChartJS, CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend } from \"chart.js\";\r\n\r\n// // Registering the necessary chart components including PointElement\r\n// ChartJS.register(CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend);\r\n\r\n// const Dashboard = () => {\r\n//   const [metrics, setMetrics] = useState({\r\n//     totalWasteProcessed: 0,\r\n//     totalWasteRemaining: 0,\r\n//     totalCyclesCompleted: 0,\r\n//     availableProducts: 0,\r\n//     wasteIntakeData: [],\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     // Dummy data to simulate the fetch from an API\r\n//     const fetchData = () => {\r\n//       const data = {\r\n//         totalWasteProcessed: 1200,\r\n//         totalWasteRemaining: 300,\r\n//         totalCyclesCompleted: 15,\r\n//         availableProducts: 500,\r\n//         wasteIntakeData: [\r\n//           { date: \"2024-01-01\", volume: 100 },\r\n//           { date: \"2024-01-02\", volume: 150 },\r\n//           { date: \"2024-01-03\", volume: 200 },\r\n//           { date: \"2024-01-04\", volume: 180 },\r\n//           { date: \"2024-01-05\", volume: 210 },\r\n//           { date: \"2024-01-06\", volume: 250 },\r\n//         ],\r\n//       };\r\n//       setMetrics(data);\r\n//     };\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const chartData = {\r\n//     labels: metrics.wasteIntakeData.map(item => item.date),\r\n//     datasets: [\r\n//       {\r\n//         label: \"Waste Intake Over Time\",\r\n//         data: metrics.wasteIntakeData.map(item => item.volume),\r\n//         borderColor: \"#4CAF50\", // Professional green\r\n//         backgroundColor: \"rgba(76, 175, 80, 0.2)\", // Light green for fill\r\n//         tension: 0.4,\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//         <div className=\"row\">\r\n//     <div className=\"dashboard-container\">\r\n//       <h1 className=\"dashboard-title\">Waste Processing Dashboard</h1>\r\n\r\n//       <div className=\"dashboard-metrics\">\r\n//         <div className=\"metric-card\">\r\n//           <h2>Total Waste Processed</h2>\r\n//           <p>{metrics.totalWasteProcessed} tons</p>\r\n//         </div>\r\n//         <div className=\"metric-card\">\r\n//           <h2>Total Waste Remaining</h2>\r\n//           <p>{metrics.totalWasteRemaining} tons</p>\r\n//         </div>\r\n//         <div className=\"metric-card\">\r\n//           <h2>Completed Processing Cycles</h2>\r\n//           <p>{metrics.totalCyclesCompleted}</p>\r\n//         </div>\r\n//         <div className=\"metric-card\">\r\n//           <h2>Available Products</h2>\r\n//           <p>{metrics.availableProducts} units</p>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"metrics-visualization\">\r\n//         <h2 className=\"chart-title\">Waste Intake Over Time</h2>\r\n//         <Line data={chartData} options={{\r\n//           responsive: true,\r\n//           plugins: {\r\n//             tooltip: {\r\n//               mode: \"index\",\r\n//               intersect: false,\r\n//             },\r\n//             legend: {\r\n//               display: true,\r\n//               position: 'top',\r\n//             },\r\n//           },\r\n//           scales: {\r\n//             x: {\r\n//               type: \"category\", // Make sure the x-axis uses the category scale\r\n//               title: {\r\n//                 display: true,\r\n//                 text: \"Date\"\r\n//               },\r\n//             },\r\n//             y: {\r\n//               title: {\r\n//                 display: true,\r\n//                 text: \"Waste Volume (tons)\"\r\n//               },\r\n//               beginAtZero: true,\r\n//             },\r\n//           },\r\n//         }} />\r\n//       </div>\r\n\r\n//     </div>\r\n//     </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\n\r\nimport React from 'react';\r\n// import './Dashboard.module.css'; // Import the CSS module\r\n// import WasteItem from './components/WasteItem';\r\n// import ProcessingCard from './components/ProcessingCard';\r\n// import ProductListingCard from './components/ProductListingCard';\r\n\r\n// Dummy data\r\nconst dummyIntakeData = [\r\n  { id: 1, type: 'Organic Waste', volume: 500, source: 'Local Farm', date: '2023-10-01' },\r\n  { id: 2, type: 'Plastic Waste', volume: 300, source: 'Community Center', date: '2023-10-02' },\r\n];\r\n\r\nconst dummyProcessingData = [\r\n  { id: 1, type: 'Organic Waste', status: 'In Progress', estimatedCompletion: '2023-10-05' },\r\n  { id: 2, type: 'Plastic Waste', status: 'Completed', estimatedCompletion: '2023-10-03' },\r\n];\r\n\r\nconst dummyProductData = [\r\n  { id: 1, name: 'Organic Compost', quantity: 200, price: 15 },\r\n  { id: 2, name: 'Recycled Plastic', quantity: 100, price: 25 },\r\n];\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1>Waste Processing Unit Dashboard</h1>\r\n      <section>\r\n        <h2>Recent Waste Intakes</h2>\r\n        <div className=\"intake-list\">\r\n          {dummyIntakeData.map(item => (\r\n            <WasteItem key={item.id} item={item} />\r\n          ))}\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <h2>Processing Status</h2>\r\n        <div className=\"processing-list\">\r\n          {dummyProcessingData.map(item => (\r\n            <ProcessingCard key={item.id} item={item} />\r\n          ))}\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <h2>Available Products</h2>\r\n        <div className=\"product-list\">\r\n          {dummyProductData.map(item => (\r\n            <ProductListingCard key={item.id} item={item} />\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}